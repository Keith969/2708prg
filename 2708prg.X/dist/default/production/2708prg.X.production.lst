

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Feb 20 09:59:22 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1789
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	cinit,global,class=CODE,merge=1,delta=2
    18                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    23                           	psect	clrtext,global,class=CODE,delta=2
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    25                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    27                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    28                           	psect	text1,local,class=CODE,merge=1,delta=2
    29                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text4,local,class=CODE,merge=1,delta=2
    32                           	psect	text5,local,class=CODE,merge=1,delta=2
    33                           	psect	text6,local,class=CODE,merge=1,delta=2
    34                           	psect	text7,local,class=CODE,merge=1,delta=2
    35                           	psect	text8,local,class=CODE,merge=1,delta=2
    36                           	psect	text9,local,class=CODE,merge=1,delta=2
    37                           	psect	text10,local,class=CODE,merge=1,delta=2
    38                           	psect	text11,local,class=CODE,merge=1,delta=2
    39                           	psect	text12,local,class=CODE,merge=1,delta=2
    40                           	psect	text13,local,class=CODE,merge=1,delta=2
    41                           	psect	text14,local,class=CODE,merge=1,delta=2
    42                           	psect	text15,local,class=CODE,merge=1,delta=2
    43                           	psect	text16,local,class=CODE,merge=1,delta=2
    44                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    45                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text25,local,class=CODE,merge=1,delta=2,group=3
    53                           	psect	text26,local,class=CODE,merge=1,delta=2,group=3
    54                           	psect	text27,local,class=CODE,merge=1,delta=2,group=3
    55                           	psect	text28,local,class=CODE,merge=1,delta=2,group=3
    56                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text31,local,class=CODE,merge=1,delta=2
    59                           	psect	text32,local,class=CODE,merge=1,delta=2
    60                           	psect	text33,local,class=CODE,merge=1,delta=2
    61                           	psect	text34,local,class=CODE,merge=1,delta=2,group=3
    62                           	psect	intentry,global,class=CODE,delta=2
    63                           	psect	text36,local,class=CODE,merge=1,delta=2
    64                           	psect	text37,local,class=CODE,merge=1,delta=2
    65                           	psect	text38,local,class=CODE,merge=1,delta=2
    66                           	psect	text39,local,class=CODE,merge=1,delta=2
    67                           	psect	text40,local,class=CODE,merge=1,delta=2
    68                           	psect	text41,local,class=CODE,merge=1,delta=2
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    70                           	dabs	1,0xCA0,32
    71                           	dabs	1,0xC20,80
    72                           	dabs	1,0xBA0,80
    73                           	dabs	1,0xB20,80
    74                           	dabs	1,0xAA0,80
    75                           	dabs	1,0xA20,80
    76                           	dabs	1,0x9A0,80
    77                           	dabs	1,0x920,80
    78                           	dabs	1,0x8A0,80
    79                           	dabs	1,0x820,80
    80                           	dabs	1,0x7A0,80
    81                           	dabs	1,0x720,80
    82                           	dabs	1,0x6A0,80
    83                           	dabs	1,0x650,32
    84                           	dabs	1,0x23F0,0,_queue
    85                           	dabs	1,0x7E,2
    86     0000                     
    87                           ; Generated 07/09/2023 GMT
    88                           ; 
    89                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution. Publication is not required when
   103                           ;        this file is used in an embedded application.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC16F1789 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121     0000                     	;# 
   122     0001                     	;# 
   123     0002                     	;# 
   124     0003                     	;# 
   125     0004                     	;# 
   126     0005                     	;# 
   127     0006                     	;# 
   128     0007                     	;# 
   129     0008                     	;# 
   130     0009                     	;# 
   131     000A                     	;# 
   132     000B                     	;# 
   133     000C                     	;# 
   134     000D                     	;# 
   135     000E                     	;# 
   136     000F                     	;# 
   137     0010                     	;# 
   138     0011                     	;# 
   139     0012                     	;# 
   140     0013                     	;# 
   141     0014                     	;# 
   142     0015                     	;# 
   143     0016                     	;# 
   144     0016                     	;# 
   145     0017                     	;# 
   146     0018                     	;# 
   147     0019                     	;# 
   148     001A                     	;# 
   149     001B                     	;# 
   150     001C                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     008F                     	;# 
   155     0090                     	;# 
   156     0091                     	;# 
   157     0092                     	;# 
   158     0093                     	;# 
   159     0094                     	;# 
   160     0095                     	;# 
   161     0096                     	;# 
   162     0097                     	;# 
   163     0098                     	;# 
   164     0099                     	;# 
   165     009A                     	;# 
   166     009B                     	;# 
   167     009B                     	;# 
   168     009C                     	;# 
   169     009D                     	;# 
   170     009E                     	;# 
   171     009F                     	;# 
   172     010C                     	;# 
   173     010D                     	;# 
   174     010E                     	;# 
   175     010F                     	;# 
   176     0110                     	;# 
   177     0111                     	;# 
   178     0112                     	;# 
   179     0113                     	;# 
   180     0114                     	;# 
   181     0115                     	;# 
   182     0116                     	;# 
   183     0117                     	;# 
   184     0118                     	;# 
   185     0119                     	;# 
   186     011A                     	;# 
   187     011B                     	;# 
   188     011C                     	;# 
   189     011D                     	;# 
   190     011D                     	;# 
   191     011D                     	;# 
   192     011E                     	;# 
   193     011F                     	;# 
   194     018C                     	;# 
   195     018D                     	;# 
   196     018E                     	;# 
   197     018F                     	;# 
   198     0190                     	;# 
   199     0191                     	;# 
   200     0191                     	;# 
   201     0192                     	;# 
   202     0193                     	;# 
   203     0193                     	;# 
   204     0193                     	;# 
   205     0194                     	;# 
   206     0195                     	;# 
   207     0196                     	;# 
   208     0197                     	;# 
   209     0199                     	;# 
   210     0199                     	;# 
   211     0199                     	;# 
   212     019A                     	;# 
   213     019A                     	;# 
   214     019A                     	;# 
   215     019B                     	;# 
   216     019B                     	;# 
   217     019B                     	;# 
   218     019B                     	;# 
   219     019B                     	;# 
   220     019C                     	;# 
   221     019C                     	;# 
   222     019C                     	;# 
   223     019D                     	;# 
   224     019D                     	;# 
   225     019D                     	;# 
   226     019E                     	;# 
   227     019E                     	;# 
   228     019E                     	;# 
   229     019F                     	;# 
   230     019F                     	;# 
   231     019F                     	;# 
   232     019F                     	;# 
   233     019F                     	;# 
   234     020C                     	;# 
   235     020D                     	;# 
   236     020E                     	;# 
   237     020F                     	;# 
   238     0210                     	;# 
   239     0211                     	;# 
   240     0211                     	;# 
   241     0212                     	;# 
   242     0212                     	;# 
   243     0213                     	;# 
   244     0213                     	;# 
   245     0214                     	;# 
   246     0214                     	;# 
   247     0215                     	;# 
   248     0215                     	;# 
   249     0215                     	;# 
   250     0215                     	;# 
   251     0216                     	;# 
   252     0216                     	;# 
   253     0217                     	;# 
   254     0217                     	;# 
   255     028C                     	;# 
   256     028D                     	;# 
   257     028E                     	;# 
   258     028F                     	;# 
   259     0290                     	;# 
   260     0291                     	;# 
   261     0291                     	;# 
   262     0292                     	;# 
   263     0293                     	;# 
   264     0298                     	;# 
   265     0298                     	;# 
   266     0299                     	;# 
   267     029A                     	;# 
   268     030C                     	;# 
   269     030D                     	;# 
   270     030E                     	;# 
   271     030F                     	;# 
   272     0310                     	;# 
   273     0311                     	;# 
   274     0311                     	;# 
   275     0312                     	;# 
   276     0313                     	;# 
   277     038C                     	;# 
   278     038D                     	;# 
   279     038E                     	;# 
   280     038F                     	;# 
   281     0390                     	;# 
   282     0391                     	;# 
   283     0392                     	;# 
   284     0393                     	;# 
   285     0394                     	;# 
   286     0395                     	;# 
   287     0396                     	;# 
   288     0397                     	;# 
   289     0398                     	;# 
   290     0399                     	;# 
   291     039D                     	;# 
   292     039E                     	;# 
   293     039F                     	;# 
   294     0511                     	;# 
   295     0513                     	;# 
   296     0515                     	;# 
   297     051A                     	;# 
   298     0591                     	;# 
   299     0592                     	;# 
   300     0592                     	;# 
   301     0593                     	;# 
   302     0594                     	;# 
   303     0594                     	;# 
   304     0595                     	;# 
   305     0596                     	;# 
   306     0596                     	;# 
   307     0E91                     	;# 
   308     0E92                     	;# 
   309     0E93                     	;# 
   310     0E94                     	;# 
   311     0E95                     	;# 
   312     0E96                     	;# 
   313     0E97                     	;# 
   314     0E98                     	;# 
   315     0E99                     	;# 
   316     0E9A                     	;# 
   317     0E9B                     	;# 
   318     0E9C                     	;# 
   319     0E9D                     	;# 
   320     0E9E                     	;# 
   321     0E9F                     	;# 
   322     0EA0                     	;# 
   323     0EA1                     	;# 
   324     0EA1                     	;# 
   325     0EA2                     	;# 
   326     0EA3                     	;# 
   327     0EA3                     	;# 
   328     0EA4                     	;# 
   329     0EA5                     	;# 
   330     0EA5                     	;# 
   331     0EA6                     	;# 
   332     0EA7                     	;# 
   333     0EA7                     	;# 
   334     0EA8                     	;# 
   335     0EA9                     	;# 
   336     0EAA                     	;# 
   337     0EAB                     	;# 
   338     0EAC                     	;# 
   339     0EAD                     	;# 
   340     0EAE                     	;# 
   341     0EAF                     	;# 
   342     0EB1                     	;# 
   343     0EB2                     	;# 
   344     0EB3                     	;# 
   345     0EB4                     	;# 
   346     0EB5                     	;# 
   347     0EB6                     	;# 
   348     0EB7                     	;# 
   349     0EB8                     	;# 
   350     0EB9                     	;# 
   351     0EBA                     	;# 
   352     0EBB                     	;# 
   353     0EBC                     	;# 
   354     0EBD                     	;# 
   355     0EBE                     	;# 
   356     0EBF                     	;# 
   357     0EC0                     	;# 
   358     0EC1                     	;# 
   359     0EC1                     	;# 
   360     0EC2                     	;# 
   361     0EC3                     	;# 
   362     0EC3                     	;# 
   363     0EC4                     	;# 
   364     0EC5                     	;# 
   365     0EC5                     	;# 
   366     0EC6                     	;# 
   367     0EC7                     	;# 
   368     0EC7                     	;# 
   369     0EC8                     	;# 
   370     0EC9                     	;# 
   371     0ECA                     	;# 
   372     0ECB                     	;# 
   373     0ECC                     	;# 
   374     0ECD                     	;# 
   375     0ECE                     	;# 
   376     0ECF                     	;# 
   377     0ED1                     	;# 
   378     0ED2                     	;# 
   379     0ED3                     	;# 
   380     0ED4                     	;# 
   381     0ED5                     	;# 
   382     0ED6                     	;# 
   383     0ED7                     	;# 
   384     0ED8                     	;# 
   385     0ED9                     	;# 
   386     0EDA                     	;# 
   387     0EDB                     	;# 
   388     0EDC                     	;# 
   389     0EDD                     	;# 
   390     0EDE                     	;# 
   391     0EDF                     	;# 
   392     0EE0                     	;# 
   393     0EE1                     	;# 
   394     0EE1                     	;# 
   395     0EE2                     	;# 
   396     0EE3                     	;# 
   397     0EE3                     	;# 
   398     0EE4                     	;# 
   399     0EE5                     	;# 
   400     0EE5                     	;# 
   401     0EE6                     	;# 
   402     0EE7                     	;# 
   403     0EE7                     	;# 
   404     0EE8                     	;# 
   405     0EE9                     	;# 
   406     0EEA                     	;# 
   407     0EEB                     	;# 
   408     0EEC                     	;# 
   409     0EED                     	;# 
   410     0EEE                     	;# 
   411     0EEF                     	;# 
   412     0F11                     	;# 
   413     0F12                     	;# 
   414     0F13                     	;# 
   415     0F14                     	;# 
   416     0F15                     	;# 
   417     0F16                     	;# 
   418     0F17                     	;# 
   419     0F18                     	;# 
   420     0F19                     	;# 
   421     0F1A                     	;# 
   422     0F1B                     	;# 
   423     0F1C                     	;# 
   424     0F1D                     	;# 
   425     0F1E                     	;# 
   426     0F1F                     	;# 
   427     0F20                     	;# 
   428     0F21                     	;# 
   429     0F21                     	;# 
   430     0F22                     	;# 
   431     0F23                     	;# 
   432     0F23                     	;# 
   433     0F24                     	;# 
   434     0F25                     	;# 
   435     0F25                     	;# 
   436     0F26                     	;# 
   437     0F27                     	;# 
   438     0F27                     	;# 
   439     0F28                     	;# 
   440     0F29                     	;# 
   441     0F2A                     	;# 
   442     0F2B                     	;# 
   443     0F2C                     	;# 
   444     0F2D                     	;# 
   445     0F2E                     	;# 
   446     0F2F                     	;# 
   447     0FE4                     	;# 
   448     0FE5                     	;# 
   449     0FE6                     	;# 
   450     0FE7                     	;# 
   451     0FE8                     	;# 
   452     0FE9                     	;# 
   453     0FEA                     	;# 
   454     0FEB                     	;# 
   455     0FED                     	;# 
   456     0FEE                     	;# 
   457     0FEF                     	;# 
   458     0000                     	;# 
   459     0001                     	;# 
   460     0002                     	;# 
   461     0003                     	;# 
   462     0004                     	;# 
   463     0005                     	;# 
   464     0006                     	;# 
   465     0007                     	;# 
   466     0008                     	;# 
   467     0009                     	;# 
   468     000A                     	;# 
   469     000B                     	;# 
   470     000C                     	;# 
   471     000D                     	;# 
   472     000E                     	;# 
   473     000F                     	;# 
   474     0010                     	;# 
   475     0011                     	;# 
   476     0012                     	;# 
   477     0013                     	;# 
   478     0014                     	;# 
   479     0015                     	;# 
   480     0016                     	;# 
   481     0016                     	;# 
   482     0017                     	;# 
   483     0018                     	;# 
   484     0019                     	;# 
   485     001A                     	;# 
   486     001B                     	;# 
   487     001C                     	;# 
   488     008C                     	;# 
   489     008D                     	;# 
   490     008E                     	;# 
   491     008F                     	;# 
   492     0090                     	;# 
   493     0091                     	;# 
   494     0092                     	;# 
   495     0093                     	;# 
   496     0094                     	;# 
   497     0095                     	;# 
   498     0096                     	;# 
   499     0097                     	;# 
   500     0098                     	;# 
   501     0099                     	;# 
   502     009A                     	;# 
   503     009B                     	;# 
   504     009B                     	;# 
   505     009C                     	;# 
   506     009D                     	;# 
   507     009E                     	;# 
   508     009F                     	;# 
   509     010C                     	;# 
   510     010D                     	;# 
   511     010E                     	;# 
   512     010F                     	;# 
   513     0110                     	;# 
   514     0111                     	;# 
   515     0112                     	;# 
   516     0113                     	;# 
   517     0114                     	;# 
   518     0115                     	;# 
   519     0116                     	;# 
   520     0117                     	;# 
   521     0118                     	;# 
   522     0119                     	;# 
   523     011A                     	;# 
   524     011B                     	;# 
   525     011C                     	;# 
   526     011D                     	;# 
   527     011D                     	;# 
   528     011D                     	;# 
   529     011E                     	;# 
   530     011F                     	;# 
   531     018C                     	;# 
   532     018D                     	;# 
   533     018E                     	;# 
   534     018F                     	;# 
   535     0190                     	;# 
   536     0191                     	;# 
   537     0191                     	;# 
   538     0192                     	;# 
   539     0193                     	;# 
   540     0193                     	;# 
   541     0193                     	;# 
   542     0194                     	;# 
   543     0195                     	;# 
   544     0196                     	;# 
   545     0197                     	;# 
   546     0199                     	;# 
   547     0199                     	;# 
   548     0199                     	;# 
   549     019A                     	;# 
   550     019A                     	;# 
   551     019A                     	;# 
   552     019B                     	;# 
   553     019B                     	;# 
   554     019B                     	;# 
   555     019B                     	;# 
   556     019B                     	;# 
   557     019C                     	;# 
   558     019C                     	;# 
   559     019C                     	;# 
   560     019D                     	;# 
   561     019D                     	;# 
   562     019D                     	;# 
   563     019E                     	;# 
   564     019E                     	;# 
   565     019E                     	;# 
   566     019F                     	;# 
   567     019F                     	;# 
   568     019F                     	;# 
   569     019F                     	;# 
   570     019F                     	;# 
   571     020C                     	;# 
   572     020D                     	;# 
   573     020E                     	;# 
   574     020F                     	;# 
   575     0210                     	;# 
   576     0211                     	;# 
   577     0211                     	;# 
   578     0212                     	;# 
   579     0212                     	;# 
   580     0213                     	;# 
   581     0213                     	;# 
   582     0214                     	;# 
   583     0214                     	;# 
   584     0215                     	;# 
   585     0215                     	;# 
   586     0215                     	;# 
   587     0215                     	;# 
   588     0216                     	;# 
   589     0216                     	;# 
   590     0217                     	;# 
   591     0217                     	;# 
   592     028C                     	;# 
   593     028D                     	;# 
   594     028E                     	;# 
   595     028F                     	;# 
   596     0290                     	;# 
   597     0291                     	;# 
   598     0291                     	;# 
   599     0292                     	;# 
   600     0293                     	;# 
   601     0298                     	;# 
   602     0298                     	;# 
   603     0299                     	;# 
   604     029A                     	;# 
   605     030C                     	;# 
   606     030D                     	;# 
   607     030E                     	;# 
   608     030F                     	;# 
   609     0310                     	;# 
   610     0311                     	;# 
   611     0311                     	;# 
   612     0312                     	;# 
   613     0313                     	;# 
   614     038C                     	;# 
   615     038D                     	;# 
   616     038E                     	;# 
   617     038F                     	;# 
   618     0390                     	;# 
   619     0391                     	;# 
   620     0392                     	;# 
   621     0393                     	;# 
   622     0394                     	;# 
   623     0395                     	;# 
   624     0396                     	;# 
   625     0397                     	;# 
   626     0398                     	;# 
   627     0399                     	;# 
   628     039D                     	;# 
   629     039E                     	;# 
   630     039F                     	;# 
   631     0511                     	;# 
   632     0513                     	;# 
   633     0515                     	;# 
   634     051A                     	;# 
   635     0591                     	;# 
   636     0592                     	;# 
   637     0592                     	;# 
   638     0593                     	;# 
   639     0594                     	;# 
   640     0594                     	;# 
   641     0595                     	;# 
   642     0596                     	;# 
   643     0596                     	;# 
   644     0E91                     	;# 
   645     0E92                     	;# 
   646     0E93                     	;# 
   647     0E94                     	;# 
   648     0E95                     	;# 
   649     0E96                     	;# 
   650     0E97                     	;# 
   651     0E98                     	;# 
   652     0E99                     	;# 
   653     0E9A                     	;# 
   654     0E9B                     	;# 
   655     0E9C                     	;# 
   656     0E9D                     	;# 
   657     0E9E                     	;# 
   658     0E9F                     	;# 
   659     0EA0                     	;# 
   660     0EA1                     	;# 
   661     0EA1                     	;# 
   662     0EA2                     	;# 
   663     0EA3                     	;# 
   664     0EA3                     	;# 
   665     0EA4                     	;# 
   666     0EA5                     	;# 
   667     0EA5                     	;# 
   668     0EA6                     	;# 
   669     0EA7                     	;# 
   670     0EA7                     	;# 
   671     0EA8                     	;# 
   672     0EA9                     	;# 
   673     0EAA                     	;# 
   674     0EAB                     	;# 
   675     0EAC                     	;# 
   676     0EAD                     	;# 
   677     0EAE                     	;# 
   678     0EAF                     	;# 
   679     0EB1                     	;# 
   680     0EB2                     	;# 
   681     0EB3                     	;# 
   682     0EB4                     	;# 
   683     0EB5                     	;# 
   684     0EB6                     	;# 
   685     0EB7                     	;# 
   686     0EB8                     	;# 
   687     0EB9                     	;# 
   688     0EBA                     	;# 
   689     0EBB                     	;# 
   690     0EBC                     	;# 
   691     0EBD                     	;# 
   692     0EBE                     	;# 
   693     0EBF                     	;# 
   694     0EC0                     	;# 
   695     0EC1                     	;# 
   696     0EC1                     	;# 
   697     0EC2                     	;# 
   698     0EC3                     	;# 
   699     0EC3                     	;# 
   700     0EC4                     	;# 
   701     0EC5                     	;# 
   702     0EC5                     	;# 
   703     0EC6                     	;# 
   704     0EC7                     	;# 
   705     0EC7                     	;# 
   706     0EC8                     	;# 
   707     0EC9                     	;# 
   708     0ECA                     	;# 
   709     0ECB                     	;# 
   710     0ECC                     	;# 
   711     0ECD                     	;# 
   712     0ECE                     	;# 
   713     0ECF                     	;# 
   714     0ED1                     	;# 
   715     0ED2                     	;# 
   716     0ED3                     	;# 
   717     0ED4                     	;# 
   718     0ED5                     	;# 
   719     0ED6                     	;# 
   720     0ED7                     	;# 
   721     0ED8                     	;# 
   722     0ED9                     	;# 
   723     0EDA                     	;# 
   724     0EDB                     	;# 
   725     0EDC                     	;# 
   726     0EDD                     	;# 
   727     0EDE                     	;# 
   728     0EDF                     	;# 
   729     0EE0                     	;# 
   730     0EE1                     	;# 
   731     0EE1                     	;# 
   732     0EE2                     	;# 
   733     0EE3                     	;# 
   734     0EE3                     	;# 
   735     0EE4                     	;# 
   736     0EE5                     	;# 
   737     0EE5                     	;# 
   738     0EE6                     	;# 
   739     0EE7                     	;# 
   740     0EE7                     	;# 
   741     0EE8                     	;# 
   742     0EE9                     	;# 
   743     0EEA                     	;# 
   744     0EEB                     	;# 
   745     0EEC                     	;# 
   746     0EED                     	;# 
   747     0EEE                     	;# 
   748     0EEF                     	;# 
   749     0F11                     	;# 
   750     0F12                     	;# 
   751     0F13                     	;# 
   752     0F14                     	;# 
   753     0F15                     	;# 
   754     0F16                     	;# 
   755     0F17                     	;# 
   756     0F18                     	;# 
   757     0F19                     	;# 
   758     0F1A                     	;# 
   759     0F1B                     	;# 
   760     0F1C                     	;# 
   761     0F1D                     	;# 
   762     0F1E                     	;# 
   763     0F1F                     	;# 
   764     0F20                     	;# 
   765     0F21                     	;# 
   766     0F21                     	;# 
   767     0F22                     	;# 
   768     0F23                     	;# 
   769     0F23                     	;# 
   770     0F24                     	;# 
   771     0F25                     	;# 
   772     0F25                     	;# 
   773     0F26                     	;# 
   774     0F27                     	;# 
   775     0F27                     	;# 
   776     0F28                     	;# 
   777     0F29                     	;# 
   778     0F2A                     	;# 
   779     0F2B                     	;# 
   780     0F2C                     	;# 
   781     0F2D                     	;# 
   782     0F2E                     	;# 
   783     0F2F                     	;# 
   784     0FE4                     	;# 
   785     0FE5                     	;# 
   786     0FE6                     	;# 
   787     0FE7                     	;# 
   788     0FE8                     	;# 
   789     0FE9                     	;# 
   790     0FEA                     	;# 
   791     0FEB                     	;# 
   792     0FED                     	;# 
   793     0FEE                     	;# 
   794     0FEF                     	;# 
   795     0000                     	;# 
   796     0001                     	;# 
   797     0002                     	;# 
   798     0003                     	;# 
   799     0004                     	;# 
   800     0005                     	;# 
   801     0006                     	;# 
   802     0007                     	;# 
   803     0008                     	;# 
   804     0009                     	;# 
   805     000A                     	;# 
   806     000B                     	;# 
   807     000C                     	;# 
   808     000D                     	;# 
   809     000E                     	;# 
   810     000F                     	;# 
   811     0010                     	;# 
   812     0011                     	;# 
   813     0012                     	;# 
   814     0013                     	;# 
   815     0014                     	;# 
   816     0015                     	;# 
   817     0016                     	;# 
   818     0016                     	;# 
   819     0017                     	;# 
   820     0018                     	;# 
   821     0019                     	;# 
   822     001A                     	;# 
   823     001B                     	;# 
   824     001C                     	;# 
   825     008C                     	;# 
   826     008D                     	;# 
   827     008E                     	;# 
   828     008F                     	;# 
   829     0090                     	;# 
   830     0091                     	;# 
   831     0092                     	;# 
   832     0093                     	;# 
   833     0094                     	;# 
   834     0095                     	;# 
   835     0096                     	;# 
   836     0097                     	;# 
   837     0098                     	;# 
   838     0099                     	;# 
   839     009A                     	;# 
   840     009B                     	;# 
   841     009B                     	;# 
   842     009C                     	;# 
   843     009D                     	;# 
   844     009E                     	;# 
   845     009F                     	;# 
   846     010C                     	;# 
   847     010D                     	;# 
   848     010E                     	;# 
   849     010F                     	;# 
   850     0110                     	;# 
   851     0111                     	;# 
   852     0112                     	;# 
   853     0113                     	;# 
   854     0114                     	;# 
   855     0115                     	;# 
   856     0116                     	;# 
   857     0117                     	;# 
   858     0118                     	;# 
   859     0119                     	;# 
   860     011A                     	;# 
   861     011B                     	;# 
   862     011C                     	;# 
   863     011D                     	;# 
   864     011D                     	;# 
   865     011D                     	;# 
   866     011E                     	;# 
   867     011F                     	;# 
   868     018C                     	;# 
   869     018D                     	;# 
   870     018E                     	;# 
   871     018F                     	;# 
   872     0190                     	;# 
   873     0191                     	;# 
   874     0191                     	;# 
   875     0192                     	;# 
   876     0193                     	;# 
   877     0193                     	;# 
   878     0193                     	;# 
   879     0194                     	;# 
   880     0195                     	;# 
   881     0196                     	;# 
   882     0197                     	;# 
   883     0199                     	;# 
   884     0199                     	;# 
   885     0199                     	;# 
   886     019A                     	;# 
   887     019A                     	;# 
   888     019A                     	;# 
   889     019B                     	;# 
   890     019B                     	;# 
   891     019B                     	;# 
   892     019B                     	;# 
   893     019B                     	;# 
   894     019C                     	;# 
   895     019C                     	;# 
   896     019C                     	;# 
   897     019D                     	;# 
   898     019D                     	;# 
   899     019D                     	;# 
   900     019E                     	;# 
   901     019E                     	;# 
   902     019E                     	;# 
   903     019F                     	;# 
   904     019F                     	;# 
   905     019F                     	;# 
   906     019F                     	;# 
   907     019F                     	;# 
   908     020C                     	;# 
   909     020D                     	;# 
   910     020E                     	;# 
   911     020F                     	;# 
   912     0210                     	;# 
   913     0211                     	;# 
   914     0211                     	;# 
   915     0212                     	;# 
   916     0212                     	;# 
   917     0213                     	;# 
   918     0213                     	;# 
   919     0214                     	;# 
   920     0214                     	;# 
   921     0215                     	;# 
   922     0215                     	;# 
   923     0215                     	;# 
   924     0215                     	;# 
   925     0216                     	;# 
   926     0216                     	;# 
   927     0217                     	;# 
   928     0217                     	;# 
   929     028C                     	;# 
   930     028D                     	;# 
   931     028E                     	;# 
   932     028F                     	;# 
   933     0290                     	;# 
   934     0291                     	;# 
   935     0291                     	;# 
   936     0292                     	;# 
   937     0293                     	;# 
   938     0298                     	;# 
   939     0298                     	;# 
   940     0299                     	;# 
   941     029A                     	;# 
   942     030C                     	;# 
   943     030D                     	;# 
   944     030E                     	;# 
   945     030F                     	;# 
   946     0310                     	;# 
   947     0311                     	;# 
   948     0311                     	;# 
   949     0312                     	;# 
   950     0313                     	;# 
   951     038C                     	;# 
   952     038D                     	;# 
   953     038E                     	;# 
   954     038F                     	;# 
   955     0390                     	;# 
   956     0391                     	;# 
   957     0392                     	;# 
   958     0393                     	;# 
   959     0394                     	;# 
   960     0395                     	;# 
   961     0396                     	;# 
   962     0397                     	;# 
   963     0398                     	;# 
   964     0399                     	;# 
   965     039D                     	;# 
   966     039E                     	;# 
   967     039F                     	;# 
   968     0511                     	;# 
   969     0513                     	;# 
   970     0515                     	;# 
   971     051A                     	;# 
   972     0591                     	;# 
   973     0592                     	;# 
   974     0592                     	;# 
   975     0593                     	;# 
   976     0594                     	;# 
   977     0594                     	;# 
   978     0595                     	;# 
   979     0596                     	;# 
   980     0596                     	;# 
   981     0E91                     	;# 
   982     0E92                     	;# 
   983     0E93                     	;# 
   984     0E94                     	;# 
   985     0E95                     	;# 
   986     0E96                     	;# 
   987     0E97                     	;# 
   988     0E98                     	;# 
   989     0E99                     	;# 
   990     0E9A                     	;# 
   991     0E9B                     	;# 
   992     0E9C                     	;# 
   993     0E9D                     	;# 
   994     0E9E                     	;# 
   995     0E9F                     	;# 
   996     0EA0                     	;# 
   997     0EA1                     	;# 
   998     0EA1                     	;# 
   999     0EA2                     	;# 
  1000     0EA3                     	;# 
  1001     0EA3                     	;# 
  1002     0EA4                     	;# 
  1003     0EA5                     	;# 
  1004     0EA5                     	;# 
  1005     0EA6                     	;# 
  1006     0EA7                     	;# 
  1007     0EA7                     	;# 
  1008     0EA8                     	;# 
  1009     0EA9                     	;# 
  1010     0EAA                     	;# 
  1011     0EAB                     	;# 
  1012     0EAC                     	;# 
  1013     0EAD                     	;# 
  1014     0EAE                     	;# 
  1015     0EAF                     	;# 
  1016     0EB1                     	;# 
  1017     0EB2                     	;# 
  1018     0EB3                     	;# 
  1019     0EB4                     	;# 
  1020     0EB5                     	;# 
  1021     0EB6                     	;# 
  1022     0EB7                     	;# 
  1023     0EB8                     	;# 
  1024     0EB9                     	;# 
  1025     0EBA                     	;# 
  1026     0EBB                     	;# 
  1027     0EBC                     	;# 
  1028     0EBD                     	;# 
  1029     0EBE                     	;# 
  1030     0EBF                     	;# 
  1031     0EC0                     	;# 
  1032     0EC1                     	;# 
  1033     0EC1                     	;# 
  1034     0EC2                     	;# 
  1035     0EC3                     	;# 
  1036     0EC3                     	;# 
  1037     0EC4                     	;# 
  1038     0EC5                     	;# 
  1039     0EC5                     	;# 
  1040     0EC6                     	;# 
  1041     0EC7                     	;# 
  1042     0EC7                     	;# 
  1043     0EC8                     	;# 
  1044     0EC9                     	;# 
  1045     0ECA                     	;# 
  1046     0ECB                     	;# 
  1047     0ECC                     	;# 
  1048     0ECD                     	;# 
  1049     0ECE                     	;# 
  1050     0ECF                     	;# 
  1051     0ED1                     	;# 
  1052     0ED2                     	;# 
  1053     0ED3                     	;# 
  1054     0ED4                     	;# 
  1055     0ED5                     	;# 
  1056     0ED6                     	;# 
  1057     0ED7                     	;# 
  1058     0ED8                     	;# 
  1059     0ED9                     	;# 
  1060     0EDA                     	;# 
  1061     0EDB                     	;# 
  1062     0EDC                     	;# 
  1063     0EDD                     	;# 
  1064     0EDE                     	;# 
  1065     0EDF                     	;# 
  1066     0EE0                     	;# 
  1067     0EE1                     	;# 
  1068     0EE1                     	;# 
  1069     0EE2                     	;# 
  1070     0EE3                     	;# 
  1071     0EE3                     	;# 
  1072     0EE4                     	;# 
  1073     0EE5                     	;# 
  1074     0EE5                     	;# 
  1075     0EE6                     	;# 
  1076     0EE7                     	;# 
  1077     0EE7                     	;# 
  1078     0EE8                     	;# 
  1079     0EE9                     	;# 
  1080     0EEA                     	;# 
  1081     0EEB                     	;# 
  1082     0EEC                     	;# 
  1083     0EED                     	;# 
  1084     0EEE                     	;# 
  1085     0EEF                     	;# 
  1086     0F11                     	;# 
  1087     0F12                     	;# 
  1088     0F13                     	;# 
  1089     0F14                     	;# 
  1090     0F15                     	;# 
  1091     0F16                     	;# 
  1092     0F17                     	;# 
  1093     0F18                     	;# 
  1094     0F19                     	;# 
  1095     0F1A                     	;# 
  1096     0F1B                     	;# 
  1097     0F1C                     	;# 
  1098     0F1D                     	;# 
  1099     0F1E                     	;# 
  1100     0F1F                     	;# 
  1101     0F20                     	;# 
  1102     0F21                     	;# 
  1103     0F21                     	;# 
  1104     0F22                     	;# 
  1105     0F23                     	;# 
  1106     0F23                     	;# 
  1107     0F24                     	;# 
  1108     0F25                     	;# 
  1109     0F25                     	;# 
  1110     0F26                     	;# 
  1111     0F27                     	;# 
  1112     0F27                     	;# 
  1113     0F28                     	;# 
  1114     0F29                     	;# 
  1115     0F2A                     	;# 
  1116     0F2B                     	;# 
  1117     0F2C                     	;# 
  1118     0F2D                     	;# 
  1119     0F2E                     	;# 
  1120     0F2F                     	;# 
  1121     0FE4                     	;# 
  1122     0FE5                     	;# 
  1123     0FE6                     	;# 
  1124     0FE7                     	;# 
  1125     0FE8                     	;# 
  1126     0FE9                     	;# 
  1127     0FEA                     	;# 
  1128     0FEB                     	;# 
  1129     0FED                     	;# 
  1130     0FEE                     	;# 
  1131     0FEF                     	;_queue
  1132                           
  1133                           	psect	idataBANK0
  1134     07FE                     __pidataBANK0:
  1135                           
  1136                           ;initializer for _tail
  1137     07FE  34FF               	retlw	255
  1138     07FF  3403               	retlw	3
  1139     0011                     _PIR1bits	set	17
  1140     000D                     _PORTBbits	set	13
  1141     000F                     _PORTD	set	15
  1142     000E                     _PORTCbits	set	14
  1143     000B                     _INTCONbits	set	11
  1144     0010                     _PORTEbits	set	16
  1145     000C                     _PORTAbits	set	12
  1146     0090                     _TRISEbits	set	144
  1147     008F                     _TRISD	set	143
  1148     008E                     _TRISCbits	set	142
  1149     008D                     _TRISB	set	141
  1150     008C                     _TRISAbits	set	140
  1151     009D                     _ADCON0bits	set	157
  1152     0091                     _PIE1bits	set	145
  1153     010F                     _LATD	set	271
  1154     010C                     _LATA	set	268
  1155     010D                     _LATB	set	269
  1156     019B                     _SPBRG	set	411
  1157     019A                     _TXREG	set	410
  1158     0199                     _RCREG	set	409
  1159     019C                     _SPBRGH	set	412
  1160     019E                     _TXSTAbits	set	414
  1161     019D                     _RCSTAbits	set	413
  1162     019F                     _BAUDCONbits	set	415
  1163     018F                     _ANSELD	set	399
  1164     018E                     _ANSELC	set	398
  1165     018D                     _ANSELB	set	397
  1166     018C                     _ANSELA	set	396
  1167                           
  1168                           	psect	stringtext1
  1169     1000                     __pstringtext1:
  1170     1000                     STR_3:
  1171     1000  3445               	retlw	69	;'E'
  1172     1001  3472               	retlw	114	;'r'
  1173     1002  3461               	retlw	97	;'a'
  1174     1003  3473               	retlw	115	;'s'
  1175     1004  3465               	retlw	101	;'e'
  1176     1005  3420               	retlw	32	;' '
  1177     1006  3463               	retlw	99	;'c'
  1178     1007  3468               	retlw	104	;'h'
  1179     1008  3465               	retlw	101	;'e'
  1180     1009  3463               	retlw	99	;'c'
  1181     100A  346B               	retlw	107	;'k'
  1182     100B  3420               	retlw	32	;' '
  1183     100C  3466               	retlw	102	;'f'
  1184     100D  3461               	retlw	97	;'a'
  1185     100E  3469               	retlw	105	;'i'
  1186     100F  346C               	retlw	108	;'l'
  1187     1010  3420               	retlw	32	;' '
  1188     1011  3461               	retlw	97	;'a'
  1189     1012  3474               	retlw	116	;'t'
  1190     1013  3420               	retlw	32	;' '
  1191     1014  3461               	retlw	97	;'a'
  1192     1015  3464               	retlw	100	;'d'
  1193     1016  3464               	retlw	100	;'d'
  1194     1017  3472               	retlw	114	;'r'
  1195     1018  3465               	retlw	101	;'e'
  1196     1019  3473               	retlw	115	;'s'
  1197     101A  3473               	retlw	115	;'s'
  1198     101B  3420               	retlw	32	;' '
  1199     101C  3400               	retlw	0
  1200                           
  1201                           	psect	stringtext2
  1202     101D                     __pstringtext2:
  1203     101D                     STR_6:
  1204     101D  3445               	retlw	69	;'E'
  1205     101E  3472               	retlw	114	;'r'
  1206     101F  3461               	retlw	97	;'a'
  1207     1020  3473               	retlw	115	;'s'
  1208     1021  3465               	retlw	101	;'e'
  1209     1022  3420               	retlw	32	;' '
  1210     1023  3463               	retlw	99	;'c'
  1211     1024  3468               	retlw	104	;'h'
  1212     1025  3465               	retlw	101	;'e'
  1213     1026  3463               	retlw	99	;'c'
  1214     1027  346B               	retlw	107	;'k'
  1215     1028  3420               	retlw	32	;' '
  1216     1029  3470               	retlw	112	;'p'
  1217     102A  3461               	retlw	97	;'a'
  1218     102B  3473               	retlw	115	;'s'
  1219     102C  3473               	retlw	115	;'s'
  1220     102D  3465               	retlw	101	;'e'
  1221     102E  3464               	retlw	100	;'d'
  1222     102F  342E               	retlw	46	;'.'
  1223     1030  340A               	retlw	10
  1224     1031  3400               	retlw	0
  1225                           
  1226                           	psect	stringtext3
  1227     1032                     __pstringtext3:
  1228     1032                     STR_11:
  1229     1032  3457               	retlw	87	;'W'
  1230     1033  3472               	retlw	114	;'r'
  1231     1034  3469               	retlw	105	;'i'
  1232     1035  3474               	retlw	116	;'t'
  1233     1036  3465               	retlw	101	;'e'
  1234     1037  3420               	retlw	32	;' '
  1235     1038  3463               	retlw	99	;'c'
  1236     1039  346F               	retlw	111	;'o'
  1237     103A  346D               	retlw	109	;'m'
  1238     103B  3470               	retlw	112	;'p'
  1239     103C  346C               	retlw	108	;'l'
  1240     103D  3465               	retlw	101	;'e'
  1241     103E  3474               	retlw	116	;'t'
  1242     103F  3465               	retlw	101	;'e'
  1243     1040  3464               	retlw	100	;'d'
  1244     1041  342E               	retlw	46	;'.'
  1245     1042  340A               	retlw	10
  1246     1043  3400               	retlw	0
  1247                           
  1248                           	psect	stringtext4
  1249     1044                     __pstringtext4:
  1250     1044                     STR_10:
  1251     1044  3457               	retlw	87	;'W'
  1252     1045  3472               	retlw	114	;'r'
  1253     1046  3469               	retlw	105	;'i'
  1254     1047  3474               	retlw	116	;'t'
  1255     1048  3465               	retlw	101	;'e'
  1256     1049  3420               	retlw	32	;' '
  1257     104A  3461               	retlw	97	;'a'
  1258     104B  3462               	retlw	98	;'b'
  1259     104C  346F               	retlw	111	;'o'
  1260     104D  3472               	retlw	114	;'r'
  1261     104E  3474               	retlw	116	;'t'
  1262     104F  3465               	retlw	101	;'e'
  1263     1050  3464               	retlw	100	;'d'
  1264     1051  340A               	retlw	10
  1265     1052  3400               	retlw	0
  1266                           
  1267                           	psect	stringtext5
  1268     1053                     __pstringtext5:
  1269     1053                     STR_2:
  1270     1053  3443               	retlw	67	;'C'
  1271     1054  3468               	retlw	104	;'h'
  1272     1055  3465               	retlw	101	;'e'
  1273     1056  3463               	retlw	99	;'c'
  1274     1057  346B               	retlw	107	;'k'
  1275     1058  3420               	retlw	32	;' '
  1276     1059  3461               	retlw	97	;'a'
  1277     105A  3462               	retlw	98	;'b'
  1278     105B  346F               	retlw	111	;'o'
  1279     105C  3472               	retlw	114	;'r'
  1280     105D  3474               	retlw	116	;'t'
  1281     105E  3465               	retlw	101	;'e'
  1282     105F  3464               	retlw	100	;'d'
  1283     1060  340A               	retlw	10
  1284     1061  3400               	retlw	0
  1285                           
  1286                           	psect	stringtext6
  1287     1062                     __pstringtext6:
  1288     1062                     STR_7:
  1289     1062  3452               	retlw	82	;'R'
  1290     1063  3465               	retlw	101	;'e'
  1291     1064  3461               	retlw	97	;'a'
  1292     1065  3464               	retlw	100	;'d'
  1293     1066  3420               	retlw	32	;' '
  1294     1067  3461               	retlw	97	;'a'
  1295     1068  3462               	retlw	98	;'b'
  1296     1069  346F               	retlw	111	;'o'
  1297     106A  3472               	retlw	114	;'r'
  1298     106B  3474               	retlw	116	;'t'
  1299     106C  3465               	retlw	101	;'e'
  1300     106D  3464               	retlw	100	;'d'
  1301     106E  340A               	retlw	10
  1302     106F  3400               	retlw	0
  1303                           
  1304                           	psect	stringtext7
  1305     1070                     __pstringtext7:
  1306     1070                     STR_4:
  1307     1070  3430               	retlw	48	;'0'
  1308     1071  3478               	retlw	120	;'x'
  1309     1072  3425               	retlw	37	;'%'
  1310     1073  3430               	retlw	48	;'0'
  1311     1074  3434               	retlw	52	;'4'
  1312     1075  3478               	retlw	120	;'x'
  1313     1076  3420               	retlw	32	;' '
  1314     1077  343D               	retlw	61	;'='
  1315     1078  3420               	retlw	32	;' '
  1316     1079  3400               	retlw	0
  1317                           
  1318                           	psect	stringtext8
  1319     107A                     __pstringtext8:
  1320     107A                     STR_5:
  1321     107A  3430               	retlw	48	;'0'
  1322     107B  3478               	retlw	120	;'x'
  1323     107C  3425               	retlw	37	;'%'
  1324     107D  3430               	retlw	48	;'0'
  1325     107E  3432               	retlw	50	;'2'
  1326     107F  3478               	retlw	120	;'x'
  1327     1080  340A               	retlw	10
  1328     1081  3400               	retlw	0
  1329                           
  1330                           	psect	stringtext9
  1331     1082                     __pstringtext9:
  1332     1082                     STR_8:
  1333     1082  3425               	retlw	37	;'%'
  1334     1083  3430               	retlw	48	;'0'
  1335     1084  3434               	retlw	52	;'4'
  1336     1085  3478               	retlw	120	;'x'
  1337     1086  343A               	retlw	58	;':'
  1338     1087  3420               	retlw	32	;' '
  1339     1088  3400               	retlw	0
  1340                           
  1341                           	psect	stringtext10
  1342     1089                     __pstringtext10:
  1343     1089                     STR_9:
  1344     1089  3425               	retlw	37	;'%'
  1345     108A  3430               	retlw	48	;'0'
  1346     108B  3432               	retlw	50	;'2'
  1347     108C  3478               	retlw	120	;'x'
  1348     108D  3400               	retlw	0
  1349                           
  1350                           	psect	stringtext11
  1351     108E                     __pstringtext11:
  1352     108E                     STR_1:
  1353     108E  3425               	retlw	37	;'%'
  1354     108F  3464               	retlw	100	;'d'
  1355     1090  340A               	retlw	10
  1356     1091  3400               	retlw	0
  1357                           
  1358                           	psect	stringtext12
  1359     0000                     __pstringtext12:
  1360                           
  1361                           	psect	cinit
  1362     0042                     start_initialization:	
  1363                           ; #config settings
  1364                           
  1365     0042                     __initialization:	;BIGRAM
  1366                           
  1367                           ; Initialize objects allocated to BANK0
  1368     0042  3187  27FE  3180   	fcall	__pidataBANK0	;fetch initializer
  1369     0045  00E7               	movwf	__pdataBANK0& (0+127)
  1370     0046  3187  27FF  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1371     0049  00E8               	movwf	(__pdataBANK0+1)& (0+127)
  1372                           
  1373                           ; Clear objects allocated to BIGRAM
  1374     004A  30F0               	movlw	low (0+9200)
  1375     004B  0084               	movwf	4
  1376     004C  3023               	movlw	high (0+9200)
  1377     004D  0085               	movwf	5
  1378     004E  3000               	movlw	0
  1379     004F  00FE               	movwf	btemp
  1380     0050  3004               	movlw	4
  1381     0051  00FF               	movwf	btemp+1
  1382     0052  318D  2540  3180   	fcall	clear_ram0
  1383                           
  1384                           ; Clear objects allocated to COMMON
  1385     0055  01FC               	clrf	__pbssCOMMON& (0+127)
  1386     0056  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  1387                           
  1388                           ; Clear objects allocated to BANK0
  1389     0057  01E5               	clrf	__pbssBANK0& (0+127)
  1390     0058  01E6               	clrf	(__pbssBANK0+1)& (0+127)
  1391                           
  1392                           ; Clear objects allocated to BANK1
  1393     0059  0021               	movlb	1	; select bank1
  1394     005A  01E5               	clrf	__pbssBANK1& (0+127)
  1395     005B  01E6               	clrf	(__pbssBANK1+1)& (0+127)
  1396     005C  01E7               	clrf	(__pbssBANK1+2)& (0+127)
  1397     005D  01E8               	clrf	(__pbssBANK1+3)& (0+127)
  1398     005E  01E9               	clrf	(__pbssBANK1+4)& (0+127)
  1399     005F  01EA               	clrf	(__pbssBANK1+5)& (0+127)
  1400     0060  01EB               	clrf	(__pbssBANK1+6)& (0+127)
  1401     0061  01EC               	clrf	(__pbssBANK1+7)& (0+127)
  1402     0062  01ED               	clrf	(__pbssBANK1+8)& (0+127)
  1403                           
  1404                           ; Clear objects allocated to BANK2
  1405     0063  3020               	movlw	low __pbssBANK2
  1406     0064  0084               	movwf	4
  1407     0065  3001               	movlw	high __pbssBANK2
  1408     0066  0085               	movwf	5
  1409     0067  3020               	movlw	32
  1410     0068  00FE               	movwf	btemp
  1411     0069  3000               	movlw	0
  1412     006A  00FF               	movwf	btemp+1
  1413     006B  318D  2540  3180   	fcall	clear_ram0
  1414     006E                     end_of_initialization:	
  1415                           ;End of C runtime variable initialization code
  1416                           
  1417     006E                     __end_of__initialization:
  1418     006E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1419     006F  0020               	movlb	0
  1420     0070  3185  2D40         	ljmp	_main	;jump to C main() function
  1421                           
  1422                           	psect	bssCOMMON
  1423     007C                     __pbssCOMMON:
  1424     007C                     _head:
  1425     007C                     	ds	2
  1426                           
  1427                           	psect	bssBANK0
  1428     0065                     __pbssBANK0:
  1429     0065                     _flags:
  1430     0065                     	ds	1
  1431     0066                     _uart_ready:
  1432     0066                     	ds	1
  1433                           
  1434                           	psect	dataBANK0
  1435     0067                     __pdataBANK0:
  1436     0067                     _tail:
  1437     0067                     	ds	2
  1438                           
  1439                           	psect	bssBANK1
  1440     00E5                     __pbssBANK1:
  1441     00E5                     _width:
  1442     00E5                     	ds	2
  1443     00E7                     _prec:
  1444     00E7                     	ds	2
  1445     00E9                     _bytes_popped:
  1446     00E9                     	ds	2
  1447     00EB                     _bytes_pushed:
  1448     00EB                     	ds	2
  1449     00ED                     _cmd_active:
  1450     00ED                     	ds	1
  1451                           
  1452                           	psect	bssBANK2
  1453     0120                     __pbssBANK2:
  1454     0120                     _dbuf:
  1455     0120                     	ds	32
  1456                           
  1457                           	psect	clrtext
  1458     0D40                     clear_ram0:	
  1459                           ;	Called with FSR0 containing the base address, and
  1460                           ;	btemp/btemp+1 has the size to clear
  1461                           
  1462     0D40  0064               	clrwdt	;clear the watchdog before getting into this loop
  1463     0D41                     clrloop0:
  1464     0D41  0180               	clrf	0	;clear RAM location pointed to by FSR
  1465     0D42  3101               	addfsr 0,1
  1466     0D43  3001               	movlw	1
  1467     0D44  02FE               	subwf	btemp,f
  1468     0D45  3000               	movlw	0
  1469     0D46  3BFF               	subwfb	btemp+1,f
  1470     0D47  087F               	movf	btemp+1,w
  1471     0D48  047E               	iorwf	btemp,w
  1472     0D49  1D03               	skipz
  1473     0D4A  2D41               	goto	clrloop0	;have we reached the end yet?
  1474     0D4B  3400               	retlw	0	;all done for this memory range, return
  1475                           
  1476                           	psect	cstackBANK1
  1477     00A0                     __pcstackBANK1:
  1478     00A0                     sprintf@ap:
  1479                           
  1480                           ; 1 bytes @ 0x0
  1481     00A0                     	ds	1
  1482     00A1                     sprintf@s:
  1483                           
  1484                           ; 1 bytes @ 0x1
  1485     00A1                     	ds	1
  1486     00A2                     sprintf@f:
  1487                           
  1488                           ; 11 bytes @ 0x2
  1489     00A2                     	ds	11
  1490     00AD                     do_init@s:
  1491     00AD                     do_read@ads:	
  1492                           ; 8 bytes @ 0xD
  1493                           
  1494     00AD                     do_blank@ads:	
  1495                           ; 16 bytes @ 0xD
  1496                           
  1497     00AD                     do_write@ads:	
  1498                           ; 32 bytes @ 0xD
  1499                           
  1500                           
  1501                           ; 48 bytes @ 0xD
  1502     00AD                     	ds	8
  1503     00B5                     do_init@rate:
  1504                           
  1505                           ; 2 bytes @ 0x15
  1506     00B5                     	ds	8
  1507     00BD                     do_read@s:
  1508                           
  1509                           ; 2 bytes @ 0x1D
  1510     00BD                     	ds	2
  1511     00BF                     do_read@data:
  1512                           
  1513                           ; 1 bytes @ 0x1F
  1514     00BF                     	ds	1
  1515     00C0                     do_read@col:
  1516                           
  1517                           ; 1 bytes @ 0x20
  1518     00C0                     	ds	1
  1519     00C1                     do_read@addr:
  1520                           
  1521                           ; 2 bytes @ 0x21
  1522     00C1                     	ds	12
  1523     00CD                     do_blank@ok:
  1524                           
  1525                           ; 1 bytes @ 0x2D
  1526     00CD                     	ds	1
  1527     00CE                     do_blank@data:
  1528                           
  1529                           ; 1 bytes @ 0x2E
  1530     00CE                     	ds	1
  1531     00CF                     do_blank@s:
  1532                           
  1533                           ; 2 bytes @ 0x2F
  1534     00CF                     	ds	2
  1535     00D1                     do_blank@addr:
  1536                           
  1537                           ; 2 bytes @ 0x31
  1538     00D1                     	ds	12
  1539     00DD                     do_write@s:
  1540                           
  1541                           ; 2 bytes @ 0x3D
  1542     00DD                     	ds	2
  1543     00DF                     do_write@hi:
  1544                           
  1545                           ; 1 bytes @ 0x3F
  1546     00DF                     	ds	1
  1547     00E0                     do_write@lo:
  1548                           
  1549                           ; 1 bytes @ 0x40
  1550     00E0                     	ds	1
  1551     00E1                     do_write@data:
  1552                           
  1553                           ; 1 bytes @ 0x41
  1554     00E1                     	ds	1
  1555     00E2                     do_write@c:
  1556                           
  1557                           ; 1 bytes @ 0x42
  1558     00E2                     	ds	1
  1559     00E3                     do_write@addr:
  1560                           
  1561                           ; 2 bytes @ 0x43
  1562     00E3                     	ds	2
  1563                           
  1564                           	psect	cstackCOMMON
  1565     0070                     __pcstackCOMMON:
  1566     0070                     ?_uart_getc:
  1567     0070                     ??_uart_getc:	
  1568                           ; 1 bytes @ 0x0
  1569                           
  1570     0070                     ?_uart_putc:	
  1571                           ; 1 bytes @ 0x0
  1572                           
  1573     0070                     ?_putch:	
  1574                           ; 1 bytes @ 0x0
  1575                           
  1576     0070                     ?_setCTS:	
  1577                           ; 1 bytes @ 0x0
  1578                           
  1579     0070                     ??_setCTS:	
  1580                           ; 1 bytes @ 0x0
  1581                           
  1582     0070                     ?_clear:	
  1583                           ; 1 bytes @ 0x0
  1584                           
  1585     0070                     ?_empty:	
  1586                           ; 1 bytes @ 0x0
  1587                           
  1588     0070                     ?_push:	
  1589                           ; 1 bytes @ 0x0
  1590                           
  1591     0070                     ?_pop:	
  1592                           ; 1 bytes @ 0x0
  1593                           
  1594     0070                     ?_first:	
  1595                           ; 1 bytes @ 0x0
  1596                           
  1597     0070                     ??_first:	
  1598                           ; 1 bytes @ 0x0
  1599                           
  1600     0070                     ?_charToHexDigit:	
  1601                           ; 1 bytes @ 0x0
  1602                           
  1603     0070                     ?_ports_init:	
  1604                           ; 1 bytes @ 0x0
  1605                           
  1606     0070                     ?_isr:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609     0070                     ?_read_port:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612     0070                     ?_do_init:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615     0070                     ?_do_blank:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618     0070                     ?_do_read:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621     0070                     ?_write_port:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624     0070                     ?_do_write:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627     0070                     ?_main:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630     0070                     ?i1_addone:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633     0070                     setCTS@b:	
  1634                           ; 2 bytes @ 0x0
  1635                           
  1636     0070                     uart_getc@c:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639     0070                     putch@c:	
  1640                           ; 1 bytes @ 0x0
  1641                           
  1642     0070                     i1addone@i:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645                           
  1646                           ; 2 bytes @ 0x0
  1647     0070                     	ds	1
  1648     0071                     uart_getc@ok:
  1649                           
  1650                           ; 1 bytes @ 0x1
  1651     0071                     	ds	1
  1652     0072                     ??_push:
  1653     0072                     ??i1_addone:	
  1654                           ; 1 bytes @ 0x2
  1655                           
  1656     0072                     ?_size:	
  1657                           ; 1 bytes @ 0x2
  1658                           
  1659                           
  1660                           ; 2 bytes @ 0x2
  1661     0072                     	ds	2
  1662     0074                     ??_size:
  1663                           
  1664                           ; 1 bytes @ 0x4
  1665     0074                     	ds	1
  1666     0075                     size@s:
  1667                           
  1668                           ; 2 bytes @ 0x5
  1669     0075                     	ds	1
  1670     0076                     push@s:
  1671                           
  1672                           ; 2 bytes @ 0x6
  1673     0076                     	ds	2
  1674     0078                     _push$1524:
  1675                           
  1676                           ; 2 bytes @ 0x8
  1677     0078                     	ds	2
  1678     007A                     push@c:
  1679                           
  1680                           ; 1 bytes @ 0xA
  1681     007A                     	ds	1
  1682     007B                     ??_isr:
  1683                           
  1684                           ; 1 bytes @ 0xB
  1685     007B                     	ds	1
  1686                           
  1687                           	psect	cstackBANK0
  1688     0020                     __pcstackBANK0:
  1689     0020                     isr@n:
  1690                           
  1691                           ; 2 bytes @ 0x0
  1692     0020                     	ds	2
  1693     0022                     isr@ok:
  1694                           
  1695                           ; 1 bytes @ 0x2
  1696     0022                     	ds	1
  1697     0023                     isr@c:
  1698                           
  1699                           ; 1 bytes @ 0x3
  1700     0023                     	ds	1
  1701     0024                     ?_uart_puts:
  1702     0024                     ??_uart_putc:	
  1703                           ; 1 bytes @ 0x4
  1704                           
  1705     0024                     ??_putch:	
  1706                           ; 1 bytes @ 0x4
  1707                           
  1708     0024                     ??_charToHexDigit:	
  1709                           ; 1 bytes @ 0x4
  1710                           
  1711     0024                     ??_ports_init:	
  1712                           ; 1 bytes @ 0x4
  1713                           
  1714     0024                     ?_setup_address:	
  1715                           ; 1 bytes @ 0x4
  1716                           
  1717     0024                     ??_read_port:	
  1718                           ; 1 bytes @ 0x4
  1719                           
  1720     0024                     ??_write_port:	
  1721                           ; 1 bytes @ 0x4
  1722                           
  1723     0024                     ?_memset:	
  1724                           ; 1 bytes @ 0x4
  1725                           
  1726     0024                     ?_uart_init_brg:	
  1727                           ; 2 bytes @ 0x4
  1728                           
  1729     0024                     ?_fputc:	
  1730                           ; 2 bytes @ 0x4
  1731                           
  1732     0024                     ?_addone:	
  1733                           ; 2 bytes @ 0x4
  1734                           
  1735     0024                     ?___wmul:	
  1736                           ; 2 bytes @ 0x4
  1737                           
  1738     0024                     ?___awdiv:	
  1739                           ; 2 bytes @ 0x4
  1740                           
  1741     0024                     ?___awmod:	
  1742                           ; 2 bytes @ 0x4
  1743                           
  1744     0024                     ?___lmul:	
  1745                           ; 2 bytes @ 0x4
  1746                           
  1747     0024                     charToHexDigit@c:	
  1748                           ; 4 bytes @ 0x4
  1749                           
  1750     0024                     read_port@data:	
  1751                           ; 1 bytes @ 0x4
  1752                           
  1753     0024                     uart_putc@c:	
  1754                           ; 1 bytes @ 0x4
  1755                           
  1756     0024                     addone@i:	
  1757                           ; 1 bytes @ 0x4
  1758                           
  1759     0024                     setup_address@addr:	
  1760                           ; 2 bytes @ 0x4
  1761                           
  1762     0024                     uart_puts@s:	
  1763                           ; 2 bytes @ 0x4
  1764                           
  1765     0024                     ___wmul@multiplier:	
  1766                           ; 2 bytes @ 0x4
  1767                           
  1768     0024                     ___awdiv@divisor:	
  1769                           ; 2 bytes @ 0x4
  1770                           
  1771     0024                     ___awmod@divisor:	
  1772                           ; 2 bytes @ 0x4
  1773                           
  1774     0024                     memset@dest:	
  1775                           ; 2 bytes @ 0x4
  1776                           
  1777     0024                     fputc@c:	
  1778                           ; 2 bytes @ 0x4
  1779                           
  1780     0024                     ___lmul@multiplier:	
  1781                           ; 2 bytes @ 0x4
  1782                           
  1783                           
  1784                           ; 4 bytes @ 0x4
  1785     0024                     	ds	2
  1786     0026                     ??_uart_init_brg:
  1787     0026                     ??_uart_puts:	
  1788                           ; 1 bytes @ 0x6
  1789                           
  1790     0026                     ??_addone:	
  1791                           ; 1 bytes @ 0x6
  1792                           
  1793     0026                     ??_empty:	
  1794                           ; 1 bytes @ 0x6
  1795                           
  1796     0026                     ??_pop:	
  1797                           ; 1 bytes @ 0x6
  1798                           
  1799     0026                     ??_setup_address:	
  1800                           ; 1 bytes @ 0x6
  1801                           
  1802     0026                     setup_address@hi:	
  1803                           ; 1 bytes @ 0x6
  1804                           
  1805     0026                     write_port@data:	
  1806                           ; 1 bytes @ 0x6
  1807                           
  1808     0026                     fputc@fp:	
  1809                           ; 1 bytes @ 0x6
  1810                           
  1811     0026                     ___wmul@multiplicand:	
  1812                           ; 1 bytes @ 0x6
  1813                           
  1814     0026                     ___awdiv@dividend:	
  1815                           ; 2 bytes @ 0x6
  1816                           
  1817     0026                     ___awmod@dividend:	
  1818                           ; 2 bytes @ 0x6
  1819                           
  1820     0026                     memset@c:	
  1821                           ; 2 bytes @ 0x6
  1822                           
  1823                           
  1824                           ; 2 bytes @ 0x6
  1825     0026                     	ds	1
  1826     0027                     ??_fputc:
  1827     0027                     uart_puts@p:	
  1828                           ; 1 bytes @ 0x7
  1829                           
  1830                           
  1831                           ; 2 bytes @ 0x7
  1832     0027                     	ds	1
  1833     0028                     ??___wmul:
  1834     0028                     ??___awdiv:	
  1835                           ; 1 bytes @ 0x8
  1836                           
  1837     0028                     ??___awmod:	
  1838                           ; 1 bytes @ 0x8
  1839                           
  1840     0028                     pop@c:	
  1841                           ; 1 bytes @ 0x8
  1842                           
  1843     0028                     ___wmul@product:	
  1844                           ; 1 bytes @ 0x8
  1845                           
  1846     0028                     memset@n:	
  1847                           ; 2 bytes @ 0x8
  1848                           
  1849     0028                     ___lmul@multiplicand:	
  1850                           ; 2 bytes @ 0x8
  1851                           
  1852                           
  1853                           ; 4 bytes @ 0x8
  1854     0028                     	ds	1
  1855     0029                     ___awdiv@counter:
  1856     0029                     ___awmod@counter:	
  1857                           ; 1 bytes @ 0x9
  1858                           
  1859                           
  1860                           ; 1 bytes @ 0x9
  1861     0029                     	ds	1
  1862     002A                     ??_memset:
  1863     002A                     ?_read_prec_or_width:	
  1864                           ; 1 bytes @ 0xA
  1865                           
  1866     002A                     ___awdiv@sign:	
  1867                           ; 2 bytes @ 0xA
  1868                           
  1869     002A                     ___awmod@sign:	
  1870                           ; 1 bytes @ 0xA
  1871                           
  1872     002A                     read_prec_or_width@ap:	
  1873                           ; 1 bytes @ 0xA
  1874                           
  1875     002A                     memset@p:	
  1876                           ; 1 bytes @ 0xA
  1877                           
  1878                           
  1879                           ; 2 bytes @ 0xA
  1880     002A                     	ds	1
  1881     002B                     ?_abs:
  1882     002B                     uart_init_brg@rate:	
  1883                           ; 2 bytes @ 0xB
  1884                           
  1885     002B                     ___awdiv@quotient:	
  1886                           ; 2 bytes @ 0xB
  1887                           
  1888     002B                     abs@a:	
  1889                           ; 2 bytes @ 0xB
  1890                           
  1891                           
  1892                           ; 2 bytes @ 0xB
  1893     002B                     	ds	1
  1894     002C                     ??_clear:
  1895     002C                     ??___lmul:	
  1896                           ; 1 bytes @ 0xC
  1897                           
  1898     002C                     ??_read_prec_or_width:	
  1899                           ; 1 bytes @ 0xC
  1900                           
  1901     002C                     ?_fputs:	
  1902                           ; 1 bytes @ 0xC
  1903                           
  1904     002C                     fputs@fp:	
  1905                           ; 2 bytes @ 0xC
  1906                           
  1907     002C                     ___lmul@product:	
  1908                           ; 1 bytes @ 0xC
  1909                           
  1910                           
  1911                           ; 4 bytes @ 0xC
  1912     002C                     	ds	1
  1913     002D                     ??_fputs:
  1914     002D                     ??_abs:	
  1915                           ; 1 bytes @ 0xD
  1916                           
  1917                           
  1918                           ; 1 bytes @ 0xD
  1919     002D                     	ds	2
  1920     002F                     read_prec_or_width@c:
  1921     002F                     fputs@c:	
  1922                           ; 1 bytes @ 0xF
  1923                           
  1924                           
  1925                           ; 1 bytes @ 0xF
  1926     002F                     	ds	1
  1927     0030                     ?___lldiv:
  1928     0030                     read_prec_or_width@n:	
  1929                           ; 4 bytes @ 0x10
  1930                           
  1931     0030                     fputs@i:	
  1932                           ; 2 bytes @ 0x10
  1933                           
  1934     0030                     ___lldiv@divisor:	
  1935                           ; 2 bytes @ 0x10
  1936                           
  1937                           
  1938                           ; 4 bytes @ 0x10
  1939     0030                     	ds	2
  1940     0032                     read_prec_or_width@fmt:
  1941     0032                     fputs@s:	
  1942                           ; 1 bytes @ 0x12
  1943                           
  1944                           
  1945                           ; 1 bytes @ 0x12
  1946     0032                     	ds	1
  1947     0033                     ?_pad:
  1948     0033                     pad@buf:	
  1949                           ; 1 bytes @ 0x13
  1950                           
  1951                           
  1952                           ; 1 bytes @ 0x13
  1953     0033                     	ds	1
  1954     0034                     pad@p:
  1955     0034                     ___lldiv@dividend:	
  1956                           ; 2 bytes @ 0x14
  1957                           
  1958                           
  1959                           ; 4 bytes @ 0x14
  1960     0034                     	ds	2
  1961     0036                     ??_pad:
  1962                           
  1963                           ; 1 bytes @ 0x16
  1964     0036                     	ds	1
  1965     0037                     pad@i:
  1966                           
  1967                           ; 2 bytes @ 0x17
  1968     0037                     	ds	1
  1969     0038                     ??___lldiv:
  1970                           
  1971                           ; 1 bytes @ 0x18
  1972     0038                     	ds	1
  1973     0039                     pad@fp:
  1974     0039                     ___lldiv@quotient:	
  1975                           ; 1 bytes @ 0x19
  1976                           
  1977                           
  1978                           ; 4 bytes @ 0x19
  1979     0039                     	ds	1
  1980     003A                     ?_dtoa:
  1981     003A                     ?_xtoa:	
  1982                           ; 1 bytes @ 0x1A
  1983                           
  1984     003A                     dtoa@d:	
  1985                           ; 1 bytes @ 0x1A
  1986                           
  1987     003A                     xtoa@d:	
  1988                           ; 2 bytes @ 0x1A
  1989                           
  1990                           
  1991                           ; 2 bytes @ 0x1A
  1992     003A                     	ds	2
  1993     003C                     ??_dtoa:
  1994     003C                     ??_xtoa:	
  1995                           ; 1 bytes @ 0x1C
  1996                           
  1997                           
  1998                           ; 1 bytes @ 0x1C
  1999     003C                     	ds	1
  2000     003D                     ___lldiv@counter:
  2001     003D                     dtoa@fp:	
  2002                           ; 1 bytes @ 0x1D
  2003                           
  2004     003D                     xtoa@fp:	
  2005                           ; 1 bytes @ 0x1D
  2006                           
  2007                           
  2008                           ; 1 bytes @ 0x1D
  2009     003D                     	ds	1
  2010     003E                     ?_uart_init:
  2011     003E                     xtoa@p:	
  2012                           ; 1 bytes @ 0x1E
  2013                           
  2014     003E                     _dtoa$1232:	
  2015                           ; 1 bytes @ 0x1E
  2016                           
  2017     003E                     uart_init@baud_rate:	
  2018                           ; 2 bytes @ 0x1E
  2019                           
  2020                           
  2021                           ; 4 bytes @ 0x1E
  2022     003E                     	ds	1
  2023     003F                     xtoa@w:
  2024                           
  2025                           ; 2 bytes @ 0x1F
  2026     003F                     	ds	1
  2027     0040                     dtoa@p:
  2028                           
  2029                           ; 1 bytes @ 0x20
  2030     0040                     	ds	1
  2031     0041                     xtoa@c:
  2032     0041                     dtoa@w:	
  2033                           ; 1 bytes @ 0x21
  2034                           
  2035                           
  2036                           ; 2 bytes @ 0x21
  2037     0041                     	ds	1
  2038     0042                     ??_uart_init:
  2039     0042                     xtoa@i:	
  2040                           ; 1 bytes @ 0x22
  2041                           
  2042                           
  2043                           ; 2 bytes @ 0x22
  2044     0042                     	ds	1
  2045     0043                     dtoa@s:
  2046                           
  2047                           ; 1 bytes @ 0x23
  2048     0043                     	ds	1
  2049     0044                     dtoa@i:
  2050                           
  2051                           ; 2 bytes @ 0x24
  2052     0044                     	ds	2
  2053     0046                     ?_vfpfcnvrt:
  2054     0046                     vfpfcnvrt@fmt:	
  2055                           ; 1 bytes @ 0x26
  2056                           
  2057     0046                     uart_init@n:	
  2058                           ; 1 bytes @ 0x26
  2059                           
  2060                           
  2061                           ; 4 bytes @ 0x26
  2062     0046                     	ds	1
  2063     0047                     vfpfcnvrt@ap:
  2064                           
  2065                           ; 1 bytes @ 0x27
  2066     0047                     	ds	1
  2067     0048                     ??_vfpfcnvrt:
  2068                           
  2069                           ; 1 bytes @ 0x28
  2070     0048                     	ds	2
  2071     004A                     uart_init@factor:
  2072                           
  2073                           ; 1 bytes @ 0x2A
  2074     004A                     	ds	2
  2075     004C                     vfpfcnvrt@done:
  2076                           
  2077                           ; 1 bytes @ 0x2C
  2078     004C                     	ds	1
  2079     004D                     vfpfcnvrt@convarg:
  2080                           
  2081                           ; 4 bytes @ 0x2D
  2082     004D                     	ds	4
  2083     0051                     vfpfcnvrt@fp:
  2084                           
  2085                           ; 1 bytes @ 0x31
  2086     0051                     	ds	1
  2087     0052                     vfpfcnvrt@cp:
  2088                           
  2089                           ; 2 bytes @ 0x32
  2090     0052                     	ds	2
  2091     0054                     ?_vfprintf:
  2092     0054                     vfprintf@fmt:	
  2093                           ; 2 bytes @ 0x34
  2094                           
  2095                           
  2096                           ; 2 bytes @ 0x34
  2097     0054                     	ds	2
  2098     0056                     vfprintf@ap:
  2099                           
  2100                           ; 1 bytes @ 0x36
  2101     0056                     	ds	1
  2102     0057                     ??_vfprintf:
  2103                           
  2104                           ; 1 bytes @ 0x37
  2105     0057                     	ds	1
  2106     0058                     vfprintf@fp:
  2107                           
  2108                           ; 1 bytes @ 0x38
  2109     0058                     	ds	1
  2110     0059                     vfprintf@cfmt:
  2111                           
  2112                           ; 2 bytes @ 0x39
  2113     0059                     	ds	2
  2114     005B                     ?_sprintf:
  2115     005B                     sprintf@fmt:	
  2116                           ; 2 bytes @ 0x3B
  2117                           
  2118                           
  2119                           ; 2 bytes @ 0x3B
  2120     005B                     	ds	4
  2121     005F                     ??_sprintf:
  2122                           
  2123                           ; 1 bytes @ 0x3F
  2124     005F                     	ds	1
  2125     0060                     ??_do_init:
  2126     0060                     ??_do_blank:	
  2127                           ; 1 bytes @ 0x40
  2128                           
  2129     0060                     ??_do_read:	
  2130                           ; 1 bytes @ 0x40
  2131                           
  2132     0060                     ??_do_write:	
  2133                           ; 1 bytes @ 0x40
  2134                           
  2135                           
  2136                           ; 1 bytes @ 0x40
  2137     0060                     	ds	2
  2138     0062                     ??_main:
  2139                           
  2140                           ; 1 bytes @ 0x42
  2141     0062                     	ds	2
  2142     0064                     main@cmd:
  2143                           
  2144                           ; 1 bytes @ 0x44
  2145     0064                     	ds	1
  2146                           
  2147                           	psect	maintext
  2148     0540                     __pmaintext:	
  2149 ;;
  2150 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2151 ;;
  2152 ;; *************** function _main *****************
  2153 ;; Defined at:
  2154 ;;		line 503 in file "main.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;		None
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;  cmd             1   68[BANK0 ] unsigned char 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  1    wreg      void 
  2161 ;; Registers used:
  2162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : B1F/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2169 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2170 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2171 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2172 ;;Total ram usage:        3 bytes
  2173 ;; Hardware stack levels required when called: 12
  2174 ;; This function calls:
  2175 ;;		_clear
  2176 ;;		_do_blank
  2177 ;;		_do_init
  2178 ;;		_do_read
  2179 ;;		_do_write
  2180 ;;		_pop
  2181 ;;		_ports_init
  2182 ;;		_uart_init
  2183 ;; This function is called by:
  2184 ;;		Startup code after reset
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188     0540                     _main:	
  2189                           ;psect for function _main
  2190                           
  2191     0540                     l3506:	
  2192                           ;incstack = 0
  2193                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2194                           
  2195                           
  2196                           ;main.c: 506:     uart_init(0);
  2197     0540  3000               	movlw	0
  2198     0541  0020               	movlb	0	; select bank0
  2199     0542  00C1               	movwf	uart_init@baud_rate+3
  2200     0543  3000               	movlw	0
  2201     0544  00C0               	movwf	uart_init@baud_rate+2
  2202     0545  3000               	movlw	0
  2203     0546  00BF               	movwf	uart_init@baud_rate+1
  2204     0547  3000               	movlw	0
  2205     0548  00BE               	movwf	uart_init@baud_rate
  2206     0549  3182  2222  3185   	fcall	_uart_init
  2207                           
  2208                           ;main.c: 509:     ports_init();
  2209     054C  318F  270D  3185   	fcall	_ports_init
  2210     054F                     l3508:
  2211                           
  2212                           ;main.c: 512:     do_init();
  2213     054F  318E  26BF  3185   	fcall	_do_init
  2214     0552                     l3510:
  2215                           
  2216                           ;main.c: 515:     PIE1bits.RCIE=1;
  2217     0552  0021               	movlb	1	; select bank1
  2218     0553  1691               	bsf	17,5	;volatile
  2219     0554                     l3512:
  2220                           
  2221                           ;main.c: 516:     INTCONbits.GIE = 1;
  2222     0554  178B               	bsf	11,7	;volatile
  2223     0555                     l3514:
  2224                           
  2225                           ;main.c: 521:         if (cmd_active) {
  2226     0555  0021               	movlb	1	; select bank1
  2227     0556  086D               	movf	_cmd_active^(0+128),w
  2228     0557  1903               	btfsc	3,2
  2229     0558  2D5A               	goto	u3411
  2230     0559  2D5B               	goto	u3410
  2231     055A                     u3411:
  2232     055A  2D85               	goto	l3534
  2233     055B                     u3410:
  2234     055B                     l3516:
  2235                           
  2236                           ;main.c: 523:             PORTEbits.RE1 = 1;
  2237     055B  0020               	movlb	0	; select bank0
  2238     055C  1490               	bsf	16,1	;volatile
  2239     055D                     l3518:
  2240                           
  2241                           ;main.c: 526:             pop();
  2242     055D  3187  27B7  3185   	fcall	_pop
  2243                           
  2244                           ;main.c: 528:             char cmd = pop();
  2245     0560  3187  27B7  3185   	fcall	_pop
  2246     0563  0020               	movlb	0	; select bank0
  2247     0564  00E4               	movwf	main@cmd
  2248     0565                     l3520:
  2249                           
  2250                           ;main.c: 531:             if (cmd == '1') {
  2251     0565  3031               	movlw	49
  2252     0566  0664               	xorwf	main@cmd,w
  2253     0567  1D03               	btfss	3,2
  2254     0568  2D6A               	goto	u3421
  2255     0569  2D6B               	goto	u3420
  2256     056A                     u3421:
  2257     056A  2D6F               	goto	l3524
  2258     056B                     u3420:
  2259     056B                     l3522:
  2260                           
  2261                           ;main.c: 532:                 do_read();
  2262     056B  3182  22CF  3185   	fcall	_do_read
  2263                           
  2264                           ;main.c: 533:             }
  2265     056E  2D82               	goto	l3532
  2266     056F                     l3524:
  2267     056F  3032               	movlw	50
  2268     0570  0664               	xorwf	main@cmd,w
  2269     0571  1D03               	btfss	3,2
  2270     0572  2D74               	goto	u3431
  2271     0573  2D75               	goto	u3430
  2272     0574                     u3431:
  2273     0574  2D79               	goto	l3528
  2274     0575                     u3430:
  2275     0575                     l3526:
  2276                           
  2277                           ;main.c: 535:                 do_write();
  2278     0575  3184  24D0  3185   	fcall	_do_write
  2279                           
  2280                           ;main.c: 536:             }
  2281     0578  2D82               	goto	l3532
  2282     0579                     l3528:
  2283     0579  3033               	movlw	51
  2284     057A  0664               	xorwf	main@cmd,w
  2285     057B  1D03               	btfss	3,2
  2286     057C  2D7E               	goto	u3441
  2287     057D  2D7F               	goto	u3440
  2288     057E                     u3441:
  2289     057E  2D82               	goto	l3532
  2290     057F                     u3440:
  2291     057F                     l3530:
  2292                           
  2293                           ;main.c: 538:                 do_blank();
  2294     057F  3183  235B  3185   	fcall	_do_blank
  2295     0582                     l3532:
  2296                           
  2297                           ;main.c: 542:             clear();
  2298     0582  318D  25E9  3185   	fcall	_clear
  2299     0585                     l3534:
  2300                           
  2301                           ;main.c: 546:         PORTEbits.RE0 = 1;
  2302     0585  0020               	movlb	0	; select bank0
  2303     0586  1410               	bsf	16,0	;volatile
  2304     0587                     l3536:
  2305                           
  2306                           ;main.c: 547:         _delay((unsigned long)((250)*(20000000/4000.0)));
  2307     0587  3007               	movlw	7
  2308     0588  0020               	movlb	0	; select bank0
  2309     0589  00E3               	movwf	??_main+1
  2310     058A  3058               	movlw	88
  2311     058B  00E2               	movwf	??_main
  2312     058C  3059               	movlw	89
  2313     058D                     u3457:
  2314     058D  0B89               	decfsz	9,f
  2315     058E  2D8D               	goto	u3457
  2316     058F  0BE2               	decfsz	??_main,f
  2317     0590  2D8D               	goto	u3457
  2318     0591  0BE3               	decfsz	??_main+1,f
  2319     0592  2D8D               	goto	u3457
  2320     0593  3200               	nop2
  2321     0594                     l3538:
  2322                           
  2323                           ;main.c: 548:         PORTEbits.RE0 = 0;
  2324     0594  0020               	movlb	0	; select bank0
  2325     0595  1010               	bcf	16,0	;volatile
  2326     0596                     l3540:
  2327                           
  2328                           ;main.c: 549:         PORTEbits.RE1 = 0;
  2329     0596  1090               	bcf	16,1	;volatile
  2330     0597                     l3542:
  2331                           
  2332                           ;main.c: 550:         PORTEbits.RE2 = 0;
  2333     0597  1110               	bcf	16,2	;volatile
  2334     0598                     l3544:
  2335                           
  2336                           ;main.c: 551:         _delay((unsigned long)((250)*(20000000/4000.0)));
  2337     0598  3007               	movlw	7
  2338     0599  0020               	movlb	0	; select bank0
  2339     059A  00E3               	movwf	??_main+1
  2340     059B  3058               	movlw	88
  2341     059C  00E2               	movwf	??_main
  2342     059D  3059               	movlw	89
  2343     059E                     u3467:
  2344     059E  0B89               	decfsz	9,f
  2345     059F  2D9E               	goto	u3467
  2346     05A0  0BE2               	decfsz	??_main,f
  2347     05A1  2D9E               	goto	u3467
  2348     05A2  0BE3               	decfsz	??_main+1,f
  2349     05A3  2D9E               	goto	u3467
  2350     05A4  3200               	nop2
  2351     05A5  2D55               	goto	l3514
  2352     05A6  3180  2840         	ljmp	start
  2353     05A8                     __end_of_main:
  2354                           
  2355                           	psect	text1
  2356     0222                     __ptext1:	
  2357 ;; *************** function _uart_init *****************
  2358 ;; Defined at:
  2359 ;;		line 28 in file "uart.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  baud_rate       4   30[BANK0 ] const unsigned long 
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;  n               4   38[BANK0 ] unsigned long 
  2364 ;;  factor          1   42[BANK0 ] unsigned char 
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, status,2, status,0, pclath, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2374 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2375 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2376 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2377 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2378 ;;Total ram usage:       13 bytes
  2379 ;; Hardware stack levels used: 1
  2380 ;; Hardware stack levels required when called: 4
  2381 ;; This function calls:
  2382 ;;		___lldiv
  2383 ;;		___lmul
  2384 ;; This function is called by:
  2385 ;;		_main
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389     0222                     _uart_init:	
  2390                           ;psect for function _uart_init
  2391                           
  2392     0222                     l3466:	
  2393                           ;incstack = 0
  2394                           ; Regs used in _uart_init: [wreg+status,2+status,0+pclath+cstack]
  2395                           
  2396                           
  2397                           ;uart.c: 28: void uart_init(const uint32_t baud_rate);uart.c: 29: {;uart.c: 31:     INTC
      +                          ONbits.GIE = 0;
  2398     0222  138B               	bcf	11,7	;volatile
  2399                           
  2400                           ;uart.c: 33:     PIE1bits.TXIE = 1;
  2401     0223  0021               	movlb	1	; select bank1
  2402     0224  1611               	bsf	17,4	;volatile
  2403                           
  2404                           ;uart.c: 34:     PIE1bits.RCIE = 1;
  2405     0225  1691               	bsf	17,5	;volatile
  2406                           
  2407                           ;uart.c: 37:     TRISCbits.TRISC6=1;
  2408     0226  170E               	bsf	14,6	;volatile
  2409                           
  2410                           ;uart.c: 38:     TRISCbits.TRISC7=1;
  2411     0227  178E               	bsf	14,7	;volatile
  2412                           
  2413                           ;uart.c: 40:     BAUDCONbits.BRG16 = 1;
  2414     0228  0023               	movlb	3	; select bank3
  2415     0229  159F               	bsf	31,3	;volatile
  2416                           
  2417                           ;uart.c: 41:     BAUDCONbits.WUE = 0;
  2418     022A  109F               	bcf	31,1	;volatile
  2419                           
  2420                           ;uart.c: 43:     RCSTAbits.CREN = 1;
  2421     022B  161D               	bsf	29,4	;volatile
  2422                           
  2423                           ;uart.c: 44:     RCSTAbits.SPEN = 1;
  2424     022C  179D               	bsf	29,7	;volatile
  2425                           
  2426                           ;uart.c: 46:     TXSTAbits.SYNC = 0;
  2427     022D  121E               	bcf	30,4	;volatile
  2428                           
  2429                           ;uart.c: 47:     TXSTAbits.BRGH = 1;
  2430     022E  151E               	bsf	30,2	;volatile
  2431                           
  2432                           ;uart.c: 48:     TXSTAbits.TXEN = 1;
  2433     022F  169E               	bsf	30,5	;volatile
  2434     0230                     l3468:
  2435                           
  2436                           ;uart.c: 51:     if (baud_rate != 0) {
  2437     0230  0020               	movlb	0	; select bank0
  2438     0231  0841               	movf	uart_init@baud_rate+3,w
  2439     0232  0440               	iorwf	uart_init@baud_rate+2,w
  2440     0233  043F               	iorwf	uart_init@baud_rate+1,w
  2441     0234  043E               	iorwf	uart_init@baud_rate,w
  2442     0235  1903               	skipnz
  2443     0236  2A38               	goto	u3301
  2444     0237  2A39               	goto	u3300
  2445     0238                     u3301:
  2446     0238  2AC9               	goto	l3498
  2447     0239                     u3300:
  2448     0239                     l3470:
  2449                           
  2450                           ;uart.c: 53:         uint8_t factor;;uart.c: 54:         if (BAUDCONbits.BRG16 && TXSTAb
      +                          its.BRGH)
  2451     0239  0023               	movlb	3	; select bank3
  2452     023A  1D9F               	btfss	31,3	;volatile
  2453     023B  2A3D               	goto	u3311
  2454     023C  2A3E               	goto	u3310
  2455     023D                     u3311:
  2456     023D  2A46               	goto	l202
  2457     023E                     u3310:
  2458     023E                     l3472:
  2459     023E  1D1E               	btfss	30,2	;volatile
  2460     023F  2A41               	goto	u3321
  2461     0240  2A42               	goto	u3320
  2462     0241                     u3321:
  2463     0241  2A46               	goto	l202
  2464     0242                     u3320:
  2465     0242                     l3474:
  2466                           
  2467                           ;uart.c: 55:             factor = 4;
  2468     0242  3004               	movlw	4
  2469     0243  0020               	movlb	0	; select bank0
  2470     0244  00CA               	movwf	uart_init@factor
  2471     0245  2A67               	goto	l3488
  2472     0246                     l202:	
  2473                           ;uart.c: 56:         else if (BAUDCONbits.BRG16 && !TXSTAbits.BRGH)
  2474                           
  2475     0246  1D9F               	btfss	31,3	;volatile
  2476     0247  2A49               	goto	u3331
  2477     0248  2A4A               	goto	u3330
  2478     0249                     u3331:
  2479     0249  2A52               	goto	l204
  2480     024A                     u3330:
  2481     024A                     l3476:
  2482     024A  191E               	btfsc	30,2	;volatile
  2483     024B  2A4D               	goto	u3341
  2484     024C  2A4E               	goto	u3340
  2485     024D                     u3341:
  2486     024D  2A52               	goto	l204
  2487     024E                     u3340:
  2488     024E                     l3478:
  2489                           
  2490                           ;uart.c: 57:             factor = 16;
  2491     024E  3010               	movlw	16
  2492     024F  0020               	movlb	0	; select bank0
  2493     0250  00CA               	movwf	uart_init@factor
  2494     0251  2A67               	goto	l3488
  2495     0252                     l204:	
  2496                           ;uart.c: 58:         else if (!BAUDCONbits.BRG16 && TXSTAbits.BRGH)
  2497                           
  2498     0252  199F               	btfsc	31,3	;volatile
  2499     0253  2A55               	goto	u3351
  2500     0254  2A56               	goto	u3350
  2501     0255                     u3351:
  2502     0255  2A5B               	goto	l206
  2503     0256                     u3350:
  2504     0256                     l3480:
  2505     0256  1D1E               	btfss	30,2	;volatile
  2506     0257  2A59               	goto	u3361
  2507     0258  2A5A               	goto	u3360
  2508     0259                     u3361:
  2509     0259  2A5B               	goto	l206
  2510     025A                     u3360:
  2511     025A  2A4E               	goto	l3478
  2512     025B                     l206:	
  2513                           ;uart.c: 60:         else if (!BAUDCONbits.BRG16 && !TXSTAbits.BRGH)
  2514                           
  2515     025B  199F               	btfsc	31,3	;volatile
  2516     025C  2A5E               	goto	u3371
  2517     025D  2A5F               	goto	u3370
  2518     025E                     u3371:
  2519     025E  2A67               	goto	l205
  2520     025F                     u3370:
  2521     025F                     l3484:
  2522     025F  191E               	btfsc	30,2	;volatile
  2523     0260  2A62               	goto	u3381
  2524     0261  2A63               	goto	u3380
  2525     0262                     u3381:
  2526     0262  2A67               	goto	l205
  2527     0263                     u3380:
  2528     0263                     l3486:
  2529                           
  2530                           ;uart.c: 61:             factor = 64;
  2531     0263  3040               	movlw	64
  2532     0264  0020               	movlb	0	; select bank0
  2533     0265  00CA               	movwf	uart_init@factor
  2534     0266  2A67               	goto	l3488
  2535     0267                     l205:
  2536     0267                     l3488:
  2537                           
  2538                           ;uart.c: 62:         if (TXSTAbits.SYNC)
  2539     0267  0023               	movlb	3	; select bank3
  2540     0268  1E1E               	btfss	30,4	;volatile
  2541     0269  2A6B               	goto	u3391
  2542     026A  2A6C               	goto	u3390
  2543     026B                     u3391:
  2544     026B  2A6F               	goto	l3492
  2545     026C                     u3390:
  2546     026C                     l3490:
  2547                           
  2548                           ;uart.c: 63:             factor = 64;
  2549     026C  3040               	movlw	64
  2550     026D  0020               	movlb	0	; select bank0
  2551     026E  00CA               	movwf	uart_init@factor
  2552     026F                     l3492:
  2553                           
  2554                           ;uart.c: 66:         uint32_t n = (int32_t) 20000000 / (factor * baud_rate) - 1u ;
  2555     026F  0020               	movlb	0	; select bank0
  2556     0270  084A               	movf	uart_init@factor,w
  2557     0271  00C2               	movwf	??_uart_init
  2558     0272  01C3               	clrf	??_uart_init+1
  2559     0273  01C4               	clrf	??_uart_init+2
  2560     0274  01C5               	clrf	??_uart_init+3
  2561     0275  0845               	movf	??_uart_init+3,w
  2562     0276  00A7               	movwf	___lmul@multiplier+3
  2563     0277  0844               	movf	??_uart_init+2,w
  2564     0278  00A6               	movwf	___lmul@multiplier+2
  2565     0279  0843               	movf	??_uart_init+1,w
  2566     027A  00A5               	movwf	___lmul@multiplier+1
  2567     027B  0842               	movf	??_uart_init,w
  2568     027C  00A4               	movwf	___lmul@multiplier
  2569     027D  0841               	movf	uart_init@baud_rate+3,w
  2570     027E  00AB               	movwf	___lmul@multiplicand+3
  2571     027F  0840               	movf	uart_init@baud_rate+2,w
  2572     0280  00AA               	movwf	___lmul@multiplicand+2
  2573     0281  083F               	movf	uart_init@baud_rate+1,w
  2574     0282  00A9               	movwf	___lmul@multiplicand+1
  2575     0283  083E               	movf	uart_init@baud_rate,w
  2576     0284  00A8               	movwf	___lmul@multiplicand
  2577     0285  318F  278D  3182   	fcall	___lmul
  2578     0288  0020               	movlb	0	; select bank0
  2579     0289  0827               	movf	?___lmul+3,w
  2580     028A  00B3               	movwf	___lldiv@divisor+3
  2581     028B  0826               	movf	?___lmul+2,w
  2582     028C  00B2               	movwf	___lldiv@divisor+2
  2583     028D  0825               	movf	?___lmul+1,w
  2584     028E  00B1               	movwf	___lldiv@divisor+1
  2585     028F  0824               	movf	?___lmul,w
  2586     0290  00B0               	movwf	___lldiv@divisor
  2587     0291  3001               	movlw	1
  2588     0292  00B7               	movwf	___lldiv@dividend+3
  2589     0293  3031               	movlw	49
  2590     0294  00B6               	movwf	___lldiv@dividend+2
  2591     0295  302D               	movlw	45
  2592     0296  00B5               	movwf	___lldiv@dividend+1
  2593     0297  3000               	movlw	0
  2594     0298  00B4               	movwf	___lldiv@dividend
  2595     0299  3186  2668  3182   	fcall	___lldiv
  2596     029C  30FF               	movlw	255
  2597     029D  0020               	movlb	0	; select bank0
  2598     029E  0730               	addwf	?___lldiv,w
  2599     029F  00C6               	movwf	uart_init@n
  2600     02A0  30FF               	movlw	255
  2601     02A1  3D31               	addwfc	?___lldiv+1,w
  2602     02A2  00C7               	movwf	uart_init@n+1
  2603     02A3  30FF               	movlw	255
  2604     02A4  3D32               	addwfc	?___lldiv+2,w
  2605     02A5  00C8               	movwf	uart_init@n+2
  2606     02A6  30FF               	movlw	255
  2607     02A7  3D33               	addwfc	?___lldiv+3,w
  2608     02A8  00C9               	movwf	uart_init@n+3
  2609     02A9                     l3494:
  2610                           
  2611                           ;uart.c: 67:         SPBRGH = (n & 0xFF00) >> 8;
  2612     02A9  0846               	movf	uart_init@n,w
  2613     02AA  00C2               	movwf	??_uart_init
  2614     02AB  0847               	movf	uart_init@n+1,w
  2615     02AC  00C3               	movwf	??_uart_init+1
  2616     02AD  0848               	movf	uart_init@n+2,w
  2617     02AE  00C4               	movwf	??_uart_init+2
  2618     02AF  0849               	movf	uart_init@n+3,w
  2619     02B0  00C5               	movwf	??_uart_init+3
  2620     02B1  3008               	movlw	8
  2621     02B2                     u3405:
  2622     02B2  36C5               	lsrf	??_uart_init+3,f
  2623     02B3  0CC4               	rrf	??_uart_init+2,f
  2624     02B4  0CC3               	rrf	??_uart_init+1,f
  2625     02B5  0CC2               	rrf	??_uart_init,f
  2626     02B6                     u3400:
  2627     02B6  0B89               	decfsz	9,f
  2628     02B7  2AB2               	goto	u3405
  2629     02B8  0842               	movf	??_uart_init,w
  2630     02B9  0023               	movlb	3	; select bank3
  2631     02BA  009C               	movwf	28	;volatile
  2632     02BB                     l3496:
  2633                           
  2634                           ;uart.c: 68:         SPBRG = n & 0x00FF;
  2635     02BB  30FF               	movlw	255
  2636     02BC  0020               	movlb	0	; select bank0
  2637     02BD  0546               	andwf	uart_init@n,w
  2638     02BE  00C2               	movwf	??_uart_init
  2639     02BF  3000               	movlw	0
  2640     02C0  0547               	andwf	uart_init@n+1,w
  2641     02C1  00C3               	movwf	??_uart_init+1
  2642     02C2  0842               	movf	??_uart_init,w
  2643     02C3  0023               	movlb	3	; select bank3
  2644     02C4  009B               	movwf	27	;volatile
  2645     02C5  0020               	movlb	0	; select bank0
  2646     02C6  0843               	movf	??_uart_init+1,w
  2647     02C7  0023               	movlb	3	; select bank3
  2648     02C8  009C               	movwf	28	;volatile
  2649     02C9                     l3498:
  2650                           
  2651                           ;uart.c: 72:     INTCONbits.PEIE = 1;
  2652     02C9  170B               	bsf	11,6	;volatile
  2653     02CA                     l3500:
  2654                           
  2655                           ;uart.c: 76:     PIE1bits.RCIE=1;
  2656     02CA  0021               	movlb	1	; select bank1
  2657     02CB  1691               	bsf	17,5	;volatile
  2658     02CC                     l3502:
  2659                           
  2660                           ;uart.c: 79:     PIE1bits.TXIE=0;
  2661     02CC  1211               	bcf	17,4	;volatile
  2662     02CD                     l3504:
  2663                           
  2664                           ;uart.c: 82:     INTCONbits.GIE = 1;
  2665     02CD  178B               	bsf	11,7	;volatile
  2666     02CE                     l210:
  2667     02CE  0008               	return
  2668     02CF                     __end_of_uart_init:
  2669                           
  2670                           	psect	text2
  2671     0F8D                     __ptext2:	
  2672 ;; *************** function ___lmul *****************
  2673 ;; Defined at:
  2674 ;;		line 15 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/Umul32.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  multiplier      4    4[BANK0 ] unsigned long 
  2677 ;;  multiplicand    4    8[BANK0 ] unsigned long 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  product         4   12[BANK0 ] unsigned long 
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  4    4[BANK0 ] unsigned long 
  2682 ;; Registers used:
  2683 ;;		wreg, status,2, status,0
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2689 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2690 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2692 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2693 ;;Total ram usage:       12 bytes
  2694 ;; Hardware stack levels used: 1
  2695 ;; Hardware stack levels required when called: 3
  2696 ;; This function calls:
  2697 ;;		Nothing
  2698 ;; This function is called by:
  2699 ;;		_uart_init
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703     0F8D                     ___lmul:	
  2704                           ;psect for function ___lmul
  2705                           
  2706     0F8D                     l3234:	
  2707                           ;incstack = 0
  2708                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2709                           
  2710     0F8D  3000               	movlw	0
  2711     0F8E  0020               	movlb	0	; select bank0
  2712     0F8F  00AF               	movwf	___lmul@product+3
  2713     0F90  3000               	movlw	0
  2714     0F91  00AE               	movwf	___lmul@product+2
  2715     0F92  3000               	movlw	0
  2716     0F93  00AD               	movwf	___lmul@product+1
  2717     0F94  3000               	movlw	0
  2718     0F95  00AC               	movwf	___lmul@product
  2719     0F96                     l3236:
  2720     0F96  1C24               	btfss	___lmul@multiplier,0
  2721     0F97  2F99               	goto	u3081
  2722     0F98  2F9A               	goto	u3080
  2723     0F99                     u3081:
  2724     0F99  2FA2               	goto	l3240
  2725     0F9A                     u3080:
  2726     0F9A                     l3238:
  2727     0F9A  0828               	movf	___lmul@multiplicand,w
  2728     0F9B  07AC               	addwf	___lmul@product,f
  2729     0F9C  0829               	movf	___lmul@multiplicand+1,w
  2730     0F9D  3DAD               	addwfc	___lmul@product+1,f
  2731     0F9E  082A               	movf	___lmul@multiplicand+2,w
  2732     0F9F  3DAE               	addwfc	___lmul@product+2,f
  2733     0FA0  082B               	movf	___lmul@multiplicand+3,w
  2734     0FA1  3DAF               	addwfc	___lmul@product+3,f
  2735     0FA2                     l3240:
  2736     0FA2  3001               	movlw	1
  2737     0FA3                     u3095:
  2738     0FA3  35A8               	lslf	___lmul@multiplicand,f
  2739     0FA4  0DA9               	rlf	___lmul@multiplicand+1,f
  2740     0FA5  0DAA               	rlf	___lmul@multiplicand+2,f
  2741     0FA6  0DAB               	rlf	___lmul@multiplicand+3,f
  2742     0FA7  0B89               	decfsz	9,f
  2743     0FA8  2FA3               	goto	u3095
  2744     0FA9                     l3242:
  2745     0FA9  3001               	movlw	1
  2746     0FAA                     u3105:
  2747     0FAA  36A7               	lsrf	___lmul@multiplier+3,f
  2748     0FAB  0CA6               	rrf	___lmul@multiplier+2,f
  2749     0FAC  0CA5               	rrf	___lmul@multiplier+1,f
  2750     0FAD  0CA4               	rrf	___lmul@multiplier,f
  2751     0FAE  0B89               	decfsz	9,f
  2752     0FAF  2FAA               	goto	u3105
  2753     0FB0  0827               	movf	___lmul@multiplier+3,w
  2754     0FB1  0426               	iorwf	___lmul@multiplier+2,w
  2755     0FB2  0425               	iorwf	___lmul@multiplier+1,w
  2756     0FB3  0424               	iorwf	___lmul@multiplier,w
  2757     0FB4  1D03               	skipz
  2758     0FB5  2FB7               	goto	u3111
  2759     0FB6  2FB8               	goto	u3110
  2760     0FB7                     u3111:
  2761     0FB7  2F96               	goto	l3236
  2762     0FB8                     u3110:
  2763     0FB8                     l3244:
  2764     0FB8  082F               	movf	___lmul@product+3,w
  2765     0FB9  00A7               	movwf	?___lmul+3
  2766     0FBA  082E               	movf	___lmul@product+2,w
  2767     0FBB  00A6               	movwf	?___lmul+2
  2768     0FBC  082D               	movf	___lmul@product+1,w
  2769     0FBD  00A5               	movwf	?___lmul+1
  2770     0FBE  082C               	movf	___lmul@product,w
  2771     0FBF  00A4               	movwf	?___lmul
  2772     0FC0                     l411:
  2773     0FC0  0008               	return
  2774     0FC1                     __end_of___lmul:
  2775                           
  2776                           	psect	text3
  2777     0668                     __ptext3:	
  2778 ;; *************** function ___lldiv *****************
  2779 ;; Defined at:
  2780 ;;		line 5 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/__lldiv.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  divisor         4   16[BANK0 ] unsigned long 
  2783 ;;  dividend        4   20[BANK0 ] unsigned long 
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;  quotient        4   25[BANK0 ] unsigned long 
  2786 ;;  counter         1   29[BANK0 ] unsigned char 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  4   16[BANK0 ] unsigned long 
  2789 ;; Registers used:
  2790 ;;		wreg, status,2, status,0
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2796 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2797 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2798 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2799 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2800 ;;Total ram usage:       14 bytes
  2801 ;; Hardware stack levels used: 1
  2802 ;; Hardware stack levels required when called: 3
  2803 ;; This function calls:
  2804 ;;		Nothing
  2805 ;; This function is called by:
  2806 ;;		_uart_init
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810     0668                     ___lldiv:	
  2811                           ;psect for function ___lldiv
  2812                           
  2813     0668                     l3248:	
  2814                           ;incstack = 0
  2815                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2816                           
  2817     0668  3000               	movlw	0
  2818     0669  0020               	movlb	0	; select bank0
  2819     066A  00BC               	movwf	___lldiv@quotient+3
  2820     066B  3000               	movlw	0
  2821     066C  00BB               	movwf	___lldiv@quotient+2
  2822     066D  3000               	movlw	0
  2823     066E  00BA               	movwf	___lldiv@quotient+1
  2824     066F  3000               	movlw	0
  2825     0670  00B9               	movwf	___lldiv@quotient
  2826     0671  0833               	movf	___lldiv@divisor+3,w
  2827     0672  0432               	iorwf	___lldiv@divisor+2,w
  2828     0673  0431               	iorwf	___lldiv@divisor+1,w
  2829     0674  0430               	iorwf	___lldiv@divisor,w
  2830     0675  1903               	skipnz
  2831     0676  2E78               	goto	u3121
  2832     0677  2E79               	goto	u3120
  2833     0678                     u3121:
  2834     0678  2EBA               	goto	l3268
  2835     0679                     u3120:
  2836     0679                     l3250:
  2837     0679  01BD               	clrf	___lldiv@counter
  2838     067A  0ABD               	incf	___lldiv@counter,f
  2839     067B  2E87               	goto	l3254
  2840     067C                     l3252:
  2841     067C  3001               	movlw	1
  2842     067D                     u3135:
  2843     067D  35B0               	lslf	___lldiv@divisor,f
  2844     067E  0DB1               	rlf	___lldiv@divisor+1,f
  2845     067F  0DB2               	rlf	___lldiv@divisor+2,f
  2846     0680  0DB3               	rlf	___lldiv@divisor+3,f
  2847     0681  0B89               	decfsz	9,f
  2848     0682  2E7D               	goto	u3135
  2849     0683  3001               	movlw	1
  2850     0684  00B8               	movwf	??___lldiv
  2851     0685  0838               	movf	??___lldiv,w
  2852     0686  07BD               	addwf	___lldiv@counter,f
  2853     0687                     l3254:
  2854     0687  1FB3               	btfss	___lldiv@divisor+3,7
  2855     0688  2E8A               	goto	u3141
  2856     0689  2E8B               	goto	u3140
  2857     068A                     u3141:
  2858     068A  2E7C               	goto	l3252
  2859     068B                     u3140:
  2860     068B                     l3256:
  2861     068B  3001               	movlw	1
  2862     068C                     u3155:
  2863     068C  35B9               	lslf	___lldiv@quotient,f
  2864     068D  0DBA               	rlf	___lldiv@quotient+1,f
  2865     068E  0DBB               	rlf	___lldiv@quotient+2,f
  2866     068F  0DBC               	rlf	___lldiv@quotient+3,f
  2867     0690  0B89               	decfsz	9,f
  2868     0691  2E8C               	goto	u3155
  2869     0692                     l3258:
  2870     0692  0833               	movf	___lldiv@divisor+3,w
  2871     0693  0237               	subwf	___lldiv@dividend+3,w
  2872     0694  1D03               	skipz
  2873     0695  2EA0               	goto	u3165
  2874     0696  0832               	movf	___lldiv@divisor+2,w
  2875     0697  0236               	subwf	___lldiv@dividend+2,w
  2876     0698  1D03               	skipz
  2877     0699  2EA0               	goto	u3165
  2878     069A  0831               	movf	___lldiv@divisor+1,w
  2879     069B  0235               	subwf	___lldiv@dividend+1,w
  2880     069C  1D03               	skipz
  2881     069D  2EA0               	goto	u3165
  2882     069E  0830               	movf	___lldiv@divisor,w
  2883     069F  0234               	subwf	___lldiv@dividend,w
  2884     06A0                     u3165:
  2885     06A0  1C03               	skipc
  2886     06A1  2EA3               	goto	u3161
  2887     06A2  2EA4               	goto	u3160
  2888     06A3                     u3161:
  2889     06A3  2EAD               	goto	l3264
  2890     06A4                     u3160:
  2891     06A4                     l3260:
  2892     06A4  0830               	movf	___lldiv@divisor,w
  2893     06A5  02B4               	subwf	___lldiv@dividend,f
  2894     06A6  0831               	movf	___lldiv@divisor+1,w
  2895     06A7  3BB5               	subwfb	___lldiv@dividend+1,f
  2896     06A8  0832               	movf	___lldiv@divisor+2,w
  2897     06A9  3BB6               	subwfb	___lldiv@dividend+2,f
  2898     06AA  0833               	movf	___lldiv@divisor+3,w
  2899     06AB  3BB7               	subwfb	___lldiv@dividend+3,f
  2900     06AC                     l3262:
  2901     06AC  1439               	bsf	___lldiv@quotient,0
  2902     06AD                     l3264:
  2903     06AD  3001               	movlw	1
  2904     06AE                     u3175:
  2905     06AE  36B3               	lsrf	___lldiv@divisor+3,f
  2906     06AF  0CB2               	rrf	___lldiv@divisor+2,f
  2907     06B0  0CB1               	rrf	___lldiv@divisor+1,f
  2908     06B1  0CB0               	rrf	___lldiv@divisor,f
  2909     06B2  0B89               	decfsz	9,f
  2910     06B3  2EAE               	goto	u3175
  2911     06B4                     l3266:
  2912     06B4  3001               	movlw	1
  2913     06B5  02BD               	subwf	___lldiv@counter,f
  2914     06B6  1D03               	btfss	3,2
  2915     06B7  2EB9               	goto	u3181
  2916     06B8  2EBA               	goto	u3180
  2917     06B9                     u3181:
  2918     06B9  2E8B               	goto	l3256
  2919     06BA                     u3180:
  2920     06BA                     l3268:
  2921     06BA  083C               	movf	___lldiv@quotient+3,w
  2922     06BB  00B3               	movwf	?___lldiv+3
  2923     06BC  083B               	movf	___lldiv@quotient+2,w
  2924     06BD  00B2               	movwf	?___lldiv+2
  2925     06BE  083A               	movf	___lldiv@quotient+1,w
  2926     06BF  00B1               	movwf	?___lldiv+1
  2927     06C0  0839               	movf	___lldiv@quotient,w
  2928     06C1  00B0               	movwf	?___lldiv
  2929     06C2                     l433:
  2930     06C2  0008               	return
  2931     06C3                     __end_of___lldiv:
  2932                           
  2933                           	psect	text4
  2934     0F0D                     __ptext4:	
  2935 ;; *************** function _ports_init *****************
  2936 ;; Defined at:
  2937 ;;		line 192 in file "main.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;		None
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;		None
  2942 ;; Return value:  Size  Location     Type
  2943 ;;                  1    wreg      void 
  2944 ;; Registers used:
  2945 ;;		wreg, status,2
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2955 ;;Total ram usage:        0 bytes
  2956 ;; Hardware stack levels used: 1
  2957 ;; Hardware stack levels required when called: 3
  2958 ;; This function calls:
  2959 ;;		Nothing
  2960 ;; This function is called by:
  2961 ;;		_main
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965     0F0D                     _ports_init:	
  2966                           ;psect for function _ports_init
  2967                           
  2968     0F0D                     l3280:	
  2969                           ;incstack = 0
  2970                           ; Regs used in _ports_init: [wreg+status,2]
  2971                           
  2972                           
  2973                           ;main.c: 195:     ADCON0bits.ADON = 0;
  2974     0F0D  0021               	movlb	1	; select bank1
  2975     0F0E  101D               	bcf	29,0	;volatile
  2976     0F0F                     l3282:
  2977                           
  2978                           ;main.c: 196:     ANSELA = 0;
  2979     0F0F  0023               	movlb	3	; select bank3
  2980     0F10  018C               	clrf	12	;volatile
  2981                           
  2982                           ;main.c: 197:     ANSELB = 0;
  2983     0F11  018D               	clrf	13	;volatile
  2984                           
  2985                           ;main.c: 198:     ANSELC = 0;
  2986     0F12  018E               	clrf	14	;volatile
  2987                           
  2988                           ;main.c: 199:     ANSELD = 0;
  2989     0F13  018F               	clrf	15	;volatile
  2990     0F14                     l3284:
  2991                           
  2992                           ;main.c: 204:     TRISAbits.TRISA0 = 0;
  2993     0F14  0021               	movlb	1	; select bank1
  2994     0F15  100C               	bcf	12,0	;volatile
  2995     0F16                     l3286:
  2996                           
  2997                           ;main.c: 205:     TRISAbits.TRISA1 = 0;
  2998     0F16  108C               	bcf	12,1	;volatile
  2999     0F17                     l3288:
  3000                           
  3001                           ;main.c: 206:     TRISAbits.TRISA2 = 0;
  3002     0F17  110C               	bcf	12,2	;volatile
  3003     0F18                     l3290:
  3004                           
  3005                           ;main.c: 207:     TRISAbits.TRISA3 = 1;
  3006     0F18  158C               	bsf	12,3	;volatile
  3007     0F19                     l3292:
  3008                           
  3009                           ;main.c: 208:     TRISAbits.TRISA4 = 0;
  3010     0F19  120C               	bcf	12,4	;volatile
  3011     0F1A                     l3294:
  3012                           
  3013                           ;main.c: 209:     TRISAbits.TRISA5 = 0;
  3014     0F1A  128C               	bcf	12,5	;volatile
  3015     0F1B                     l3296:
  3016                           
  3017                           ;main.c: 211:     PORTAbits.RA2 = 0;
  3018     0F1B  0020               	movlb	0	; select bank0
  3019     0F1C  110C               	bcf	12,2	;volatile
  3020                           
  3021                           ;main.c: 214:     TRISB = 0x00;
  3022     0F1D  0021               	movlb	1	; select bank1
  3023     0F1E  018D               	clrf	13	;volatile
  3024     0F1F                     l3298:
  3025                           
  3026                           ;main.c: 218:     TRISCbits.TRISC0 = 0;
  3027     0F1F  100E               	bcf	14,0	;volatile
  3028     0F20                     l3300:
  3029                           
  3030                           ;main.c: 219:     TRISCbits.TRISC1 = 0;
  3031     0F20  108E               	bcf	14,1	;volatile
  3032     0F21                     l3302:
  3033                           
  3034                           ;main.c: 220:     TRISCbits.TRISC2 = 0;
  3035     0F21  110E               	bcf	14,2	;volatile
  3036     0F22                     l3304:
  3037                           
  3038                           ;main.c: 222:     TRISCbits.TRISC3 = 0;
  3039     0F22  118E               	bcf	14,3	;volatile
  3040     0F23                     l3306:
  3041                           
  3042                           ;main.c: 223:     TRISCbits.TRISC4 = 0;
  3043     0F23  120E               	bcf	14,4	;volatile
  3044     0F24                     l3308:
  3045                           
  3046                           ;main.c: 224:     TRISCbits.TRISC5 = 0;
  3047     0F24  128E               	bcf	14,5	;volatile
  3048     0F25                     l3310:
  3049                           
  3050                           ;main.c: 226:     TRISCbits.TRISC6 = 1;
  3051     0F25  170E               	bsf	14,6	;volatile
  3052     0F26                     l3312:
  3053                           
  3054                           ;main.c: 227:     TRISCbits.TRISC7 = 1;
  3055     0F26  178E               	bsf	14,7	;volatile
  3056     0F27                     l3314:
  3057                           
  3058                           ;main.c: 229:     PORTCbits.RC0 = 1;
  3059     0F27  0020               	movlb	0	; select bank0
  3060     0F28  140E               	bsf	14,0	;volatile
  3061     0F29                     l3316:
  3062                           
  3063                           ;main.c: 230:     PORTCbits.RC1 = 1;
  3064     0F29  148E               	bsf	14,1	;volatile
  3065     0F2A                     l3318:
  3066                           
  3067                           ;main.c: 231:     PORTCbits.RC2 = 1;
  3068     0F2A  150E               	bsf	14,2	;volatile
  3069     0F2B                     l3320:
  3070                           
  3071                           ;main.c: 234:     TRISD = 0xFF;
  3072     0F2B  30FF               	movlw	255
  3073     0F2C  0021               	movlb	1	; select bank1
  3074     0F2D  008F               	movwf	15	;volatile
  3075     0F2E                     l3322:
  3076                           
  3077                           ;main.c: 237:     TRISEbits.TRISE0 = 0;
  3078     0F2E  1010               	bcf	16,0	;volatile
  3079     0F2F                     l3324:
  3080                           
  3081                           ;main.c: 238:     TRISEbits.TRISE1 = 0;
  3082     0F2F  1090               	bcf	16,1	;volatile
  3083     0F30                     l3326:
  3084                           
  3085                           ;main.c: 239:     TRISEbits.TRISE2 = 0;
  3086     0F30  1110               	bcf	16,2	;volatile
  3087     0F31                     l3328:
  3088                           
  3089                           ;main.c: 240:     PORTEbits.RE0 = 0;
  3090     0F31  0020               	movlb	0	; select bank0
  3091     0F32  1010               	bcf	16,0	;volatile
  3092     0F33                     l3330:
  3093                           
  3094                           ;main.c: 241:     PORTEbits.RE1 = 0;
  3095     0F33  1090               	bcf	16,1	;volatile
  3096     0F34                     l3332:
  3097                           
  3098                           ;main.c: 242:     PORTEbits.RE2 = 0;
  3099     0F34  1110               	bcf	16,2	;volatile
  3100     0F35                     l112:
  3101     0F35  0008               	return
  3102     0F36                     __end_of_ports_init:
  3103                           
  3104                           	psect	text5
  3105     04D0                     __ptext5:	
  3106 ;; *************** function _do_write *****************
  3107 ;; Defined at:
  3108 ;;		line 459 in file "main.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;		None
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  s               2   61[BANK1 ] PTR unsigned char 
  3113 ;;		 -> STR_10(15), 
  3114 ;;  data            1   65[BANK1 ] unsigned char 
  3115 ;;  lo              1   64[BANK1 ] unsigned char 
  3116 ;;  hi              1   63[BANK1 ] unsigned char 
  3117 ;;  ads            48   13[BANK1 ] unsigned char [48]
  3118 ;;  addr            2   67[BANK1 ] unsigned short 
  3119 ;;  c               1   66[BANK1 ] unsigned char 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      void 
  3122 ;; Registers used:
  3123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3130 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3131 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3132 ;;      Totals:         0       1      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3133 ;;Total ram usage:       57 bytes
  3134 ;; Hardware stack levels used: 1
  3135 ;; Hardware stack levels required when called: 11
  3136 ;; This function calls:
  3137 ;;		_charToHexDigit
  3138 ;;		_pop
  3139 ;;		_setup_address
  3140 ;;		_sprintf
  3141 ;;		_uart_puts
  3142 ;;		_write_port
  3143 ;; This function is called by:
  3144 ;;		_main
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148     04D0                     _do_write:	
  3149                           ;psect for function _do_write
  3150                           
  3151     04D0                     l3426:	
  3152                           ;incstack = 0
  3153                           ; Regs used in _do_write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3154                           
  3155                           
  3156                           ;main.c: 461:     uint16_t addr;;main.c: 462:     char ads[48];;main.c: 463:     char c;
      +                          ;main.c: 466:     TRISD = 0x00;
  3157     04D0  0021               	movlb	1	; select bank1
  3158     04D1  018F               	clrf	15	;volatile
  3159     04D2                     l3428:
  3160                           
  3161                           ;main.c: 469:     PORTCbits.RC0 = 0;
  3162     04D2  0020               	movlb	0	; select bank0
  3163     04D3  100E               	bcf	14,0	;volatile
  3164     04D4                     l3430:
  3165                           
  3166                           ;main.c: 470:     PORTCbits.RC1 = 0;
  3167     04D4  108E               	bcf	14,1	;volatile
  3168     04D5                     l3432:
  3169                           
  3170                           ;main.c: 471:     PORTCbits.RC2 = 1;
  3171     04D5  150E               	bsf	14,2	;volatile
  3172                           
  3173                           ;main.c: 473:     for (addr = 0; addr < 1024; addr++) {
  3174     04D6  0021               	movlb	1	; select bank1
  3175     04D7  01E3               	clrf	do_write@addr^(0+128)
  3176     04D8  01E4               	clrf	(do_write@addr+1)^(0+128)
  3177     04D9                     l3438:
  3178                           
  3179                           ;main.c: 474:         if (cmd_active == 0) {
  3180     04D9  086D               	movf	_cmd_active^(0+128),w
  3181     04DA  1D03               	btfss	3,2
  3182     04DB  2CDD               	goto	u3271
  3183     04DC  2CDE               	goto	u3270
  3184     04DD                     u3271:
  3185     04DD  2CED               	goto	l3446
  3186     04DE                     u3270:
  3187     04DE                     l3440:
  3188                           
  3189                           ;main.c: 475:             char *s = "Write aborted\n";
  3190     04DE  3044               	movlw	low (STR_10| (0+32768))
  3191     04DF  00DD               	movwf	do_write@s^(0+128)
  3192     04E0  3090               	movlw	high (STR_10| (0+32768))
  3193     04E1  00DE               	movwf	(do_write@s^(0+128)+1)
  3194     04E2                     l3442:
  3195                           
  3196                           ;main.c: 476:             uart_puts(s);
  3197     04E2  085E               	movf	(do_write@s+1)^(0+128),w
  3198     04E3  0020               	movlb	0	; select bank0
  3199     04E4  00A5               	movwf	uart_puts@s+1
  3200     04E5  0021               	movlb	1	; select bank1
  3201     04E6  085D               	movf	do_write@s^(0+128),w
  3202     04E7  0020               	movlb	0	; select bank0
  3203     04E8  00A4               	movwf	uart_puts@s
  3204     04E9  318F  2736  3184   	fcall	_uart_puts
  3205     04EC  2D3F               	goto	l154
  3206     04ED                     l3446:
  3207                           
  3208                           ;main.c: 481:         c = pop();
  3209     04ED  3187  27B7  3184   	fcall	_pop
  3210     04F0  0021               	movlb	1	; select bank1
  3211     04F1  00E2               	movwf	do_write@c^(0+128)
  3212     04F2                     l3448:
  3213                           
  3214                           ;main.c: 482:         uint8_t hi = charToHexDigit(c);
  3215     04F2  0862               	movf	do_write@c^(0+128),w
  3216     04F3  318D  25BB  3184   	fcall	_charToHexDigit
  3217     04F6  0021               	movlb	1	; select bank1
  3218     04F7  00DF               	movwf	do_write@hi^(0+128)
  3219     04F8                     l3450:
  3220                           
  3221                           ;main.c: 483:         c = pop();
  3222     04F8  3187  27B7  3184   	fcall	_pop
  3223     04FB  0021               	movlb	1	; select bank1
  3224     04FC  00E2               	movwf	do_write@c^(0+128)
  3225                           
  3226                           ;main.c: 484:         uint8_t lo = charToHexDigit(c);
  3227     04FD  0862               	movf	do_write@c^(0+128),w
  3228     04FE  318D  25BB  3184   	fcall	_charToHexDigit
  3229     0501  0021               	movlb	1	; select bank1
  3230     0502  00E0               	movwf	do_write@lo^(0+128)
  3231     0503                     l3452:
  3232                           
  3233                           ;main.c: 485:         uint8_t data = hi*16+lo;
  3234     0503  085F               	movf	do_write@hi^(0+128),w
  3235     0504  0020               	movlb	0	; select bank0
  3236     0505  00E0               	movwf	??_do_write
  3237     0506  3003               	movlw	3
  3238     0507                     u3285:
  3239     0507  35E0               	lslf	??_do_write,f
  3240     0508  3EFF               	addlw	-1
  3241     0509  1D03               	skipz
  3242     050A  2D07               	goto	u3285
  3243     050B  3560               	lslf	??_do_write,w
  3244     050C  0021               	movlb	1	; select bank1
  3245     050D  0760               	addwf	do_write@lo^(0+128),w
  3246     050E  00E1               	movwf	do_write@data^(0+128)
  3247     050F                     l3454:
  3248                           
  3249                           ;main.c: 488:         setup_address(addr);
  3250     050F  0864               	movf	(do_write@addr+1)^(0+128),w
  3251     0510  0020               	movlb	0	; select bank0
  3252     0511  00A5               	movwf	setup_address@addr+1
  3253     0512  0021               	movlb	1	; select bank1
  3254     0513  0863               	movf	do_write@addr^(0+128),w
  3255     0514  0020               	movlb	0	; select bank0
  3256     0515  00A4               	movwf	setup_address@addr
  3257     0516  318D  2581  3184   	fcall	_setup_address
  3258     0519                     l3456:
  3259                           
  3260                           ;main.c: 491:         write_port(data);
  3261     0519  0021               	movlb	1	; select bank1
  3262     051A  0861               	movf	do_write@data^(0+128),w
  3263     051B  318F  2760  3184   	fcall	_write_port
  3264     051E                     l3458:
  3265                           
  3266                           ;main.c: 492:     }
  3267     051E  3001               	movlw	1
  3268     051F  0021               	movlb	1	; select bank1
  3269     0520  07E3               	addwf	do_write@addr^(0+128),f
  3270     0521  3000               	movlw	0
  3271     0522  3DE4               	addwfc	(do_write@addr+1)^(0+128),f
  3272     0523                     l3460:
  3273     0523  3004               	movlw	4
  3274     0524  0264               	subwf	(do_write@addr+1)^(0+128),w
  3275     0525  3000               	movlw	0
  3276     0526  1903               	skipnz
  3277     0527  0263               	subwf	do_write@addr^(0+128),w
  3278     0528  1C03               	skipc
  3279     0529  2D2B               	goto	u3291
  3280     052A  2D2C               	goto	u3290
  3281     052B                     u3291:
  3282     052B  2CD9               	goto	l3438
  3283     052C                     u3290:
  3284     052C                     l152:
  3285                           
  3286                           ;main.c: 494:     PORTCbits.RC0 = 1;
  3287     052C  0020               	movlb	0	; select bank0
  3288     052D  140E               	bsf	14,0	;volatile
  3289                           
  3290                           ;main.c: 495:     PORTCbits.RC1 = 1;
  3291     052E  148E               	bsf	14,1	;volatile
  3292     052F                     l3462:
  3293                           
  3294                           ;main.c: 497:     sprintf(ads, "Write completed.\n");
  3295     052F  3032               	movlw	low (STR_11| (0+32768))
  3296     0530  00DB               	movwf	sprintf@fmt
  3297     0531  3090               	movlw	high (STR_11| (0+32768))
  3298     0532  00DC               	movwf	sprintf@fmt+1
  3299     0533  30AD               	movlw	(low (do_write@ads| 0))& (0+255)
  3300     0534  318E  263B  3184   	fcall	_sprintf
  3301     0537                     l3464:
  3302                           
  3303                           ;main.c: 498:     uart_puts(ads);
  3304     0537  30AD               	movlw	low do_write@ads
  3305     0538  0020               	movlb	0	; select bank0
  3306     0539  00A4               	movwf	uart_puts@s
  3307     053A  3000               	movlw	high do_write@ads
  3308     053B  00A5               	movwf	uart_puts@s+1
  3309     053C  318F  2736  3184   	fcall	_uart_puts
  3310     053F                     l154:
  3311     053F  0008               	return
  3312     0540                     __end_of_do_write:
  3313                           
  3314                           	psect	text6
  3315     0F60                     __ptext6:	
  3316 ;; *************** function _write_port *****************
  3317 ;; Defined at:
  3318 ;;		line 430 in file "main.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;  data            1    wreg     unsigned char 
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;  data            1    6[BANK0 ] unsigned char 
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  1    wreg      void 
  3325 ;; Registers used:
  3326 ;;		wreg
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3333 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3334 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3335 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3336 ;;Total ram usage:        3 bytes
  3337 ;; Hardware stack levels used: 1
  3338 ;; Hardware stack levels required when called: 3
  3339 ;; This function calls:
  3340 ;;		Nothing
  3341 ;; This function is called by:
  3342 ;;		_do_write
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346     0F60                     _write_port:	
  3347                           ;psect for function _write_port
  3348                           
  3349                           
  3350                           ;incstack = 0
  3351                           ; Regs used in _write_port: [wreg]
  3352                           ;write_port@data stored from wreg
  3353     0F60  0020               	movlb	0	; select bank0
  3354     0F61  00A6               	movwf	write_port@data
  3355     0F62                     l3218:
  3356                           
  3357                           ;main.c: 430: void write_port(uint8_t data);main.c: 431: {;main.c: 433:      _delay((uns
      +                          igned long)((10)*(20000000/4000000.0)));
  3358     0F62  3010               	movlw	16
  3359     0F63                     u3477:
  3360     0F63  0B89               	decfsz	9,f
  3361     0F64  2F63               	goto	u3477
  3362     0F65  3200               	nop2
  3363                           
  3364                           ;main.c: 434:     LATD = data;
  3365     0F66  0020               	movlb	0	; select bank0
  3366     0F67  0826               	movf	write_port@data,w
  3367     0F68  0022               	movlb	2	; select bank2
  3368     0F69  008F               	movwf	15	;volatile
  3369                           
  3370                           ;main.c: 437:     _delay((unsigned long)((10)*(20000000/4000000.0)));
  3371     0F6A  3010               	movlw	16
  3372     0F6B                     u3487:
  3373     0F6B  0B89               	decfsz	9,f
  3374     0F6C  2F6B               	goto	u3487
  3375     0F6D  3200               	nop2
  3376     0F6E                     l3220:
  3377                           
  3378                           ;main.c: 438:     PORTBbits.RB4 = 1;
  3379     0F6E  0020               	movlb	0	; select bank0
  3380     0F6F  160D               	bsf	13,4	;volatile
  3381     0F70                     l3222:
  3382                           
  3383                           ;main.c: 441:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  3384     0F70  3200               	nop2	;2 cycle nop
  3385     0F71  3200               	nop2	;2 cycle nop
  3386     0F72  0000               	nop
  3387     0F73                     l3224:
  3388                           
  3389                           ;main.c: 442:     PORTBbits.RB3 = 1;
  3390     0F73  0020               	movlb	0	; select bank0
  3391     0F74  158D               	bsf	13,3	;volatile
  3392                           
  3393                           ;main.c: 444:     _delay((unsigned long)((50)*(20000000/4000.0)));
  3394     0F75  3002               	movlw	2
  3395     0F76  0020               	movlb	0	; select bank0
  3396     0F77  00A5               	movwf	??_write_port+1
  3397     0F78  3045               	movlw	69
  3398     0F79  00A4               	movwf	??_write_port
  3399     0F7A  30A9               	movlw	169
  3400     0F7B                     u3497:
  3401     0F7B  0B89               	decfsz	9,f
  3402     0F7C  2F7B               	goto	u3497
  3403     0F7D  0BA4               	decfsz	??_write_port,f
  3404     0F7E  2F7B               	goto	u3497
  3405     0F7F  0BA5               	decfsz	??_write_port+1,f
  3406     0F80  2F7B               	goto	u3497
  3407     0F81  3200               	nop2
  3408     0F82                     l3226:
  3409                           
  3410                           ;main.c: 447:     PORTBbits.RB3 = 0;
  3411     0F82  0020               	movlb	0	; select bank0
  3412     0F83  118D               	bcf	13,3	;volatile
  3413     0F84                     l3228:
  3414                           
  3415                           ;main.c: 448:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  3416     0F84  3200               	nop2	;2 cycle nop
  3417     0F85  3200               	nop2	;2 cycle nop
  3418     0F86  0000               	nop
  3419     0F87                     l3230:
  3420                           
  3421                           ;main.c: 451:     PORTBbits.RB4 = 0;
  3422     0F87  0020               	movlb	0	; select bank0
  3423     0F88  120D               	bcf	13,4	;volatile
  3424     0F89                     l3232:
  3425                           
  3426                           ;main.c: 452:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  3427     0F89  3200               	nop2	;2 cycle nop
  3428     0F8A  3200               	nop2	;2 cycle nop
  3429     0F8B  0000               	nop
  3430     0F8C                     l148:
  3431     0F8C  0008               	return
  3432     0F8D                     __end_of_write_port:
  3433                           
  3434                           	psect	text7
  3435     07B7                     __ptext7:	
  3436 ;; *************** function _pop *****************
  3437 ;; Defined at:
  3438 ;;		line 142 in file "main.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;  c               1    8[BANK0 ] unsigned char 
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      unsigned char 
  3445 ;; Registers used:
  3446 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3453 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3454 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3455 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3456 ;;Total ram usage:        3 bytes
  3457 ;; Hardware stack levels used: 1
  3458 ;; Hardware stack levels required when called: 5
  3459 ;; This function calls:
  3460 ;;		_addone
  3461 ;;		_empty
  3462 ;; This function is called by:
  3463 ;;		_do_write
  3464 ;;		_main
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468     07B7                     _pop:	
  3469                           ;psect for function _pop
  3470                           
  3471     07B7                     l3098:	
  3472                           ;incstack = 0
  3473                           ; Regs used in _pop: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3474                           
  3475                           
  3476                           ;main.c: 146:     INTCONbits.GIE = 0;
  3477     07B7  138B               	bcf	11,7	;volatile
  3478                           
  3479                           ;main.c: 147:     PIE1bits.RCIE=0;
  3480     07B8  0021               	movlb	1	; select bank1
  3481     07B9  1291               	bcf	17,5	;volatile
  3482     07BA                     l3100:
  3483     07BA                     l3102:
  3484                           
  3485                           ;main.c: 151:     if (empty()) {
  3486     07BA  318D  25D2  3187   	fcall	_empty
  3487     07BD  3A00               	xorlw	0
  3488     07BE  1903               	skipnz
  3489     07BF  2FC1               	goto	u2981
  3490     07C0  2FC2               	goto	u2980
  3491     07C1                     u2981:
  3492     07C1  2FD3               	goto	l3112
  3493     07C2                     u2980:
  3494     07C2                     l3104:
  3495                           
  3496                           ;main.c: 153:         PORTEbits.RE2 = 1;
  3497     07C2  0020               	movlb	0	; select bank0
  3498     07C3  1510               	bsf	16,2	;volatile
  3499     07C4                     l3106:
  3500                           
  3501                           ;main.c: 154:         _delay((unsigned long)((2000)*(20000000/4000.0)));
  3502     07C4  3033               	movlw	51
  3503     07C5  0020               	movlb	0	; select bank0
  3504     07C6  00A7               	movwf	??_pop+1
  3505     07C7  30BB               	movlw	187
  3506     07C8  00A6               	movwf	??_pop
  3507     07C9  30DF               	movlw	223
  3508     07CA                     u3507:
  3509     07CA  0B89               	decfsz	9,f
  3510     07CB  2FCA               	goto	u3507
  3511     07CC  0BA6               	decfsz	??_pop,f
  3512     07CD  2FCA               	goto	u3507
  3513     07CE  0BA7               	decfsz	??_pop+1,f
  3514     07CF  2FCA               	goto	u3507
  3515     07D0  3200               	nop2
  3516                           
  3517                           ;main.c: 155:         return c;
  3518     07D1  3000               	movlw	0
  3519     07D2  2FF5               	goto	l98
  3520     07D3                     l3112:
  3521                           
  3522                           ;main.c: 158:         c = queue[head];
  3523     07D3  30F0               	movlw	240
  3524     07D4  0020               	movlb	0	; select bank0
  3525     07D5  00A6               	movwf	??_pop
  3526     07D6  3023               	movlw	35
  3527     07D7  00A7               	movwf	??_pop+1
  3528     07D8  087C               	movf	_head,w
  3529     07D9  0726               	addwf	??_pop,w
  3530     07DA  0086               	movwf	6
  3531     07DB  087D               	movf	_head+1,w
  3532     07DC  3D27               	addwfc	??_pop+1,w
  3533     07DD  0087               	movwf	7
  3534     07DE  0801               	movf	1,w
  3535     07DF  00A8               	movwf	pop@c
  3536     07E0                     l3114:
  3537                           
  3538                           ;main.c: 159:         head = addone(head);
  3539     07E0  087D               	movf	_head+1,w
  3540     07E1  00A5               	movwf	addone@i+1
  3541     07E2  087C               	movf	_head,w
  3542     07E3  00A4               	movwf	addone@i
  3543     07E4  318D  2594  3187   	fcall	_addone
  3544     07E7  0020               	movlb	0	; select bank0
  3545     07E8  0825               	movf	?_addone+1,w
  3546     07E9  00FD               	movwf	_head+1
  3547     07EA  0824               	movf	?_addone,w
  3548     07EB  00FC               	movwf	_head
  3549     07EC                     l3116:
  3550                           
  3551                           ;main.c: 160:         bytes_popped++;
  3552     07EC  3001               	movlw	1
  3553     07ED  0021               	movlb	1	; select bank1
  3554     07EE  07E9               	addwf	_bytes_popped^(0+128),f
  3555     07EF  3000               	movlw	0
  3556     07F0  3DEA               	addwfc	(_bytes_popped+1)^(0+128),f
  3557     07F1                     l3118:
  3558                           
  3559                           ;main.c: 164:     INTCONbits.GIE = 1;
  3560     07F1  178B               	bsf	11,7	;volatile
  3561     07F2                     l3120:
  3562                           
  3563                           ;main.c: 165:     PIE1bits.RCIE = 1;
  3564     07F2  1691               	bsf	17,5	;volatile
  3565     07F3                     l3122:
  3566                           
  3567                           ;main.c: 166:     return c;
  3568     07F3  0020               	movlb	0	; select bank0
  3569     07F4  0828               	movf	pop@c,w
  3570     07F5                     l98:
  3571     07F5  0008               	return
  3572     07F6                     __end_of_pop:
  3573                           
  3574                           	psect	text8
  3575     0DD2                     __ptext8:	
  3576 ;; *************** function _empty *****************
  3577 ;; Defined at:
  3578 ;;		line 96 in file "main.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;		None
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;		None
  3583 ;; Return value:  Size  Location     Type
  3584 ;;                  1    wreg      _Bool 
  3585 ;; Registers used:
  3586 ;;		wreg, status,2, status,0, pclath, cstack
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3596 ;;Total ram usage:        0 bytes
  3597 ;; Hardware stack levels used: 1
  3598 ;; Hardware stack levels required when called: 4
  3599 ;; This function calls:
  3600 ;;		_addone
  3601 ;; This function is called by:
  3602 ;;		_pop
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606     0DD2                     _empty:	
  3607                           ;psect for function _empty
  3608                           
  3609     0DD2                     l3070:	
  3610                           ;incstack = 0
  3611                           ; Regs used in _empty: [wreg+status,2+status,0+pclath+cstack]
  3612                           
  3613                           
  3614                           ;main.c: 98:     if (addone(tail) == head)
  3615     0DD2  0020               	movlb	0	; select bank0
  3616     0DD3  0868               	movf	_tail+1,w
  3617     0DD4  00A5               	movwf	addone@i+1
  3618     0DD5  0867               	movf	_tail,w
  3619     0DD6  00A4               	movwf	addone@i
  3620     0DD7  318D  2594  318D   	fcall	_addone
  3621     0DDA  087D               	movf	_head+1,w
  3622     0DDB  0020               	movlb	0	; select bank0
  3623     0DDC  0625               	xorwf	?_addone+1,w
  3624     0DDD  1D03               	skipz
  3625     0DDE  2DE1               	goto	u2955
  3626     0DDF  087C               	movf	_head,w
  3627     0DE0  0624               	xorwf	?_addone,w
  3628     0DE1                     u2955:
  3629     0DE1  1D03               	skipz
  3630     0DE2  2DE4               	goto	u2951
  3631     0DE3  2DE5               	goto	u2950
  3632     0DE4                     u2951:
  3633     0DE4  2DE7               	goto	l3076
  3634     0DE5                     u2950:
  3635     0DE5                     l3072:
  3636                           
  3637                           ;main.c: 99:         return 1;
  3638     0DE5  3001               	movlw	1
  3639     0DE6  2DE8               	goto	l87
  3640     0DE7                     l3076:
  3641                           
  3642                           ;main.c: 100:     return 0;
  3643     0DE7  3000               	movlw	0
  3644     0DE8                     l87:
  3645     0DE8  0008               	return
  3646     0DE9                     __end_of_empty:
  3647                           
  3648                           	psect	text9
  3649     0D94                     __ptext9:	
  3650 ;; *************** function _addone *****************
  3651 ;; Defined at:
  3652 ;;		line 70 in file "main.c"
  3653 ;; Parameters:    Size  Location     Type
  3654 ;;  i               2    4[BANK0 ] short 
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;		None
  3657 ;; Return value:  Size  Location     Type
  3658 ;;                  2    4[BANK0 ] short 
  3659 ;; Registers used:
  3660 ;;		wreg, status,2, status,0
  3661 ;; Tracked objects:
  3662 ;;		On entry : 0/0
  3663 ;;		On exit  : 0/0
  3664 ;;		Unchanged: 0/0
  3665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3666 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3669 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3670 ;;Total ram usage:        2 bytes
  3671 ;; Hardware stack levels used: 1
  3672 ;; Hardware stack levels required when called: 3
  3673 ;; This function calls:
  3674 ;;		Nothing
  3675 ;; This function is called by:
  3676 ;;		_empty
  3677 ;;		_pop
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681     0D94                     _addone:	
  3682                           ;psect for function _addone
  3683                           
  3684     0D94                     l2996:	
  3685                           ;incstack = 0
  3686                           ; Regs used in _addone: [wreg+status,2+status,0]
  3687                           
  3688                           
  3689                           ;main.c: 70: int16_t addone(int16_t i);main.c: 71: {;main.c: 72:     if (i == 1024 -1)
  3690     0D94  0020               	movlb	0	; select bank0
  3691     0D95  0A24               	incf	addone@i,w
  3692     0D96  3003               	movlw	3
  3693     0D97  1903               	skipnz
  3694     0D98  0625               	xorwf	addone@i+1,w
  3695     0D99  1D03               	btfss	3,2
  3696     0D9A  2D9C               	goto	u2881
  3697     0D9B  2D9D               	goto	u2880
  3698     0D9C                     u2881:
  3699     0D9C  2DA0               	goto	l3002
  3700     0D9D                     u2880:
  3701     0D9D                     l2998:
  3702                           
  3703                           ;main.c: 73:         return 0;
  3704     0D9D  01A4               	clrf	?_addone
  3705     0D9E  01A5               	clrf	?_addone+1
  3706     0D9F  2DA6               	goto	l78
  3707     0DA0                     l3002:
  3708                           
  3709                           ;main.c: 74:     return i+1;
  3710     0DA0  0824               	movf	addone@i,w
  3711     0DA1  3E01               	addlw	1
  3712     0DA2  00A4               	movwf	?_addone
  3713     0DA3  3000               	movlw	0
  3714     0DA4  3D25               	addwfc	addone@i+1,w
  3715     0DA5  00A5               	movwf	?_addone+1
  3716     0DA6                     l78:
  3717     0DA6  0008               	return
  3718     0DA7                     __end_of_addone:
  3719                           
  3720                           	psect	text10
  3721     0DBB                     __ptext10:	
  3722 ;; *************** function _charToHexDigit *****************
  3723 ;; Defined at:
  3724 ;;		line 179 in file "main.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;  c               1    wreg     unsigned char 
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;  c               1    4[BANK0 ] unsigned char 
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  1    wreg      unsigned char 
  3731 ;; Registers used:
  3732 ;;		wreg, status,2, status,0
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3739 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3741 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3742 ;;Total ram usage:        1 bytes
  3743 ;; Hardware stack levels used: 1
  3744 ;; Hardware stack levels required when called: 3
  3745 ;; This function calls:
  3746 ;;		Nothing
  3747 ;; This function is called by:
  3748 ;;		_do_write
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752     0DBB                     _charToHexDigit:	
  3753                           ;psect for function _charToHexDigit
  3754                           
  3755                           
  3756                           ;incstack = 0
  3757                           ; Regs used in _charToHexDigit: [wreg+status,2+status,0]
  3758                           ;charToHexDigit@c stored from wreg
  3759     0DBB  0020               	movlb	0	; select bank0
  3760     0DBC  00A4               	movwf	charToHexDigit@c
  3761     0DBD                     l3126:
  3762                           
  3763                           ;main.c: 179: uint8_t charToHexDigit(char c);main.c: 180: {;main.c: 181:   if (c >= 'a')
  3764     0DBD  3061               	movlw	97
  3765     0DBE  0224               	subwf	charToHexDigit@c,w
  3766     0DBF  1C03               	skipc
  3767     0DC0  2DC2               	goto	u2991
  3768     0DC1  2DC3               	goto	u2990
  3769     0DC2                     u2991:
  3770     0DC2  2DC6               	goto	l3134
  3771     0DC3                     u2990:
  3772     0DC3                     l3128:
  3773                           
  3774                           ;main.c: 182:     return c - 'a' + 10;
  3775     0DC3  0824               	movf	charToHexDigit@c,w
  3776     0DC4  3EA9               	addlw	169
  3777     0DC5  2DD1               	goto	l106
  3778     0DC6                     l3134:
  3779     0DC6  3041               	movlw	65
  3780     0DC7  0224               	subwf	charToHexDigit@c,w
  3781     0DC8  1C03               	skipc
  3782     0DC9  2DCB               	goto	u3001
  3783     0DCA  2DCC               	goto	u3000
  3784     0DCB                     u3001:
  3785     0DCB  2DCF               	goto	l3142
  3786     0DCC                     u3000:
  3787     0DCC                     l3136:
  3788                           
  3789                           ;main.c: 184:     return c - 'A' + 10;
  3790     0DCC  0824               	movf	charToHexDigit@c,w
  3791     0DCD  3EC9               	addlw	201
  3792     0DCE  2DD1               	goto	l106
  3793     0DCF                     l3142:
  3794                           
  3795                           ;main.c: 186:     return c - '0';
  3796     0DCF  0824               	movf	charToHexDigit@c,w
  3797     0DD0  3ED0               	addlw	208
  3798     0DD1                     l106:
  3799     0DD1  0008               	return
  3800     0DD2                     __end_of_charToHexDigit:
  3801                           
  3802                           	psect	text11
  3803     02CF                     __ptext11:	
  3804 ;; *************** function _do_read *****************
  3805 ;; Defined at:
  3806 ;;		line 382 in file "main.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;		None
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;  s               2   29[BANK1 ] PTR unsigned char 
  3811 ;;		 -> STR_7(14), 
  3812 ;;  data            1   31[BANK1 ] unsigned char 
  3813 ;;  ads            16   13[BANK1 ] unsigned char [16]
  3814 ;;  addr            2   33[BANK1 ] unsigned short 
  3815 ;;  col             1   32[BANK1 ] unsigned char 
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  1    wreg      void 
  3818 ;; Registers used:
  3819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3826 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3827 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3828 ;;      Totals:         0       2      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3829 ;;Total ram usage:       24 bytes
  3830 ;; Hardware stack levels used: 1
  3831 ;; Hardware stack levels required when called: 11
  3832 ;; This function calls:
  3833 ;;		_read_port
  3834 ;;		_setup_address
  3835 ;;		_sprintf
  3836 ;;		_uart_putc
  3837 ;;		_uart_puts
  3838 ;; This function is called by:
  3839 ;;		_main
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843     02CF                     _do_read:	
  3844                           ;psect for function _do_read
  3845                           
  3846     02CF                     l3380:	
  3847                           ;incstack = 0
  3848                           ; Regs used in _do_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3849                           
  3850                           
  3851                           ;main.c: 384:     uint16_t addr;;main.c: 385:     char ads[16];;main.c: 386:     uint8_t
      +                           col=0;
  3852     02CF  0021               	movlb	1	; select bank1
  3853     02D0  01C0               	clrf	do_read@col^(0+128)
  3854     02D1                     l3382:
  3855                           
  3856                           ;main.c: 389:     PORTCbits.RC0 = 0;
  3857     02D1  0020               	movlb	0	; select bank0
  3858     02D2  100E               	bcf	14,0	;volatile
  3859     02D3                     l3384:
  3860                           
  3861                           ;main.c: 390:     PORTCbits.RC1 = 1;
  3862     02D3  148E               	bsf	14,1	;volatile
  3863     02D4                     l3386:
  3864                           
  3865                           ;main.c: 391:     PORTCbits.RC2 = 1;
  3866     02D4  150E               	bsf	14,2	;volatile
  3867                           
  3868                           ;main.c: 393:     for (addr = 0; addr < 1024; ++addr) {
  3869     02D5  0021               	movlb	1	; select bank1
  3870     02D6  01C1               	clrf	do_read@addr^(0+128)
  3871     02D7  01C2               	clrf	(do_read@addr+1)^(0+128)
  3872     02D8                     l3392:
  3873                           
  3874                           ;main.c: 394:         if (cmd_active == 0) {
  3875     02D8  086D               	movf	_cmd_active^(0+128),w
  3876     02D9  1D03               	btfss	3,2
  3877     02DA  2ADC               	goto	u3231
  3878     02DB  2ADD               	goto	u3230
  3879     02DC                     u3231:
  3880     02DC  2AEC               	goto	l3400
  3881     02DD                     u3230:
  3882     02DD                     l3394:
  3883                           
  3884                           ;main.c: 395:             char *s = "Read aborted\n";
  3885     02DD  3062               	movlw	low (STR_7| (0+32768))
  3886     02DE  00BD               	movwf	do_read@s^(0+128)
  3887     02DF  3090               	movlw	high (STR_7| (0+32768))
  3888     02E0  00BE               	movwf	(do_read@s^(0+128)+1)
  3889     02E1                     l3396:
  3890                           
  3891                           ;main.c: 396:             uart_puts(s);
  3892     02E1  083E               	movf	(do_read@s+1)^(0+128),w
  3893     02E2  0020               	movlb	0	; select bank0
  3894     02E3  00A5               	movwf	uart_puts@s+1
  3895     02E4  0021               	movlb	1	; select bank1
  3896     02E5  083D               	movf	do_read@s^(0+128),w
  3897     02E6  0020               	movlb	0	; select bank0
  3898     02E7  00A4               	movwf	uart_puts@s
  3899     02E8  318F  2736  3182   	fcall	_uart_puts
  3900     02EB  2B5A               	goto	l142
  3901     02EC                     l3400:
  3902                           
  3903                           ;main.c: 401:         setup_address(addr);
  3904     02EC  0842               	movf	(do_read@addr+1)^(0+128),w
  3905     02ED  0020               	movlb	0	; select bank0
  3906     02EE  00A5               	movwf	setup_address@addr+1
  3907     02EF  0021               	movlb	1	; select bank1
  3908     02F0  0841               	movf	do_read@addr^(0+128),w
  3909     02F1  0020               	movlb	0	; select bank0
  3910     02F2  00A4               	movwf	setup_address@addr
  3911     02F3  318D  2581  3182   	fcall	_setup_address
  3912     02F6                     l3402:
  3913                           
  3914                           ;main.c: 404:         uint8_t data = read_port();
  3915     02F6  318D  254C  3182   	fcall	_read_port
  3916     02F9  0021               	movlb	1	; select bank1
  3917     02FA  00BF               	movwf	do_read@data^(0+128)
  3918     02FB                     l3404:
  3919                           
  3920                           ;main.c: 407:         if (col == 0) {
  3921     02FB  0840               	movf	do_read@col^(0+128),w
  3922     02FC  1D03               	btfss	3,2
  3923     02FD  2AFF               	goto	u3241
  3924     02FE  2B00               	goto	u3240
  3925     02FF                     u3241:
  3926     02FF  2B19               	goto	l3410
  3927     0300                     u3240:
  3928     0300                     l3406:
  3929                           
  3930                           ;main.c: 408:             sprintf(ads, "%04x: ", addr);
  3931     0300  3082               	movlw	low (STR_8| (0+32768))
  3932     0301  0020               	movlb	0	; select bank0
  3933     0302  00DB               	movwf	sprintf@fmt
  3934     0303  3090               	movlw	high (STR_8| (0+32768))
  3935     0304  00DC               	movwf	sprintf@fmt+1
  3936     0305  0021               	movlb	1	; select bank1
  3937     0306  0842               	movf	(do_read@addr+1)^(0+128),w
  3938     0307  0020               	movlb	0	; select bank0
  3939     0308  00DE               	movwf	?_sprintf+3
  3940     0309  0021               	movlb	1	; select bank1
  3941     030A  0841               	movf	do_read@addr^(0+128),w
  3942     030B  0020               	movlb	0	; select bank0
  3943     030C  00DD               	movwf	?_sprintf+2
  3944     030D  30AD               	movlw	(low (do_read@ads| 0))& (0+255)
  3945     030E  318E  263B  3182   	fcall	_sprintf
  3946     0311                     l3408:
  3947                           
  3948                           ;main.c: 409:             uart_puts(ads);
  3949     0311  30AD               	movlw	low do_read@ads
  3950     0312  0020               	movlb	0	; select bank0
  3951     0313  00A4               	movwf	uart_puts@s
  3952     0314  3000               	movlw	high do_read@ads
  3953     0315  00A5               	movwf	uart_puts@s+1
  3954     0316  318F  2736  3182   	fcall	_uart_puts
  3955     0319                     l3410:
  3956                           
  3957                           ;main.c: 412:         sprintf(ads, "%02x", data);
  3958     0319  3089               	movlw	low (STR_9| (0+32768))
  3959     031A  0020               	movlb	0	; select bank0
  3960     031B  00DB               	movwf	sprintf@fmt
  3961     031C  3090               	movlw	high (STR_9| (0+32768))
  3962     031D  00DC               	movwf	sprintf@fmt+1
  3963     031E  0021               	movlb	1	; select bank1
  3964     031F  083F               	movf	do_read@data^(0+128),w
  3965     0320  0020               	movlb	0	; select bank0
  3966     0321  00E0               	movwf	??_do_read
  3967     0322  01E1               	clrf	??_do_read+1
  3968     0323  0860               	movf	??_do_read,w
  3969     0324  00DD               	movwf	?_sprintf+2
  3970     0325  0861               	movf	??_do_read+1,w
  3971     0326  00DE               	movwf	?_sprintf+3
  3972     0327  30AD               	movlw	(low (do_read@ads| 0))& (0+255)
  3973     0328  318E  263B  3182   	fcall	_sprintf
  3974                           
  3975                           ;main.c: 413:         uart_puts(ads);
  3976     032B  30AD               	movlw	low do_read@ads
  3977     032C  0020               	movlb	0	; select bank0
  3978     032D  00A4               	movwf	uart_puts@s
  3979     032E  3000               	movlw	high do_read@ads
  3980     032F  00A5               	movwf	uart_puts@s+1
  3981     0330  318F  2736  3182   	fcall	_uart_puts
  3982     0333                     l3412:
  3983                           
  3984                           ;main.c: 414:         if (col == 15) {
  3985     0333  300F               	movlw	15
  3986     0334  0021               	movlb	1	; select bank1
  3987     0335  0640               	xorwf	do_read@col^(0+128),w
  3988     0336  1D03               	btfss	3,2
  3989     0337  2B39               	goto	u3251
  3990     0338  2B3A               	goto	u3250
  3991     0339                     u3251:
  3992     0339  2B40               	goto	l3418
  3993     033A                     u3250:
  3994     033A                     l3414:
  3995                           
  3996                           ;main.c: 415:             col = 0;
  3997     033A  01C0               	clrf	do_read@col^(0+128)
  3998     033B                     l3416:
  3999                           
  4000                           ;main.c: 416:             uart_putc('\n');
  4001     033B  300A               	movlw	10
  4002     033C  318D  25A7  3182   	fcall	_uart_putc
  4003                           
  4004                           ;main.c: 417:         } else {
  4005     033F  2B4A               	goto	l3422
  4006     0340                     l3418:
  4007                           
  4008                           ;main.c: 418:             uart_putc(' ');
  4009     0340  3020               	movlw	32
  4010     0341  318D  25A7  3182   	fcall	_uart_putc
  4011     0344                     l3420:
  4012                           
  4013                           ;main.c: 419:             col++;
  4014     0344  3001               	movlw	1
  4015     0345  0020               	movlb	0	; select bank0
  4016     0346  00E0               	movwf	??_do_read
  4017     0347  0860               	movf	??_do_read,w
  4018     0348  0021               	movlb	1	; select bank1
  4019     0349  07C0               	addwf	do_read@col^(0+128),f
  4020     034A                     l3422:
  4021                           
  4022                           ;main.c: 421:     }
  4023     034A  3001               	movlw	1
  4024     034B  0021               	movlb	1	; select bank1
  4025     034C  07C1               	addwf	do_read@addr^(0+128),f
  4026     034D  3000               	movlw	0
  4027     034E  3DC2               	addwfc	(do_read@addr+1)^(0+128),f
  4028     034F                     l3424:
  4029     034F  3004               	movlw	4
  4030     0350  0242               	subwf	(do_read@addr+1)^(0+128),w
  4031     0351  3000               	movlw	0
  4032     0352  1903               	skipnz
  4033     0353  0241               	subwf	do_read@addr^(0+128),w
  4034     0354  1C03               	skipc
  4035     0355  2B57               	goto	u3261
  4036     0356  2B58               	goto	u3260
  4037     0357                     u3261:
  4038     0357  2AD8               	goto	l3392
  4039     0358                     u3260:
  4040     0358                     l140:
  4041                           
  4042                           ;main.c: 424:     PORTCbits.RC0 = 1;
  4043     0358  0020               	movlb	0	; select bank0
  4044     0359  140E               	bsf	14,0	;volatile
  4045     035A                     l142:
  4046     035A  0008               	return
  4047     035B                     __end_of_do_read:
  4048                           
  4049                           	psect	text12
  4050     0DA7                     __ptext12:	
  4051 ;; *************** function _uart_putc *****************
  4052 ;; Defined at:
  4053 ;;		line 160 in file "uart.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  c               1    wreg     unsigned char 
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;  c               1    4[BANK0 ] unsigned char 
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  1    wreg      void 
  4060 ;; Registers used:
  4061 ;;		wreg
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4068 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4070 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4071 ;;Total ram usage:        1 bytes
  4072 ;; Hardware stack levels used: 1
  4073 ;; Hardware stack levels required when called: 3
  4074 ;; This function calls:
  4075 ;;		Nothing
  4076 ;; This function is called by:
  4077 ;;		_do_read
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081     0DA7                     _uart_putc:	
  4082                           ;psect for function _uart_putc
  4083                           
  4084                           
  4085                           ;incstack = 0
  4086                           ; Regs used in _uart_putc: [wreg]
  4087                           ;uart_putc@c stored from wreg
  4088     0DA7  0020               	movlb	0	; select bank0
  4089     0DA8  00A4               	movwf	uart_putc@c
  4090     0DA9                     l3214:
  4091                           
  4092                           ;uart.c: 160: void uart_putc(char c);uart.c: 161: {;uart.c: 163:     while (PIR1bits.TXI
      +                          F == 0) {
  4093     0DA9  2DAB               	goto	l229
  4094     0DAA                     l230:
  4095                           
  4096                           ;uart.c: 164:         __nop();
  4097     0DAA  0000               	nop
  4098     0DAB                     l229:	
  4099                           ;uart.c: 165:     }
  4100                           
  4101                           
  4102                           ;uart.c: 163:     while (PIR1bits.TXIF == 0) {
  4103     0DAB  0020               	movlb	0	; select bank0
  4104     0DAC  1E11               	btfss	17,4	;volatile
  4105     0DAD  2DAF               	goto	u3061
  4106     0DAE  2DB0               	goto	u3060
  4107     0DAF                     u3061:
  4108     0DAF  2DAA               	goto	l230
  4109     0DB0                     u3060:
  4110     0DB0                     l3216:
  4111                           
  4112                           ;uart.c: 168:     TXREG = c;
  4113     0DB0  0824               	movf	uart_putc@c,w
  4114     0DB1  0023               	movlb	3	; select bank3
  4115     0DB2  009A               	movwf	26	;volatile
  4116                           
  4117                           ;uart.c: 171:     while(TXSTAbits.TRMT == 0) {
  4118     0DB3  2DB5               	goto	l232
  4119     0DB4                     l233:
  4120                           
  4121                           ;uart.c: 172:         __nop();
  4122     0DB4  0000               	nop
  4123     0DB5                     l232:	
  4124                           ;uart.c: 173:     }
  4125                           
  4126                           
  4127                           ;uart.c: 171:     while(TXSTAbits.TRMT == 0) {
  4128     0DB5  0023               	movlb	3	; select bank3
  4129     0DB6  1C9E               	btfss	30,1	;volatile
  4130     0DB7  2DB9               	goto	u3071
  4131     0DB8  2DBA               	goto	u3070
  4132     0DB9                     u3071:
  4133     0DB9  2DB4               	goto	l233
  4134     0DBA                     u3070:
  4135     0DBA                     l235:
  4136     0DBA  0008               	return
  4137     0DBB                     __end_of_uart_putc:
  4138                           
  4139                           	psect	text13
  4140     0EBF                     __ptext13:	
  4141 ;; *************** function _do_init *****************
  4142 ;; Defined at:
  4143 ;;		line 318 in file "main.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;		None
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;  s               8   13[BANK1 ] unsigned char [8]
  4148 ;;  rate            2   21[BANK1 ] unsigned short 
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  1    wreg      void 
  4151 ;; Registers used:
  4152 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4159 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4161 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4162 ;;Total ram usage:       10 bytes
  4163 ;; Hardware stack levels used: 1
  4164 ;; Hardware stack levels required when called: 11
  4165 ;; This function calls:
  4166 ;;		_sprintf
  4167 ;;		_uart_init_brg
  4168 ;;		_uart_puts
  4169 ;; This function is called by:
  4170 ;;		_main
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174     0EBF                     _do_init:	
  4175                           ;psect for function _do_init
  4176                           
  4177     0EBF                     l3334:	
  4178                           ;incstack = 0
  4179                           ; Regs used in _do_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4180                           
  4181                           
  4182                           ;main.c: 320:     uint16_t rate;;main.c: 321:     char s[8];;main.c: 323:     rate = uar
      +                          t_init_brg();
  4183     0EBF  3187  2769  318E   	fcall	_uart_init_brg
  4184     0EC2  0020               	movlb	0	; select bank0
  4185     0EC3  0825               	movf	?_uart_init_brg+1,w
  4186     0EC4  0021               	movlb	1	; select bank1
  4187     0EC5  00B6               	movwf	(do_init@rate+1)^(0+128)
  4188     0EC6  0020               	movlb	0	; select bank0
  4189     0EC7  0824               	movf	?_uart_init_brg,w
  4190     0EC8  0021               	movlb	1	; select bank1
  4191     0EC9  00B5               	movwf	do_init@rate^(0+128)
  4192     0ECA                     l3336:
  4193                           
  4194                           ;main.c: 325:     sprintf(s, "%d\n", rate);
  4195     0ECA  308E               	movlw	low (STR_1| (0+32768))
  4196     0ECB  0020               	movlb	0	; select bank0
  4197     0ECC  00DB               	movwf	sprintf@fmt
  4198     0ECD  3090               	movlw	high (STR_1| (0+32768))
  4199     0ECE  00DC               	movwf	sprintf@fmt+1
  4200     0ECF  0021               	movlb	1	; select bank1
  4201     0ED0  0836               	movf	(do_init@rate+1)^(0+128),w
  4202     0ED1  0020               	movlb	0	; select bank0
  4203     0ED2  00DE               	movwf	?_sprintf+3
  4204     0ED3  0021               	movlb	1	; select bank1
  4205     0ED4  0835               	movf	do_init@rate^(0+128),w
  4206     0ED5  0020               	movlb	0	; select bank0
  4207     0ED6  00DD               	movwf	?_sprintf+2
  4208     0ED7  30AD               	movlw	(low (do_init@s| 0))& (0+255)
  4209     0ED8  318E  263B  318E   	fcall	_sprintf
  4210     0EDB                     l3338:
  4211                           
  4212                           ;main.c: 326:     uart_puts(s);
  4213     0EDB  30AD               	movlw	low do_init@s
  4214     0EDC  0020               	movlb	0	; select bank0
  4215     0EDD  00A4               	movwf	uart_puts@s
  4216     0EDE  3000               	movlw	high do_init@s
  4217     0EDF  00A5               	movwf	uart_puts@s+1
  4218     0EE0  318F  2736  318E   	fcall	_uart_puts
  4219     0EE3                     l128:
  4220     0EE3  0008               	return
  4221     0EE4                     __end_of_do_init:
  4222                           
  4223                           	psect	text14
  4224     0769                     __ptext14:	
  4225 ;; *************** function _uart_init_brg *****************
  4226 ;; Defined at:
  4227 ;;		line 89 in file "uart.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;		None
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;  c               1    0        unsigned char 
  4232 ;;  rate            2   11[BANK0 ] unsigned short 
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  2    4[BANK0 ] unsigned short 
  4235 ;; Registers used:
  4236 ;;		wreg, status,2
  4237 ;; Tracked objects:
  4238 ;;		On entry : 0/0
  4239 ;;		On exit  : 0/0
  4240 ;;		Unchanged: 0/0
  4241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4242 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4243 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4244 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4245 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4246 ;;Total ram usage:        9 bytes
  4247 ;; Hardware stack levels used: 1
  4248 ;; Hardware stack levels required when called: 3
  4249 ;; This function calls:
  4250 ;;		Nothing
  4251 ;; This function is called by:
  4252 ;;		_do_init
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256     0769                     _uart_init_brg:	
  4257                           ;psect for function _uart_init_brg
  4258                           
  4259     0769                     l3166:	
  4260                           ;incstack = 0
  4261                           ; Regs used in _uart_init_brg: [wreg+status,2]
  4262                           
  4263     0769                     l3168:
  4264                           
  4265                           ;uart.c: 93:     PIE1bits.RCIE=0;
  4266     0769  0021               	movlb	1	; select bank1
  4267     076A  1291               	bcf	17,5	;volatile
  4268     076B                     l3170:
  4269                           
  4270                           ;uart.c: 96:     BAUDCONbits.ABDEN = 1;
  4271     076B  0023               	movlb	3	; select bank3
  4272     076C  141F               	bsf	31,0	;volatile
  4273     076D                     l3172:
  4274                           
  4275                           ;uart.c: 102:         if (PIR1bits.RCIF) {
  4276     076D  0020               	movlb	0	; select bank0
  4277     076E  1E91               	btfss	17,5	;volatile
  4278     076F  2F71               	goto	u3011
  4279     0770  2F72               	goto	u3010
  4280     0771                     u3011:
  4281     0771  2F75               	goto	l214
  4282     0772                     u3010:
  4283     0772                     l3174:
  4284     0772  0023               	movlb	3	; select bank3
  4285     0773  0819               	movf	25,w	;volatile
  4286                           
  4287                           ;uart.c: 104:             break;
  4288     0774  2F99               	goto	l3184
  4289     0775                     l214:	
  4290                           ;uart.c: 105:         }
  4291                           
  4292                           
  4293                           ;uart.c: 108:         PORTEbits.RE1 = 1;
  4294     0775  1490               	bsf	16,1	;volatile
  4295     0776                     l3176:
  4296                           
  4297                           ;uart.c: 109:         _delay((unsigned long)((250)*(20000000/4000.0)));
  4298     0776  3007               	movlw	7
  4299     0777  0020               	movlb	0	; select bank0
  4300     0778  00A7               	movwf	??_uart_init_brg+1
  4301     0779  3058               	movlw	88
  4302     077A  00A6               	movwf	??_uart_init_brg
  4303     077B  3059               	movlw	89
  4304     077C                     u3517:
  4305     077C  0B89               	decfsz	9,f
  4306     077D  2F7C               	goto	u3517
  4307     077E  0BA6               	decfsz	??_uart_init_brg,f
  4308     077F  2F7C               	goto	u3517
  4309     0780  0BA7               	decfsz	??_uart_init_brg+1,f
  4310     0781  2F7C               	goto	u3517
  4311     0782  3200               	nop2
  4312     0783                     l3178:
  4313                           
  4314                           ;uart.c: 110:         PORTEbits.RE1 = 0;
  4315     0783  0020               	movlb	0	; select bank0
  4316     0784  1090               	bcf	16,1	;volatile
  4317                           
  4318                           ;uart.c: 111:         _delay((unsigned long)((250)*(20000000/4000.0)));
  4319     0785  3007               	movlw	7
  4320     0786  0020               	movlb	0	; select bank0
  4321     0787  00A7               	movwf	??_uart_init_brg+1
  4322     0788  3058               	movlw	88
  4323     0789  00A6               	movwf	??_uart_init_brg
  4324     078A  3059               	movlw	89
  4325     078B                     u3527:
  4326     078B  0B89               	decfsz	9,f
  4327     078C  2F8B               	goto	u3527
  4328     078D  0BA6               	decfsz	??_uart_init_brg,f
  4329     078E  2F8B               	goto	u3527
  4330     078F  0BA7               	decfsz	??_uart_init_brg+1,f
  4331     0790  2F8B               	goto	u3527
  4332     0791  3200               	nop2
  4333     0792                     l3180:
  4334                           
  4335                           ;uart.c: 113:         if ( BAUDCONbits.ABDOVF ) {
  4336     0792  0023               	movlb	3	; select bank3
  4337     0793  1F9F               	btfss	31,7	;volatile
  4338     0794  2F96               	goto	u3021
  4339     0795  2F97               	goto	u3020
  4340     0796                     u3021:
  4341     0796  2F6D               	goto	l3172
  4342     0797                     u3020:
  4343     0797                     l3182:
  4344                           
  4345                           ;uart.c: 114:             BAUDCONbits.ABDOVF = 0;
  4346     0797  139F               	bcf	31,7	;volatile
  4347     0798  2F6D               	goto	l3172
  4348     0799                     l3184:
  4349                           
  4350                           ;uart.c: 119:     rate = (SPBRGH << 8) | SPBRG;
  4351     0799  081C               	movf	28,w	;volatile
  4352     079A  0020               	movlb	0	; select bank0
  4353     079B  00A6               	movwf	??_uart_init_brg
  4354     079C  01A7               	clrf	??_uart_init_brg+1
  4355     079D  0826               	movf	??_uart_init_brg,w
  4356     079E  00A7               	movwf	??_uart_init_brg+1
  4357     079F  01A6               	clrf	??_uart_init_brg
  4358     07A0  0023               	movlb	3	; select bank3
  4359     07A1  081B               	movf	27,w	;volatile
  4360     07A2  0020               	movlb	0	; select bank0
  4361     07A3  0426               	iorwf	??_uart_init_brg,w
  4362     07A4  00A9               	movwf	??_uart_init_brg+3
  4363     07A5  0023               	movlb	3	; select bank3
  4364     07A6  081C               	movf	28,w	;volatile
  4365     07A7  0020               	movlb	0	; select bank0
  4366     07A8  0427               	iorwf	??_uart_init_brg+1,w
  4367     07A9  00AA               	movwf	??_uart_init_brg+4
  4368     07AA  0829               	movf	??_uart_init_brg+3,w
  4369     07AB  00AB               	movwf	uart_init_brg@rate
  4370     07AC  082A               	movf	??_uart_init_brg+4,w
  4371     07AD  00AC               	movwf	uart_init_brg@rate+1
  4372     07AE                     l3186:
  4373                           
  4374                           ;uart.c: 122:     PORTEbits.RE1 = 0;
  4375     07AE  1090               	bcf	16,1	;volatile
  4376     07AF                     l3188:
  4377                           
  4378                           ;uart.c: 125:     PIE1bits.RCIE=1;
  4379     07AF  0021               	movlb	1	; select bank1
  4380     07B0  1691               	bsf	17,5	;volatile
  4381                           
  4382                           ;uart.c: 127:     return rate;
  4383     07B1  0020               	movlb	0	; select bank0
  4384     07B2  082C               	movf	uart_init_brg@rate+1,w
  4385     07B3  00A5               	movwf	?_uart_init_brg+1
  4386     07B4  082B               	movf	uart_init_brg@rate,w
  4387     07B5  00A4               	movwf	?_uart_init_brg
  4388     07B6                     l218:
  4389     07B6  0008               	return
  4390     07B7                     __end_of_uart_init_brg:
  4391                           
  4392                           	psect	text15
  4393     035B                     __ptext15:	
  4394 ;; *************** function _do_blank *****************
  4395 ;; Defined at:
  4396 ;;		line 333 in file "main.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;		None
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;  data            1   46[BANK1 ] unsigned char 
  4401 ;;  ads            32   13[BANK1 ] unsigned char [32]
  4402 ;;  addr            2   49[BANK1 ] unsigned short 
  4403 ;;  s               2   47[BANK1 ] PTR unsigned char 
  4404 ;;		 -> STR_6(21), STR_2(15), 
  4405 ;;  ok              1   45[BANK1 ] _Bool 
  4406 ;; Return value:  Size  Location     Type
  4407 ;;                  1    wreg      void 
  4408 ;; Registers used:
  4409 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4416 ;;      Locals:         0       0      38       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4417 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4418 ;;      Totals:         0       2      38       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4419 ;;Total ram usage:       40 bytes
  4420 ;; Hardware stack levels used: 1
  4421 ;; Hardware stack levels required when called: 11
  4422 ;; This function calls:
  4423 ;;		_read_port
  4424 ;;		_setup_address
  4425 ;;		_sprintf
  4426 ;;		_uart_puts
  4427 ;; This function is called by:
  4428 ;;		_main
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432     035B                     _do_blank:	
  4433                           ;psect for function _do_blank
  4434                           
  4435     035B                     l3340:	
  4436                           ;incstack = 0
  4437                           ; Regs used in _do_blank: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4438                           
  4439                           
  4440                           ;main.c: 335:     uint16_t addr;;main.c: 336:     char ads[32];;main.c: 337:     _Bool o
      +                          k = 1;
  4441     035B  0021               	movlb	1	; select bank1
  4442     035C  01CD               	clrf	do_blank@ok^(0+128)
  4443     035D  0ACD               	incf	do_blank@ok^(0+128),f
  4444                           
  4445                           ;main.c: 338:     char *s;;main.c: 341:     PORTCbits.RC0 = 0;
  4446     035E  0020               	movlb	0	; select bank0
  4447     035F  100E               	bcf	14,0	;volatile
  4448                           
  4449                           ;main.c: 342:     PORTCbits.RC1 = 1;
  4450     0360  148E               	bsf	14,1	;volatile
  4451                           
  4452                           ;main.c: 343:     PORTCbits.RC2 = 1;
  4453     0361  150E               	bsf	14,2	;volatile
  4454     0362                     l3342:
  4455                           
  4456                           ;main.c: 345:     for (addr = 0; addr < 1048; ++addr) {
  4457     0362  0021               	movlb	1	; select bank1
  4458     0363  01D1               	clrf	do_blank@addr^(0+128)
  4459     0364  01D2               	clrf	(do_blank@addr+1)^(0+128)
  4460     0365                     l3348:
  4461                           
  4462                           ;main.c: 346:         if (cmd_active == 0) {
  4463     0365  086D               	movf	_cmd_active^(0+128),w
  4464     0366  1D03               	btfss	3,2
  4465     0367  2B69               	goto	u3191
  4466     0368  2B6A               	goto	u3190
  4467     0369                     u3191:
  4468     0369  2B79               	goto	l3356
  4469     036A                     u3190:
  4470     036A                     l3350:
  4471                           
  4472                           ;main.c: 347:             s = "Check aborted\n";
  4473     036A  3053               	movlw	low (STR_2| (0+32768))
  4474     036B  00CF               	movwf	do_blank@s^(0+128)
  4475     036C  3090               	movlw	high (STR_2| (0+32768))
  4476     036D  00D0               	movwf	(do_blank@s^(0+128)+1)
  4477     036E                     l3352:
  4478                           
  4479                           ;main.c: 348:             uart_puts(s);
  4480     036E  0850               	movf	(do_blank@s+1)^(0+128),w
  4481     036F  0020               	movlb	0	; select bank0
  4482     0370  00A5               	movwf	uart_puts@s+1
  4483     0371  0021               	movlb	1	; select bank1
  4484     0372  084F               	movf	do_blank@s^(0+128),w
  4485     0373  0020               	movlb	0	; select bank0
  4486     0374  00A4               	movwf	uart_puts@s
  4487     0375  318F  2736  3183   	fcall	_uart_puts
  4488     0378  2BE5               	goto	l134
  4489     0379                     l3356:
  4490                           
  4491                           ;main.c: 353:         setup_address(addr);
  4492     0379  0852               	movf	(do_blank@addr+1)^(0+128),w
  4493     037A  0020               	movlb	0	; select bank0
  4494     037B  00A5               	movwf	setup_address@addr+1
  4495     037C  0021               	movlb	1	; select bank1
  4496     037D  0851               	movf	do_blank@addr^(0+128),w
  4497     037E  0020               	movlb	0	; select bank0
  4498     037F  00A4               	movwf	setup_address@addr
  4499     0380  318D  2581  3183   	fcall	_setup_address
  4500     0383                     l3358:
  4501                           
  4502                           ;main.c: 356:         uint8_t data = read_port();
  4503     0383  318D  254C  3183   	fcall	_read_port
  4504     0386  0021               	movlb	1	; select bank1
  4505     0387  00CE               	movwf	do_blank@data^(0+128)
  4506     0388                     l3360:
  4507                           
  4508                           ;main.c: 358:         if (data != 0xff) {
  4509     0388  0A4E               	incf	do_blank@data^(0+128),w
  4510     0389  1903               	btfsc	3,2
  4511     038A  2B8C               	goto	u3201
  4512     038B  2B8D               	goto	u3200
  4513     038C                     u3201:
  4514     038C  2BCB               	goto	l3372
  4515     038D                     u3200:
  4516     038D                     l3362:
  4517                           
  4518                           ;main.c: 359:             uart_puts("Erase check fail at address ");
  4519     038D  3000               	movlw	low (STR_3| (0+32768))
  4520     038E  0020               	movlb	0	; select bank0
  4521     038F  00A4               	movwf	uart_puts@s
  4522     0390  3090               	movlw	high (STR_3| (0+32768))
  4523     0391  00A5               	movwf	uart_puts@s+1
  4524     0392  318F  2736  3183   	fcall	_uart_puts
  4525     0395                     l3364:
  4526                           
  4527                           ;main.c: 360:             sprintf(ads, "0x%04x = ", addr);
  4528     0395  3070               	movlw	low (STR_4| (0+32768))
  4529     0396  0020               	movlb	0	; select bank0
  4530     0397  00DB               	movwf	sprintf@fmt
  4531     0398  3090               	movlw	high (STR_4| (0+32768))
  4532     0399  00DC               	movwf	sprintf@fmt+1
  4533     039A  0021               	movlb	1	; select bank1
  4534     039B  0852               	movf	(do_blank@addr+1)^(0+128),w
  4535     039C  0020               	movlb	0	; select bank0
  4536     039D  00DE               	movwf	?_sprintf+3
  4537     039E  0021               	movlb	1	; select bank1
  4538     039F  0851               	movf	do_blank@addr^(0+128),w
  4539     03A0  0020               	movlb	0	; select bank0
  4540     03A1  00DD               	movwf	?_sprintf+2
  4541     03A2  30AD               	movlw	(low (do_blank@ads| 0))& (0+255)
  4542     03A3  318E  263B  3183   	fcall	_sprintf
  4543     03A6                     l3366:
  4544                           
  4545                           ;main.c: 361:             uart_puts(ads);
  4546     03A6  30AD               	movlw	low do_blank@ads
  4547     03A7  0020               	movlb	0	; select bank0
  4548     03A8  00A4               	movwf	uart_puts@s
  4549     03A9  3000               	movlw	high do_blank@ads
  4550     03AA  00A5               	movwf	uart_puts@s+1
  4551     03AB  318F  2736  3183   	fcall	_uart_puts
  4552                           
  4553                           ;main.c: 362:             sprintf(ads, "0x%02x\n", data);
  4554     03AE  307A               	movlw	low (STR_5| (0+32768))
  4555     03AF  0020               	movlb	0	; select bank0
  4556     03B0  00DB               	movwf	sprintf@fmt
  4557     03B1  3090               	movlw	high (STR_5| (0+32768))
  4558     03B2  00DC               	movwf	sprintf@fmt+1
  4559     03B3  0021               	movlb	1	; select bank1
  4560     03B4  084E               	movf	do_blank@data^(0+128),w
  4561     03B5  0020               	movlb	0	; select bank0
  4562     03B6  00E0               	movwf	??_do_blank
  4563     03B7  01E1               	clrf	??_do_blank+1
  4564     03B8  0860               	movf	??_do_blank,w
  4565     03B9  00DD               	movwf	?_sprintf+2
  4566     03BA  0861               	movf	??_do_blank+1,w
  4567     03BB  00DE               	movwf	?_sprintf+3
  4568     03BC  30AD               	movlw	(low (do_blank@ads| 0))& (0+255)
  4569     03BD  318E  263B  3183   	fcall	_sprintf
  4570     03C0                     l3368:
  4571                           
  4572                           ;main.c: 363:             uart_puts(ads);
  4573     03C0  30AD               	movlw	low do_blank@ads
  4574     03C1  0020               	movlb	0	; select bank0
  4575     03C2  00A4               	movwf	uart_puts@s
  4576     03C3  3000               	movlw	high do_blank@ads
  4577     03C4  00A5               	movwf	uart_puts@s+1
  4578     03C5  318F  2736  3183   	fcall	_uart_puts
  4579     03C8                     l3370:
  4580                           
  4581                           ;main.c: 364:             ok = 0;
  4582     03C8  0021               	movlb	1	; select bank1
  4583     03C9  01CD               	clrf	do_blank@ok^(0+128)
  4584                           
  4585                           ;main.c: 365:             break;
  4586     03CA  2BD8               	goto	l132
  4587     03CB                     l3372:
  4588                           
  4589                           ;main.c: 367:     }
  4590     03CB  3001               	movlw	1
  4591     03CC  07D1               	addwf	do_blank@addr^(0+128),f
  4592     03CD  3000               	movlw	0
  4593     03CE  3DD2               	addwfc	(do_blank@addr+1)^(0+128),f
  4594     03CF  3004               	movlw	4
  4595     03D0  0252               	subwf	(do_blank@addr+1)^(0+128),w
  4596     03D1  3018               	movlw	24
  4597     03D2  1903               	skipnz
  4598     03D3  0251               	subwf	do_blank@addr^(0+128),w
  4599     03D4  1C03               	skipc
  4600     03D5  2BD7               	goto	u3211
  4601     03D6  2BD8               	goto	u3210
  4602     03D7                     u3211:
  4603     03D7  2B65               	goto	l3348
  4604     03D8                     u3210:
  4605     03D8                     l132:
  4606                           
  4607                           ;main.c: 370:     PORTCbits.RC0 = 1;
  4608     03D8  0020               	movlb	0	; select bank0
  4609     03D9  140E               	bsf	14,0	;volatile
  4610     03DA                     l3374:
  4611                           
  4612                           ;main.c: 372:     if (ok) {
  4613     03DA  0021               	movlb	1	; select bank1
  4614     03DB  084D               	movf	do_blank@ok^(0+128),w
  4615     03DC  1903               	btfsc	3,2
  4616     03DD  2BDF               	goto	u3221
  4617     03DE  2BE0               	goto	u3220
  4618     03DF                     u3221:
  4619     03DF  2BE5               	goto	l134
  4620     03E0                     u3220:
  4621     03E0                     l3376:
  4622                           
  4623                           ;main.c: 373:         s = "Erase check passed.\n";
  4624     03E0  301D               	movlw	low (STR_6| (0+32768))
  4625     03E1  00CF               	movwf	do_blank@s^(0+128)
  4626     03E2  3090               	movlw	high (STR_6| (0+32768))
  4627     03E3  00D0               	movwf	(do_blank@s^(0+128)+1)
  4628     03E4  2B6E               	goto	l3352
  4629     03E5                     l134:
  4630     03E5  0008               	return
  4631     03E6                     __end_of_do_blank:
  4632                           
  4633                           	psect	text16
  4634     0F36                     __ptext16:	
  4635 ;; *************** function _uart_puts *****************
  4636 ;; Defined at:
  4637 ;;		line 180 in file "uart.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;  s               2    4[BANK0 ] PTR unsigned char 
  4640 ;;		 -> do_write@ads(48), STR_10(15), do_read@ads(16), STR_7(14), 
  4641 ;;		 -> STR_6(21), do_blank@ads(32), STR_3(29), STR_2(15), 
  4642 ;;		 -> do_init@s(8), 
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;  p               2    7[BANK0 ] PTR unsigned char 
  4645 ;;		 -> do_write@ads(48), STR_10(15), do_read@ads(16), STR_7(14), 
  4646 ;;		 -> STR_6(21), do_blank@ads(32), STR_3(29), STR_2(15), 
  4647 ;;		 -> do_init@s(8), 
  4648 ;; Return value:  Size  Location     Type
  4649 ;;                  1    wreg      void 
  4650 ;; Registers used:
  4651 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4652 ;; Tracked objects:
  4653 ;;		On entry : 0/0
  4654 ;;		On exit  : 0/0
  4655 ;;		Unchanged: 0/0
  4656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4657 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4658 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4659 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4660 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4661 ;;Total ram usage:        5 bytes
  4662 ;; Hardware stack levels used: 1
  4663 ;; Hardware stack levels required when called: 3
  4664 ;; This function calls:
  4665 ;;		Nothing
  4666 ;; This function is called by:
  4667 ;;		_do_init
  4668 ;;		_do_blank
  4669 ;;		_do_read
  4670 ;;		_do_write
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674     0F36                     _uart_puts:	
  4675                           ;psect for function _uart_puts
  4676                           
  4677     0F36                     l3204:	
  4678                           ;incstack = 0
  4679                           ; Regs used in _uart_puts: [wreg-fsr0h+status,2+status,0+pclath]
  4680                           
  4681                           
  4682                           ;uart.c: 180: void uart_puts(char *s);uart.c: 181: {;uart.c: 183:     while (PIR1bits.TX
      +                          IF == 0) {
  4683     0F36  2F38               	goto	l238
  4684     0F37                     l239:
  4685                           
  4686                           ;uart.c: 184:         __nop();
  4687     0F37  0000               	nop
  4688     0F38                     l238:	
  4689                           ;uart.c: 185:     }
  4690                           
  4691                           
  4692                           ;uart.c: 183:     while (PIR1bits.TXIF == 0) {
  4693     0F38  0020               	movlb	0	; select bank0
  4694     0F39  1E11               	btfss	17,4	;volatile
  4695     0F3A  2F3C               	goto	u3031
  4696     0F3B  2F3D               	goto	u3030
  4697     0F3C                     u3031:
  4698     0F3C  2F37               	goto	l239
  4699     0F3D                     u3030:
  4700     0F3D                     l3206:
  4701                           
  4702                           ;uart.c: 188:     char *p = s;
  4703     0F3D  0825               	movf	uart_puts@s+1,w
  4704     0F3E  00A8               	movwf	uart_puts@p+1
  4705     0F3F  0824               	movf	uart_puts@s,w
  4706     0F40  00A7               	movwf	uart_puts@p
  4707                           
  4708                           ;uart.c: 189:     while (*p) {
  4709     0F41  2F55               	goto	l3212
  4710     0F42                     l3208:
  4711                           
  4712                           ;uart.c: 190:         TXREG = *p++;
  4713     0F42  0827               	movf	uart_puts@p,w
  4714     0F43  0084               	movwf	4
  4715     0F44  0828               	movf	uart_puts@p+1,w
  4716     0F45  0085               	movwf	5
  4717     0F46  0800               	movf	0,w	;code access
  4718     0F47  0023               	movlb	3	; select bank3
  4719     0F48  009A               	movwf	26	;volatile
  4720     0F49                     l3210:
  4721     0F49  3001               	movlw	1
  4722     0F4A  0020               	movlb	0	; select bank0
  4723     0F4B  07A7               	addwf	uart_puts@p,f
  4724     0F4C  3000               	movlw	0
  4725     0F4D  3DA8               	addwfc	uart_puts@p+1,f
  4726                           
  4727                           ;uart.c: 191:         while(TXSTAbits.TRMT == 0) {
  4728     0F4E  2F50               	goto	l243
  4729     0F4F                     l244:
  4730                           
  4731                           ;uart.c: 192:             __nop();
  4732     0F4F  0000               	nop
  4733     0F50                     l243:	
  4734                           ;uart.c: 193:         }
  4735                           
  4736                           
  4737                           ;uart.c: 191:         while(TXSTAbits.TRMT == 0) {
  4738     0F50  0023               	movlb	3	; select bank3
  4739     0F51  1C9E               	btfss	30,1	;volatile
  4740     0F52  2F54               	goto	u3041
  4741     0F53  2F55               	goto	u3040
  4742     0F54                     u3041:
  4743     0F54  2F4F               	goto	l244
  4744     0F55                     u3040:
  4745     0F55                     l3212:
  4746                           
  4747                           ;uart.c: 189:     while (*p) {
  4748     0F55  0020               	movlb	0	; select bank0
  4749     0F56  0827               	movf	uart_puts@p,w
  4750     0F57  0084               	movwf	4
  4751     0F58  0828               	movf	uart_puts@p+1,w
  4752     0F59  0085               	movwf	5
  4753     0F5A  0012               	moviw fsr0++
  4754     0F5B  1D03               	btfss	3,2
  4755     0F5C  2F5E               	goto	u3051
  4756     0F5D  2F5F               	goto	u3050
  4757     0F5E                     u3051:
  4758     0F5E  2F42               	goto	l3208
  4759     0F5F                     u3050:
  4760     0F5F                     l247:
  4761     0F5F  0008               	return
  4762     0F60                     __end_of_uart_puts:
  4763                           
  4764                           	psect	text17
  4765     0E3B                     __ptext17:	
  4766 ;; *************** function _sprintf *****************
  4767 ;; Defined at:
  4768 ;;		line 9 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/nf_sprintf.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;  s               1    wreg     PTR unsigned char 
  4771 ;;		 -> do_write@ads(48), do_read@ads(16), do_blank@ads(32), do_init@s(8), 
  4772 ;;  fmt             2   59[BANK0 ] PTR const unsigned char 
  4773 ;;		 -> STR_11(18), STR_9(5), STR_8(7), STR_5(8), 
  4774 ;;		 -> STR_4(10), STR_1(4), 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  s               1    1[BANK1 ] PTR unsigned char 
  4777 ;;		 -> do_write@ads(48), do_read@ads(16), do_blank@ads(32), do_init@s(8), 
  4778 ;;  f              11    2[BANK1 ] struct _IO_FILE
  4779 ;;  ret             2    0        int 
  4780 ;;  ap              1    0[BANK1 ] PTR void [1]
  4781 ;;		 -> ?_sprintf(2), 
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  2   59[BANK0 ] int 
  4784 ;; Registers used:
  4785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4791 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4792 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4793 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4794 ;;      Totals:         0       5      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4795 ;;Total ram usage:       18 bytes
  4796 ;; Hardware stack levels used: 1
  4797 ;; Hardware stack levels required when called: 10
  4798 ;; This function calls:
  4799 ;;		_vfprintf
  4800 ;; This function is called by:
  4801 ;;		_do_init
  4802 ;;		_do_blank
  4803 ;;		_do_read
  4804 ;;		_do_write
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808     0E3B                     _sprintf:	
  4809                           ;psect for function _sprintf
  4810                           
  4811                           
  4812                           ;incstack = 0
  4813                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4814                           ;sprintf@s stored from wreg
  4815     0E3B  0021               	movlb	1	; select bank1
  4816     0E3C  00A1               	movwf	sprintf@s^(0+128)
  4817     0E3D                     l3192:
  4818     0E3D  305D               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  4819     0E3E  00A0               	movwf	sprintf@ap^(0+128)
  4820     0E3F  0821               	movf	sprintf@s^(0+128),w
  4821     0E40  00A2               	movwf	sprintf@f^(0+128)
  4822     0E41                     l3194:
  4823     0E41  01A4               	clrf	(sprintf@f^(0+128)+2)
  4824     0E42  01A5               	clrf	((sprintf@f+1)^(0+128)+2)
  4825     0E43                     l3196:
  4826     0E43  01AB               	clrf	(sprintf@f^(0+128)+9)
  4827     0E44  01AC               	clrf	((sprintf@f+1)^(0+128)+9)
  4828     0E45                     l3198:
  4829     0E45  0020               	movlb	0	; select bank0
  4830     0E46  085C               	movf	sprintf@fmt+1,w
  4831     0E47  00D5               	movwf	vfprintf@fmt+1
  4832     0E48  085B               	movf	sprintf@fmt,w
  4833     0E49  00D4               	movwf	vfprintf@fmt
  4834     0E4A  30A0               	movlw	(low (sprintf@ap| 0))& (0+255)
  4835     0E4B  00D6               	movwf	vfprintf@ap
  4836     0E4C  30A2               	movlw	(low (sprintf@f| 0))& (0+255)
  4837     0E4D  318E  2602  318E   	fcall	_vfprintf
  4838     0E50                     l3200:
  4839     0E50  0021               	movlb	1	; select bank1
  4840     0E51  0824               	movf	(sprintf@f^(0+128)+2),w
  4841     0E52  0721               	addwf	sprintf@s^(0+128),w
  4842     0E53  0020               	movlb	0	; select bank0
  4843     0E54  00DF               	movwf	??_sprintf
  4844     0E55  085F               	movf	??_sprintf,w
  4845     0E56  0086               	movwf	6
  4846     0E57  0187               	clrf	7
  4847     0E58  0181               	clrf	1
  4848     0E59                     l866:
  4849     0E59  0008               	return
  4850     0E5A                     __end_of_sprintf:
  4851                           
  4852                           	psect	text18
  4853     0E02                     __ptext18:	
  4854 ;; *************** function _vfprintf *****************
  4855 ;; Defined at:
  4856 ;;		line 1817 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;  fp              1    wreg     PTR struct _IO_FILE
  4859 ;;		 -> sprintf@f(11), 
  4860 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
  4861 ;;		 -> STR_11(18), STR_9(5), STR_8(7), STR_5(8), 
  4862 ;;		 -> STR_4(10), STR_1(4), 
  4863 ;;  ap              1   54[BANK0 ] PTR PTR void 
  4864 ;;		 -> sprintf@ap(1), 
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;  fp              1   56[BANK0 ] PTR struct _IO_FILE
  4867 ;;		 -> sprintf@f(11), 
  4868 ;;  cfmt            2   57[BANK0 ] PTR unsigned char 
  4869 ;;		 -> STR_11(18), STR_9(5), STR_8(7), STR_5(8), 
  4870 ;;		 -> STR_4(10), STR_1(4), 
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  2   52[BANK0 ] int 
  4873 ;; Registers used:
  4874 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4880 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4881 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4882 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4883 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4884 ;;Total ram usage:        7 bytes
  4885 ;; Hardware stack levels used: 1
  4886 ;; Hardware stack levels required when called: 9
  4887 ;; This function calls:
  4888 ;;		_vfpfcnvrt
  4889 ;; This function is called by:
  4890 ;;		_sprintf
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894     0E02                     _vfprintf:	
  4895                           ;psect for function _vfprintf
  4896                           
  4897                           
  4898                           ;incstack = 0
  4899                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4900                           ;vfprintf@fp stored from wreg
  4901     0E02  0020               	movlb	0	; select bank0
  4902     0E03  00D8               	movwf	vfprintf@fp
  4903     0E04                     l3080:
  4904                           
  4905                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.46/pic/sources/c99/
      +                          common/doprnt.c: 1818: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt
      +                          .c: 1820:     char *cfmt;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprn
      +                          t.c: 1822:     cfmt = (char *)fmt;
  4906     0E04  0855               	movf	vfprintf@fmt+1,w
  4907     0E05  00DA               	movwf	vfprintf@cfmt+1
  4908     0E06  0854               	movf	vfprintf@fmt,w
  4909     0E07  00D9               	movwf	vfprintf@cfmt
  4910                           
  4911                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
  4912     0E08  2E11               	goto	l3084
  4913     0E09                     l3082:
  4914                           
  4915                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1830:    vfpfcnvrt(f
      +                          p, &cfmt, ap);
  4916     0E09  3059               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4917     0E0A  00C6               	movwf	vfpfcnvrt@fmt
  4918     0E0B  0856               	movf	vfprintf@ap,w
  4919     0E0C  00C7               	movwf	vfpfcnvrt@ap
  4920     0E0D  0858               	movf	vfprintf@fp,w
  4921     0E0E  3180  2072  318E   	fcall	_vfpfcnvrt
  4922     0E11                     l3084:
  4923                           
  4924                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
  4925     0E11  0020               	movlb	0	; select bank0
  4926     0E12  0859               	movf	vfprintf@cfmt,w
  4927     0E13  0084               	movwf	4
  4928     0E14  085A               	movf	vfprintf@cfmt+1,w
  4929     0E15  0085               	movwf	5
  4930     0E16  0012               	moviw fsr0++
  4931     0E17  1D03               	btfss	3,2
  4932     0E18  2E1A               	goto	u2961
  4933     0E19  2E1B               	goto	u2960
  4934     0E1A                     u2961:
  4935     0E1A  2E09               	goto	l3082
  4936     0E1B                     u2960:
  4937     0E1B                     l3086:
  4938                           
  4939                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1835:  return 0;
  4940     0E1B  01D4               	clrf	?_vfprintf
  4941     0E1C  01D5               	clrf	?_vfprintf+1
  4942     0E1D                     l954:
  4943     0E1D  0008               	return
  4944     0E1E                     __end_of_vfprintf:
  4945                           
  4946                           	psect	text19
  4947     0072                     __ptext19:	
  4948 ;; *************** function _vfpfcnvrt *****************
  4949 ;; Defined at:
  4950 ;;		line 1177 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;  fp              1    wreg     PTR struct _IO_FILE
  4953 ;;		 -> sprintf@f(11), 
  4954 ;;  fmt             1   38[BANK0 ] PTR PTR unsigned char 
  4955 ;;		 -> vfprintf@cfmt(2), 
  4956 ;;  ap              1   39[BANK0 ] PTR PTR void 
  4957 ;;		 -> sprintf@ap(1), 
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;  fp              1   49[BANK0 ] PTR struct _IO_FILE
  4960 ;;		 -> sprintf@f(11), 
  4961 ;;  convarg         4   45[BANK0 ] struct .
  4962 ;;  cp              2   50[BANK0 ] PTR unsigned char 
  4963 ;;		 -> STR_11(18), STR_9(5), STR_8(7), STR_5(8), 
  4964 ;;		 -> STR_4(10), STR_1(4), 
  4965 ;;  done            1   44[BANK0 ] _Bool 
  4966 ;;  c               1    0        unsigned char 
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  1    wreg      void 
  4969 ;; Registers used:
  4970 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4976 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4977 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4978 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4979 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4980 ;;Total ram usage:       14 bytes
  4981 ;; Hardware stack levels used: 1
  4982 ;; Hardware stack levels required when called: 8
  4983 ;; This function calls:
  4984 ;;		_dtoa
  4985 ;;		_fputc
  4986 ;;		_read_prec_or_width
  4987 ;;		_xtoa
  4988 ;; This function is called by:
  4989 ;;		_vfprintf
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993     0072                     _vfpfcnvrt:	
  4994                           ;psect for function _vfpfcnvrt
  4995                           
  4996                           
  4997                           ;incstack = 0
  4998                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4999                           ;vfpfcnvrt@fp stored from wreg
  5000     0072  0020               	movlb	0	; select bank0
  5001     0073  00D1               	movwf	vfpfcnvrt@fp
  5002     0074                     l3006:
  5003                           
  5004                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE
      +                           *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.46/pic/sources/c99/common/
      +                          doprnt.c: 1178: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 117
      +                          9:     char c, *cp;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1
      +                          180:     _Bool done;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 
      +                          1188:  } convarg;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 120
      +                          1:     if ((*fmt)[0] == '%') {
  5005     0074  0846               	movf	vfpfcnvrt@fmt,w
  5006     0075  0086               	movwf	6
  5007     0076  0187               	clrf	7
  5008     0077  3F40               	moviw [0]fsr1
  5009     0078  00C8               	movwf	??_vfpfcnvrt
  5010     0079  3F41               	moviw [1]fsr1
  5011     007A  00C9               	movwf	??_vfpfcnvrt+1
  5012     007B  0848               	movf	??_vfpfcnvrt,w
  5013     007C  0084               	movwf	4
  5014     007D  0849               	movf	??_vfpfcnvrt+1,w
  5015     007E  0085               	movwf	5
  5016     007F  0012               	moviw fsr0++
  5017     0080  3A25               	xorlw	37
  5018     0081  1D03               	btfss	3,2
  5019     0082  2884               	goto	u2891
  5020     0083  2885               	goto	u2890
  5021     0084                     u2891:
  5022     0084  2958               	goto	l3064
  5023     0085                     u2890:
  5024     0085                     l3008:
  5025                           
  5026                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt
      +                          ;
  5027     0085  0846               	movf	vfpfcnvrt@fmt,w
  5028     0086  0086               	movwf	6
  5029     0087  0187               	clrf	7
  5030     0088  3001               	movlw	1
  5031     0089  0781               	addwf	1,f
  5032     008A  3141               	addfsr 1,1
  5033     008B  1803               	skipnc
  5034     008C  0A81               	incf	1,f
  5035     008D                     l3010:
  5036                           
  5037                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1204:         flags 
      +                          = width = 0;
  5038     008D  0021               	movlb	1	; select bank1
  5039     008E  01E5               	clrf	_width^(0+128)
  5040     008F  01E6               	clrf	(_width+1)^(0+128)
  5041     0090  1003               	clrc
  5042     0091  3000               	movlw	0
  5043     0092  1803               	btfsc	3,0
  5044     0093  3001               	movlw	1
  5045     0094  0020               	movlb	0	; select bank0
  5046     0095  00E5               	movwf	_flags
  5047     0096                     l3012:
  5048                           
  5049                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1205:         prec =
      +                           -1;
  5050     0096  30FF               	movlw	255
  5051     0097  0021               	movlb	1	; select bank1
  5052     0098  00E7               	movwf	_prec^(0+128)
  5053     0099  30FF               	movlw	255
  5054     009A  00E8               	movwf	(_prec^(0+128)+1)
  5055     009B                     l3014:
  5056                           
  5057                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1209:         done =
      +                           0;
  5058     009B  0020               	movlb	0	; select bank0
  5059     009C  01CC               	clrf	vfpfcnvrt@done
  5060                           
  5061                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1210:         while 
      +                          (!done) {
  5062     009D  28BB               	goto	l3022
  5063     009E                     l934:	
  5064                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1219:               
      +                            case '0' :
  5065                           
  5066                           
  5067                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1220:               
      +                                flags |= (1 << 1);
  5068     009E  14E5               	bsf	_flags,1
  5069     009F                     l3016:
  5070                           
  5071                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1221:               
      +                                ++*fmt;
  5072     009F  0846               	movf	vfpfcnvrt@fmt,w
  5073     00A0  0086               	movwf	6
  5074     00A1  0187               	clrf	7
  5075     00A2  3001               	movlw	1
  5076     00A3  0781               	addwf	1,f
  5077     00A4  3141               	addfsr 1,1
  5078     00A5  1803               	skipnc
  5079     00A6  0A81               	incf	1,f
  5080                           
  5081                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1222:               
      +                                break;
  5082     00A7  28BB               	goto	l3022
  5083     00A8                     l936:	
  5084                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1242:               
      +                            default:
  5085                           
  5086                           
  5087                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1243:               
      +                                done = 1;
  5088     00A8  01CC               	clrf	vfpfcnvrt@done
  5089     00A9  0ACC               	incf	vfpfcnvrt@done,f
  5090                           
  5091                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1244:               
      +                                break;
  5092     00AA  28BB               	goto	l3022
  5093     00AB                     l3020:
  5094     00AB  0846               	movf	vfpfcnvrt@fmt,w
  5095     00AC  0086               	movwf	6
  5096     00AD  0187               	clrf	7
  5097     00AE  3F40               	moviw [0]fsr1
  5098     00AF  00C8               	movwf	??_vfpfcnvrt
  5099     00B0  3F41               	moviw [1]fsr1
  5100     00B1  00C9               	movwf	??_vfpfcnvrt+1
  5101     00B2  0848               	movf	??_vfpfcnvrt,w
  5102     00B3  0084               	movwf	4
  5103     00B4  0849               	movf	??_vfpfcnvrt+1,w
  5104     00B5  0085               	movwf	5
  5105     00B6  0800               	movf	0,w	;code access
  5106                           
  5107                           ; Switch size 1, requested type "simple"
  5108                           ; Number of cases is 1, Range of values is 48 to 48
  5109                           ; switch strategies available:
  5110                           ; Name         Instructions Cycles
  5111                           ; simple_byte            4     3 (average)
  5112                           ; direct_byte           11     9 (fixed)
  5113                           ; jumptable            263     9 (fixed)
  5114                           ;	Chosen strategy is simple_byte
  5115     00B7  3A30               	xorlw	48	; case 48
  5116     00B8  1903               	skipnz
  5117     00B9  289E               	goto	l934
  5118     00BA  28A8               	goto	l936
  5119     00BB                     l3022:
  5120                           
  5121                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1210:         while 
      +                          (!done) {
  5122     00BB  084C               	movf	vfpfcnvrt@done,w
  5123     00BC  1903               	btfsc	3,2
  5124     00BD  28BF               	goto	u2901
  5125     00BE  28C0               	goto	u2900
  5126     00BF                     u2901:
  5127     00BF  28AB               	goto	l3020
  5128     00C0                     u2900:
  5129     00C0                     l3024:
  5130                           
  5131                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1256:   width = read
      +                          _prec_or_width(fmt, ap);
  5132     00C0  0847               	movf	vfpfcnvrt@ap,w
  5133     00C1  00AA               	movwf	read_prec_or_width@ap
  5134     00C2  0846               	movf	vfpfcnvrt@fmt,w
  5135     00C3  3185  25A8  3180   	fcall	_read_prec_or_width
  5136     00C6  0020               	movlb	0	; select bank0
  5137     00C7  082B               	movf	?_read_prec_or_width+1,w
  5138     00C8  0021               	movlb	1	; select bank1
  5139     00C9  00E6               	movwf	(_width+1)^(0+128)
  5140     00CA  0020               	movlb	0	; select bank0
  5141     00CB  082A               	movf	?_read_prec_or_width,w
  5142     00CC  0021               	movlb	1	; select bank1
  5143     00CD  00E5               	movwf	_width^(0+128)
  5144     00CE                     l3026:
  5145                           
  5146                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1257:   if (width < 
      +                          0) {
  5147     00CE  1FE6               	btfss	(_width+1)^(0+128),7
  5148     00CF  28D1               	goto	u2911
  5149     00D0  28D2               	goto	u2910
  5150     00D1                     u2911:
  5151     00D1  28DA               	goto	l3032
  5152     00D2                     u2910:
  5153     00D2                     l3028:
  5154                           
  5155                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1258:    flags |= (1
      +                           << 0);
  5156     00D2  0020               	movlb	0	; select bank0
  5157     00D3  1465               	bsf	_flags,0
  5158     00D4                     l3030:
  5159                           
  5160                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1259:    width = -wi
      +                          dth;
  5161     00D4  0021               	movlb	1	; select bank1
  5162     00D5  09E5               	comf	_width^(0+128),f
  5163     00D6  09E6               	comf	(_width+1)^(0+128),f
  5164     00D7  0AE5               	incf	_width^(0+128),f
  5165     00D8  1903               	skipnz
  5166     00D9  0AE6               	incf	(_width+1)^(0+128),f
  5167     00DA                     l3032:
  5168                           
  5169                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1291:   cp = *fmt;
  5170     00DA  0020               	movlb	0	; select bank0
  5171     00DB  0846               	movf	vfpfcnvrt@fmt,w
  5172     00DC  0086               	movwf	6
  5173     00DD  0187               	clrf	7
  5174     00DE  3F40               	moviw [0]fsr1
  5175     00DF  00D2               	movwf	vfpfcnvrt@cp
  5176     00E0  3F41               	moviw [1]fsr1
  5177     00E1  00D3               	movwf	vfpfcnvrt@cp+1
  5178     00E2                     l3034:
  5179                           
  5180                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1361:   if (*cp == '
      +                          d' || *cp == 'i') {
  5181     00E2  0852               	movf	vfpfcnvrt@cp,w
  5182     00E3  0084               	movwf	4
  5183     00E4  0853               	movf	vfpfcnvrt@cp+1,w
  5184     00E5  0085               	movwf	5
  5185     00E6  0012               	moviw fsr0++
  5186     00E7  3A64               	xorlw	100
  5187     00E8  1903               	btfsc	3,2
  5188     00E9  28EB               	goto	u2921
  5189     00EA  28EC               	goto	u2920
  5190     00EB                     u2921:
  5191     00EB  28F6               	goto	l3038
  5192     00EC                     u2920:
  5193     00EC                     l3036:
  5194     00EC  0852               	movf	vfpfcnvrt@cp,w
  5195     00ED  0084               	movwf	4
  5196     00EE  0853               	movf	vfpfcnvrt@cp+1,w
  5197     00EF  0085               	movwf	5
  5198     00F0  0012               	moviw fsr0++
  5199     00F1  3A69               	xorlw	105
  5200     00F2  1D03               	btfss	3,2
  5201     00F3  28F5               	goto	u2931
  5202     00F4  28F6               	goto	u2930
  5203     00F5                     u2931:
  5204     00F5  2918               	goto	l3046
  5205     00F6                     u2930:
  5206     00F6                     l3038:
  5207                           
  5208                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1404:    convarg.sin
      +                          t = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  5209     00F6  0847               	movf	vfpfcnvrt@ap,w
  5210     00F7  0086               	movwf	6
  5211     00F8  0187               	clrf	7
  5212     00F9  0801               	movf	1,w
  5213     00FA  0084               	movwf	4
  5214     00FB  0185               	clrf	5
  5215     00FC  3002               	movlw	2
  5216     00FD  0781               	addwf	1,f
  5217     00FE  3F00               	moviw [0]fsr0
  5218     00FF  00CD               	movwf	vfpfcnvrt@convarg
  5219     0100  3F01               	moviw [1]fsr0
  5220     0101  00CE               	movwf	vfpfcnvrt@convarg+1
  5221     0102                     l3040:
  5222                           
  5223                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1406:    *fmt = cp+1
      +                          ;
  5224     0102  0852               	movf	vfpfcnvrt@cp,w
  5225     0103  3E01               	addlw	1
  5226     0104  00C8               	movwf	??_vfpfcnvrt
  5227     0105  3000               	movlw	0
  5228     0106  3D53               	addwfc	vfpfcnvrt@cp+1,w
  5229     0107  00C9               	movwf	??_vfpfcnvrt+1
  5230     0108  0846               	movf	vfpfcnvrt@fmt,w
  5231     0109  0086               	movwf	6
  5232     010A  0187               	clrf	7
  5233     010B  0848               	movf	??_vfpfcnvrt,w
  5234     010C  3FC0               	movwi [0]fsr1
  5235     010D  0849               	movf	??_vfpfcnvrt+1,w
  5236     010E  3FC1               	movwi [1]fsr1
  5237     010F                     l3042:
  5238                           
  5239                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1432:    return (voi
      +                          d) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  5240     010F  084E               	movf	vfpfcnvrt@convarg+1,w
  5241     0110  00BB               	movwf	dtoa@d+1
  5242     0111  084D               	movf	vfpfcnvrt@convarg,w
  5243     0112  00BA               	movwf	dtoa@d
  5244     0113  0851               	movf	vfpfcnvrt@fp,w
  5245     0114  3181  2171  3180   	fcall	_dtoa
  5246     0117  2970               	goto	l942
  5247     0118                     l3046:
  5248     0118  0852               	movf	vfpfcnvrt@cp,w
  5249     0119  0084               	movwf	4
  5250     011A  0853               	movf	vfpfcnvrt@cp+1,w
  5251     011B  0085               	movwf	5
  5252     011C  0012               	moviw fsr0++
  5253     011D  3A78               	xorlw	120
  5254     011E  1D03               	btfss	3,2
  5255     011F  2921               	goto	u2941
  5256     0120  2922               	goto	u2940
  5257     0121                     u2941:
  5258     0121  294E               	goto	l3060
  5259     0122                     u2940:
  5260     0122                     l3048:
  5261                           
  5262                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1452:     ) {;/Appli
      +                          cations/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1495:    convarg.uint = (vf
      +                          pf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
      +                          ));
  5263     0122  0847               	movf	vfpfcnvrt@ap,w
  5264     0123  0086               	movwf	6
  5265     0124  0187               	clrf	7
  5266     0125  0801               	movf	1,w
  5267     0126  0084               	movwf	4
  5268     0127  0185               	clrf	5
  5269     0128  3002               	movlw	2
  5270     0129  0781               	addwf	1,f
  5271     012A  3F00               	moviw [0]fsr0
  5272     012B  00CD               	movwf	vfpfcnvrt@convarg
  5273     012C  3F01               	moviw [1]fsr0
  5274     012D  00CE               	movwf	vfpfcnvrt@convarg+1
  5275     012E                     l3050:
  5276                           
  5277                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1497:    *fmt = cp+1
      +                          ;
  5278     012E  0852               	movf	vfpfcnvrt@cp,w
  5279     012F  3E01               	addlw	1
  5280     0130  00C8               	movwf	??_vfpfcnvrt
  5281     0131  3000               	movlw	0
  5282     0132  3D53               	addwfc	vfpfcnvrt@cp+1,w
  5283     0133  00C9               	movwf	??_vfpfcnvrt+1
  5284     0134  0846               	movf	vfpfcnvrt@fmt,w
  5285     0135  0086               	movwf	6
  5286     0136  0187               	clrf	7
  5287     0137  0848               	movf	??_vfpfcnvrt,w
  5288     0138  3FC0               	movwi [0]fsr1
  5289     0139  0849               	movf	??_vfpfcnvrt+1,w
  5290     013A  3FC1               	movwi [1]fsr1
  5291                           
  5292                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1498:    switch (*cp
      +                          ) {
  5293     013B  2945               	goto	l3058
  5294     013C                     l3052:
  5295                           
  5296                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1586:      return (v
      +                          oid) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
  5297     013C  084E               	movf	vfpfcnvrt@convarg+1,w
  5298     013D  00BB               	movwf	xtoa@d+1
  5299     013E  084D               	movf	vfpfcnvrt@convarg,w
  5300     013F  00BA               	movwf	xtoa@d
  5301     0140  0851               	movf	vfpfcnvrt@fp,w
  5302     0141  3183  23E6  3180   	fcall	_xtoa
  5303     0144  2970               	goto	l942
  5304     0145                     l3058:
  5305     0145  0852               	movf	vfpfcnvrt@cp,w
  5306     0146  0084               	movwf	4
  5307     0147  0853               	movf	vfpfcnvrt@cp+1,w
  5308     0148  0085               	movwf	5
  5309     0149  0800               	movf	0,w	;code access
  5310                           
  5311                           ; Switch size 1, requested type "simple"
  5312                           ; Number of cases is 1, Range of values is 120 to 120
  5313                           ; switch strategies available:
  5314                           ; Name         Instructions Cycles
  5315                           ; simple_byte            4     3 (average)
  5316                           ; direct_byte           11     9 (fixed)
  5317                           ; jumptable            263     9 (fixed)
  5318                           ;	Chosen strategy is simple_byte
  5319     014A  3A78               	xorlw	120	; case 120
  5320     014B  1903               	skipnz
  5321     014C  293C               	goto	l3052
  5322     014D  294E               	goto	l3060
  5323     014E                     l3060:
  5324                           
  5325                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt
      +                          ;
  5326     014E  0020               	movlb	0	; select bank0
  5327     014F  0846               	movf	vfpfcnvrt@fmt,w
  5328     0150  0086               	movwf	6
  5329     0151  0187               	clrf	7
  5330     0152  3001               	movlw	1
  5331     0153  0781               	addwf	1,f
  5332     0154  3141               	addfsr 1,1
  5333     0155  1803               	skipnc
  5334     0156  0A81               	incf	1,f
  5335     0157  2970               	goto	l942
  5336     0158                     l3064:
  5337                           
  5338                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1811:     fputc((int
      +                          )(*fmt)[0], fp);
  5339     0158  0846               	movf	vfpfcnvrt@fmt,w
  5340     0159  0086               	movwf	6
  5341     015A  0187               	clrf	7
  5342     015B  3F40               	moviw [0]fsr1
  5343     015C  00C8               	movwf	??_vfpfcnvrt
  5344     015D  3F41               	moviw [1]fsr1
  5345     015E  00C9               	movwf	??_vfpfcnvrt+1
  5346     015F  0848               	movf	??_vfpfcnvrt,w
  5347     0160  0084               	movwf	4
  5348     0161  0849               	movf	??_vfpfcnvrt+1,w
  5349     0162  0085               	movwf	5
  5350     0163  0800               	movf	0,w	;code access
  5351     0164  00CA               	movwf	??_vfpfcnvrt+2
  5352     0165  01CB               	clrf	??_vfpfcnvrt+3
  5353     0166  084A               	movf	??_vfpfcnvrt+2,w
  5354     0167  00A4               	movwf	fputc@c
  5355     0168  084B               	movf	??_vfpfcnvrt+3,w
  5356     0169  00A5               	movwf	fputc@c+1
  5357     016A  0851               	movf	vfpfcnvrt@fp,w
  5358     016B  00A6               	movwf	fputc@fp
  5359     016C  3187  2717  3180   	fcall	_fputc
  5360     016F  294E               	goto	l3060
  5361     0170                     l942:
  5362     0170  0008               	return
  5363     0171                     __end_of_vfpfcnvrt:
  5364                           
  5365                           	psect	text20
  5366     03E6                     __ptext20:	
  5367 ;; *************** function _xtoa *****************
  5368 ;; Defined at:
  5369 ;;		line 1055 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;  fp              1    wreg     PTR struct _IO_FILE
  5372 ;;		 -> sprintf@f(11), 
  5373 ;;  d               2   26[BANK0 ] unsigned int 
  5374 ;; Auto vars:     Size  Location     Type
  5375 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  5376 ;;		 -> sprintf@f(11), 
  5377 ;;  i               2   34[BANK0 ] int 
  5378 ;;  w               2   31[BANK0 ] int 
  5379 ;;  c               1   33[BANK0 ] unsigned char 
  5380 ;;  p               1   30[BANK0 ] _Bool 
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  1    wreg      void 
  5383 ;; Registers used:
  5384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5390 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5391 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5392 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5393 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5394 ;;Total ram usage:       10 bytes
  5395 ;; Hardware stack levels used: 1
  5396 ;; Hardware stack levels required when called: 7
  5397 ;; This function calls:
  5398 ;;		_pad
  5399 ;; This function is called by:
  5400 ;;		_vfpfcnvrt
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           
  5404     03E6                     _xtoa:	
  5405                           ;psect for function _xtoa
  5406                           
  5407                           
  5408                           ;incstack = 0
  5409                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5410                           ;xtoa@fp stored from wreg
  5411     03E6  0020               	movlb	0	; select bank0
  5412     03E7  00BD               	movwf	xtoa@fp
  5413     03E8                     l2940:
  5414                           
  5415                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1055: static void xt
      +                          oa(FILE *fp, vfpf_uint_t d);/Applications/microchip/xc8/v2.46/pic/sources/c99/common/dop
      +                          rnt.c: 1058: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1059: 
      +                           char c;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1063:     in
      +                          t i, w;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1067:  _Bool 
      +                          p = 1;
  5416     03E8  01BE               	clrf	xtoa@p
  5417     03E9  0ABE               	incf	xtoa@p,f
  5418     03EA                     l2942:
  5419                           
  5420                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1082:     w = width;
  5421     03EA  0021               	movlb	1	; select bank1
  5422     03EB  0866               	movf	(_width+1)^(0+128),w
  5423     03EC  0020               	movlb	0	; select bank0
  5424     03ED  00C0               	movwf	xtoa@w+1
  5425     03EE  0021               	movlb	1	; select bank1
  5426     03EF  0865               	movf	_width^(0+128),w
  5427     03F0  0020               	movlb	0	; select bank0
  5428     03F1  00BF               	movwf	xtoa@w
  5429                           
  5430                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1095:     i = sizeof
      +                          (dbuf) - 1;
  5431     03F2  301F               	movlw	31
  5432     03F3  00C2               	movwf	xtoa@i
  5433     03F4  3000               	movlw	0
  5434     03F5  00C3               	movwf	xtoa@i+1
  5435     03F6                     l2944:
  5436                           
  5437                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1096:     dbuf[i] = 
      +                          '\0';
  5438     03F6  0022               	movlb	2	; select bank2
  5439     03F7  01BF               	clrf	(_dbuf^(0+256)+31)
  5440                           
  5441                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1097:     while (!(i
      +                           < 2) && (d != 0
  5442     03F8  2C24               	goto	l2964
  5443     03F9                     l2946:
  5444                           
  5445                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1106:     )) {;/Appl
      +                          ications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1107:         --i;
  5446     03F9  30FF               	movlw	255
  5447     03FA  07C2               	addwf	xtoa@i,f
  5448     03FB  30FF               	movlw	255
  5449     03FC  3DC3               	addwfc	xtoa@i+1,f
  5450     03FD                     l2948:
  5451                           
  5452                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1108:         c = d 
      +                          & 0x0f;
  5453     03FD  083A               	movf	xtoa@d,w
  5454     03FE  390F               	andlw	15
  5455     03FF  00C1               	movwf	xtoa@c
  5456     0400                     l2950:
  5457                           
  5458                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1109:   if (c < 10) 
      +                          {
  5459     0400  300A               	movlw	10
  5460     0401  0241               	subwf	xtoa@c,w
  5461     0402  1803               	skipnc
  5462     0403  2C05               	goto	u2801
  5463     0404  2C06               	goto	u2800
  5464     0405                     u2801:
  5465     0405  2C0B               	goto	l2954
  5466     0406                     u2800:
  5467     0406                     l2952:
  5468                           
  5469                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1110:    c += '0';
  5470     0406  3030               	movlw	48
  5471     0407  00BC               	movwf	??_xtoa
  5472     0408  083C               	movf	??_xtoa,w
  5473     0409  07C1               	addwf	xtoa@c,f
  5474                           
  5475                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1111:   }
  5476     040A  2C0F               	goto	l2956
  5477     040B                     l2954:
  5478                           
  5479                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1116:    c += 'a' - 
      +                          10;
  5480     040B  3057               	movlw	87
  5481     040C  00BC               	movwf	??_xtoa
  5482     040D  083C               	movf	??_xtoa,w
  5483     040E  07C1               	addwf	xtoa@c,f
  5484     040F                     l2956:
  5485                           
  5486                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1121:   dbuf[i] = c;
  5487     040F  0842               	movf	xtoa@i,w
  5488     0410  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5489     0411  0086               	movwf	6
  5490     0412  3001               	movlw	1	; select bank2/3
  5491     0413  0087               	movwf	7
  5492     0414  0841               	movf	xtoa@c,w
  5493     0415  0081               	movwf	1
  5494     0416                     l2958:
  5495                           
  5496                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1125:   p = 0;
  5497     0416  01BE               	clrf	xtoa@p
  5498     0417                     l2960:
  5499                           
  5500                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1127:         --w;
  5501     0417  30FF               	movlw	255
  5502     0418  07BF               	addwf	xtoa@w,f
  5503     0419  30FF               	movlw	255
  5504     041A  3DC0               	addwfc	xtoa@w+1,f
  5505     041B                     l2962:
  5506                           
  5507                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1128:         d = d 
      +                          >> 4;
  5508     041B  0E3A               	swapf	xtoa@d,w
  5509     041C  390F               	andlw	15
  5510     041D  00BA               	movwf	xtoa@d
  5511     041E  0E3B               	swapf	xtoa@d+1,w
  5512     041F  39F0               	andlw	240
  5513     0420  04BA               	iorwf	xtoa@d,f
  5514     0421  0E3B               	swapf	xtoa@d+1,w
  5515     0422  390F               	andlw	15
  5516     0423  00BB               	movwf	xtoa@d+1
  5517     0424                     l2964:
  5518                           
  5519                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1097:     while (!(i
      +                           < 2) && (d != 0
  5520     0424  0020               	movlb	0	; select bank0
  5521     0425  0843               	movf	xtoa@i+1,w
  5522     0426  3A80               	xorlw	128
  5523     0427  00BC               	movwf	??_xtoa
  5524     0428  3080               	movlw	128
  5525     0429  023C               	subwf	??_xtoa,w
  5526     042A  1D03               	skipz
  5527     042B  2C2E               	goto	u2815
  5528     042C  3002               	movlw	2
  5529     042D  0242               	subwf	xtoa@i,w
  5530     042E                     u2815:
  5531     042E  1C03               	skipc
  5532     042F  2C31               	goto	u2811
  5533     0430  2C32               	goto	u2810
  5534     0431                     u2811:
  5535     0431  2C50               	goto	l2974
  5536     0432                     u2810:
  5537     0432                     l2966:
  5538     0432  0020               	movlb	0	; select bank0
  5539     0433  083A               	movf	xtoa@d,w
  5540     0434  043B               	iorwf	xtoa@d+1,w
  5541     0435  1D03               	btfss	3,2
  5542     0436  2C38               	goto	u2821
  5543     0437  2C39               	goto	u2820
  5544     0438                     u2821:
  5545     0438  2BF9               	goto	l2946
  5546     0439                     u2820:
  5547     0439                     l2968:
  5548     0439  083E               	movf	xtoa@p,w
  5549     043A  1D03               	btfss	3,2
  5550     043B  2C3D               	goto	u2831
  5551     043C  2C3E               	goto	u2830
  5552     043D                     u2831:
  5553     043D  2BF9               	goto	l2946
  5554     043E                     u2830:
  5555     043E                     l2970:
  5556     043E  0840               	movf	xtoa@w+1,w
  5557     043F  3A80               	xorlw	128
  5558     0440  00BC               	movwf	??_xtoa
  5559     0441  3080               	movlw	128
  5560     0442  023C               	subwf	??_xtoa,w
  5561     0443  1D03               	skipz
  5562     0444  2C47               	goto	u2845
  5563     0445  3001               	movlw	1
  5564     0446  023F               	subwf	xtoa@w,w
  5565     0447                     u2845:
  5566     0447  1C03               	skipc
  5567     0448  2C4A               	goto	u2841
  5568     0449  2C4B               	goto	u2840
  5569     044A                     u2841:
  5570     044A  2C50               	goto	l2974
  5571     044B                     u2840:
  5572     044B                     l2972:
  5573     044B  0020               	movlb	0	; select bank0
  5574     044C  18E5               	btfsc	_flags,1
  5575     044D  2C4F               	goto	u2851
  5576     044E  2C50               	goto	u2850
  5577     044F                     u2851:
  5578     044F  2BF9               	goto	l2946
  5579     0450                     u2850:
  5580     0450                     l2974:
  5581                           
  5582                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1152:     return (vo
      +                          id) pad(fp, &dbuf[i], w);
  5583     0450  0020               	movlb	0	; select bank0
  5584     0451  0842               	movf	xtoa@i,w
  5585     0452  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5586     0453  00B3               	movwf	pad@buf
  5587     0454  0840               	movf	xtoa@w+1,w
  5588     0455  00B5               	movwf	pad@p+1
  5589     0456  083F               	movf	xtoa@w,w
  5590     0457  00B4               	movwf	pad@p
  5591     0458  083D               	movf	xtoa@fp,w
  5592     0459  318F  27C1  3183   	fcall	_pad
  5593     045C                     l919:
  5594     045C  0008               	return
  5595     045D                     __end_of_xtoa:
  5596                           
  5597                           	psect	text21
  5598     05A8                     __ptext21:	
  5599 ;; *************** function _read_prec_or_width *****************
  5600 ;; Defined at:
  5601 ;;		line 1158 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;  fmt             1    wreg     PTR PTR const unsigned c
  5604 ;;		 -> vfprintf@cfmt(2), 
  5605 ;;  ap              1   10[BANK0 ] PTR PTR void [1]
  5606 ;;		 -> sprintf@ap(1), 
  5607 ;; Auto vars:     Size  Location     Type
  5608 ;;  fmt             1   18[BANK0 ] PTR PTR const unsigned c
  5609 ;;		 -> vfprintf@cfmt(2), 
  5610 ;;  c               1   15[BANK0 ] unsigned char 
  5611 ;;  n               2   16[BANK0 ] int 
  5612 ;; Return value:  Size  Location     Type
  5613 ;;                  2   10[BANK0 ] int 
  5614 ;; Registers used:
  5615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5616 ;; Tracked objects:
  5617 ;;		On entry : 0/0
  5618 ;;		On exit  : 0/0
  5619 ;;		Unchanged: 0/0
  5620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5621 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5622 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5623 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5624 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5625 ;;Total ram usage:        9 bytes
  5626 ;; Hardware stack levels used: 1
  5627 ;; Hardware stack levels required when called: 4
  5628 ;; This function calls:
  5629 ;;		___wmul
  5630 ;; This function is called by:
  5631 ;;		_vfpfcnvrt
  5632 ;; This function uses a non-reentrant model
  5633 ;;
  5634                           
  5635     05A8                     _read_prec_or_width:	
  5636                           ;psect for function _read_prec_or_width
  5637                           
  5638                           
  5639                           ;incstack = 0
  5640                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5641                           ;read_prec_or_width@fmt stored from wreg
  5642     05A8  0020               	movlb	0	; select bank0
  5643     05A9  00B2               	movwf	read_prec_or_width@fmt
  5644     05AA                     l2978:
  5645                           
  5646                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1159:     int n = 0;
  5647     05AA  01B0               	clrf	read_prec_or_width@n
  5648     05AB  01B1               	clrf	read_prec_or_width@n+1
  5649     05AC                     l2980:
  5650                           
  5651                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1160:     if ((*fmt)
      +                          [0] == '*') {
  5652     05AC  0832               	movf	read_prec_or_width@fmt,w
  5653     05AD  0086               	movwf	6
  5654     05AE  0187               	clrf	7
  5655     05AF  3F40               	moviw [0]fsr1
  5656     05B0  00AC               	movwf	??_read_prec_or_width
  5657     05B1  3F41               	moviw [1]fsr1
  5658     05B2  00AD               	movwf	??_read_prec_or_width+1
  5659     05B3  082C               	movf	??_read_prec_or_width,w
  5660     05B4  0084               	movwf	4
  5661     05B5  082D               	movf	??_read_prec_or_width+1,w
  5662     05B6  0085               	movwf	5
  5663     05B7  0012               	moviw fsr0++
  5664     05B8  3A2A               	xorlw	42
  5665     05B9  1D03               	btfss	3,2
  5666     05BA  2DBC               	goto	u2861
  5667     05BB  2DBD               	goto	u2860
  5668     05BC                     u2861:
  5669     05BC  2DEF               	goto	l2990
  5670     05BD                     u2860:
  5671     05BD                     l2982:
  5672                           
  5673                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1161:         ++*fmt
      +                          ;
  5674     05BD  0832               	movf	read_prec_or_width@fmt,w
  5675     05BE  0086               	movwf	6
  5676     05BF  0187               	clrf	7
  5677     05C0  3001               	movlw	1
  5678     05C1  0781               	addwf	1,f
  5679     05C2  3141               	addfsr 1,1
  5680     05C3  1803               	skipnc
  5681     05C4  0A81               	incf	1,f
  5682     05C5                     l2984:
  5683                           
  5684                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1162:         n = (*
      +                          (int *)__va_arg(*(int **)*ap, (int)0));
  5685     05C5  082A               	movf	read_prec_or_width@ap,w
  5686     05C6  0086               	movwf	6
  5687     05C7  0187               	clrf	7
  5688     05C8  0801               	movf	1,w
  5689     05C9  0084               	movwf	4
  5690     05CA  0185               	clrf	5
  5691     05CB  3002               	movlw	2
  5692     05CC  0781               	addwf	1,f
  5693     05CD  3F00               	moviw [0]fsr0
  5694     05CE  00B0               	movwf	read_prec_or_width@n
  5695     05CF  3F01               	moviw [1]fsr0
  5696     05D0  00B1               	movwf	read_prec_or_width@n+1
  5697                           
  5698                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1163:     } else {
  5699     05D1  2E03               	goto	l2992
  5700     05D2                     l2986:
  5701                           
  5702                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1166:             n 
      +                          = n * 10 + c;
  5703     05D2  082F               	movf	read_prec_or_width@c,w
  5704     05D3  00AC               	movwf	??_read_prec_or_width
  5705     05D4  01AD               	clrf	??_read_prec_or_width+1
  5706     05D5  0831               	movf	read_prec_or_width@n+1,w
  5707     05D6  00A5               	movwf	___wmul@multiplier+1
  5708     05D7  0830               	movf	read_prec_or_width@n,w
  5709     05D8  00A4               	movwf	___wmul@multiplier
  5710     05D9  300A               	movlw	10
  5711     05DA  00A6               	movwf	___wmul@multiplicand
  5712     05DB  3000               	movlw	0
  5713     05DC  00A7               	movwf	___wmul@multiplicand+1
  5714     05DD  318E  267A  3185   	fcall	___wmul
  5715     05E0  0020               	movlb	0	; select bank0
  5716     05E1  082C               	movf	??_read_prec_or_width,w
  5717     05E2  0724               	addwf	?___wmul,w
  5718     05E3  00B0               	movwf	read_prec_or_width@n
  5719     05E4  082D               	movf	??_read_prec_or_width+1,w
  5720     05E5  3D25               	addwfc	?___wmul+1,w
  5721     05E6  00B1               	movwf	read_prec_or_width@n+1
  5722     05E7                     l2988:
  5723                           
  5724                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1167:             ++
      +                          *fmt;
  5725     05E7  0832               	movf	read_prec_or_width@fmt,w
  5726     05E8  0086               	movwf	6
  5727     05E9  0187               	clrf	7
  5728     05EA  3001               	movlw	1
  5729     05EB  0781               	addwf	1,f
  5730     05EC  3141               	addfsr 1,1
  5731     05ED  1803               	skipnc
  5732     05EE  0A81               	incf	1,f
  5733     05EF                     l2990:
  5734                           
  5735                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1165:         while 
      +                          ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  5736     05EF  0832               	movf	read_prec_or_width@fmt,w
  5737     05F0  0086               	movwf	6
  5738     05F1  0187               	clrf	7
  5739     05F2  3F40               	moviw [0]fsr1
  5740     05F3  00AC               	movwf	??_read_prec_or_width
  5741     05F4  3F41               	moviw [1]fsr1
  5742     05F5  00AD               	movwf	??_read_prec_or_width+1
  5743     05F6  082C               	movf	??_read_prec_or_width,w
  5744     05F7  0084               	movwf	4
  5745     05F8  082D               	movf	??_read_prec_or_width+1,w
  5746     05F9  0085               	movwf	5
  5747     05FA  0800               	movf	0,w	;code access
  5748     05FB  3ED0               	addlw	208
  5749     05FC  00AF               	movwf	read_prec_or_width@c
  5750     05FD  300A               	movlw	10
  5751     05FE  022F               	subwf	read_prec_or_width@c,w
  5752     05FF  1C03               	skipc
  5753     0600  2E02               	goto	u2871
  5754     0601  2E03               	goto	u2870
  5755     0602                     u2871:
  5756     0602  2DD2               	goto	l2986
  5757     0603                     u2870:
  5758     0603                     l2992:
  5759                           
  5760                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1170:     return n;
  5761     0603  0831               	movf	read_prec_or_width@n+1,w
  5762     0604  00AB               	movwf	?_read_prec_or_width+1
  5763     0605  0830               	movf	read_prec_or_width@n,w
  5764     0606  00AA               	movwf	?_read_prec_or_width
  5765     0607                     l927:
  5766     0607  0008               	return
  5767     0608                     __end_of_read_prec_or_width:
  5768                           
  5769                           	psect	text22
  5770     0E7A                     __ptext22:	
  5771 ;; *************** function ___wmul *****************
  5772 ;; Defined at:
  5773 ;;		line 15 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/Umul16.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;  multiplier      2    4[BANK0 ] unsigned int 
  5776 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;  product         2    8[BANK0 ] unsigned int 
  5779 ;; Return value:  Size  Location     Type
  5780 ;;                  2    4[BANK0 ] unsigned int 
  5781 ;; Registers used:
  5782 ;;		wreg, status,2, status,0
  5783 ;; Tracked objects:
  5784 ;;		On entry : 0/0
  5785 ;;		On exit  : 0/0
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5788 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5789 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5791 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5792 ;;Total ram usage:        6 bytes
  5793 ;; Hardware stack levels used: 1
  5794 ;; Hardware stack levels required when called: 3
  5795 ;; This function calls:
  5796 ;;		Nothing
  5797 ;; This function is called by:
  5798 ;;		_read_prec_or_width
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802     0E7A                     ___wmul:	
  5803                           ;psect for function ___wmul
  5804                           
  5805     0E7A                     l2774:	
  5806                           ;incstack = 0
  5807                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5808                           
  5809     0E7A  0020               	movlb	0	; select bank0
  5810     0E7B  01A8               	clrf	___wmul@product
  5811     0E7C  01A9               	clrf	___wmul@product+1
  5812     0E7D                     l2776:
  5813     0E7D  1C24               	btfss	___wmul@multiplier,0
  5814     0E7E  2E80               	goto	u2421
  5815     0E7F  2E81               	goto	u2420
  5816     0E80                     u2421:
  5817     0E80  2E85               	goto	l397
  5818     0E81                     u2420:
  5819     0E81                     l2778:
  5820     0E81  0826               	movf	___wmul@multiplicand,w
  5821     0E82  07A8               	addwf	___wmul@product,f
  5822     0E83  0827               	movf	___wmul@multiplicand+1,w
  5823     0E84  3DA9               	addwfc	___wmul@product+1,f
  5824     0E85                     l397:
  5825     0E85  3001               	movlw	1
  5826     0E86                     u2435:
  5827     0E86  35A6               	lslf	___wmul@multiplicand,f
  5828     0E87  0DA7               	rlf	___wmul@multiplicand+1,f
  5829     0E88  0B89               	decfsz	9,f
  5830     0E89  2E86               	goto	u2435
  5831     0E8A                     l2780:
  5832     0E8A  3001               	movlw	1
  5833     0E8B                     u2445:
  5834     0E8B  36A5               	lsrf	___wmul@multiplier+1,f
  5835     0E8C  0CA4               	rrf	___wmul@multiplier,f
  5836     0E8D  0B89               	decfsz	9,f
  5837     0E8E  2E8B               	goto	u2445
  5838     0E8F                     l2782:
  5839     0E8F  0824               	movf	___wmul@multiplier,w
  5840     0E90  0425               	iorwf	___wmul@multiplier+1,w
  5841     0E91  1D03               	btfss	3,2
  5842     0E92  2E94               	goto	u2451
  5843     0E93  2E95               	goto	u2450
  5844     0E94                     u2451:
  5845     0E94  2E7D               	goto	l2776
  5846     0E95                     u2450:
  5847     0E95                     l2784:
  5848     0E95  0829               	movf	___wmul@product+1,w
  5849     0E96  00A5               	movwf	?___wmul+1
  5850     0E97  0828               	movf	___wmul@product,w
  5851     0E98  00A4               	movwf	?___wmul
  5852     0E99                     l399:
  5853     0E99  0008               	return
  5854     0E9A                     __end_of___wmul:
  5855                           
  5856                           	psect	text23
  5857     0171                     __ptext23:	
  5858 ;; *************** function _dtoa *****************
  5859 ;; Defined at:
  5860 ;;		line 513 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;  fp              1    wreg     PTR struct _IO_FILE
  5863 ;;		 -> sprintf@f(11), 
  5864 ;;  d               2   26[BANK0 ] int 
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  5867 ;;		 -> sprintf@f(11), 
  5868 ;;  i               2   36[BANK0 ] int 
  5869 ;;  w               2   33[BANK0 ] int 
  5870 ;;  s               1   35[BANK0 ] unsigned char 
  5871 ;;  p               1   32[BANK0 ] _Bool 
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  1    wreg      void 
  5874 ;; Registers used:
  5875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5881 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5882 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5883 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5884 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5885 ;;Total ram usage:       12 bytes
  5886 ;; Hardware stack levels used: 1
  5887 ;; Hardware stack levels required when called: 7
  5888 ;; This function calls:
  5889 ;;		___awdiv
  5890 ;;		___awmod
  5891 ;;		_abs
  5892 ;;		_pad
  5893 ;; This function is called by:
  5894 ;;		_vfpfcnvrt
  5895 ;; This function uses a non-reentrant model
  5896 ;;
  5897                           
  5898     0171                     _dtoa:	
  5899                           ;psect for function _dtoa
  5900                           
  5901                           
  5902                           ;incstack = 0
  5903                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5904                           ;dtoa@fp stored from wreg
  5905     0171  0020               	movlb	0	; select bank0
  5906     0172  00BD               	movwf	dtoa@fp
  5907     0173                     l2894:
  5908                           
  5909                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 513: static void dto
      +                          a(FILE *fp, vfpf_sint_t d);/Applications/microchip/xc8/v2.46/pic/sources/c99/common/dopr
      +                          nt.c: 514: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 515:  ch
      +                          ar s;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 516:     int i,
      +                           w;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 520:  _Bool p = 1
      +                          ;
  5910     0173  01C0               	clrf	dtoa@p
  5911     0174  0AC0               	incf	dtoa@p,f
  5912     0175                     l2896:
  5913                           
  5914                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 524:     s = d < 0 ?
      +                           1 : 0;
  5915     0175  1BBB               	btfsc	dtoa@d+1,7
  5916     0176  2978               	goto	u2701
  5917     0177  297A               	goto	u2700
  5918     0178                     u2701:
  5919     0178  3001               	movlw	1
  5920     0179  297B               	goto	u2710
  5921     017A                     u2700:
  5922     017A  3000               	movlw	0
  5923     017B                     u2710:
  5924     017B  00C3               	movwf	dtoa@s
  5925                           
  5926                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 535:     w = width;
  5927     017C  0021               	movlb	1	; select bank1
  5928     017D  0866               	movf	(_width+1)^(0+128),w
  5929     017E  0020               	movlb	0	; select bank0
  5930     017F  00C2               	movwf	dtoa@w+1
  5931     0180  0021               	movlb	1	; select bank1
  5932     0181  0865               	movf	_width^(0+128),w
  5933     0182  0020               	movlb	0	; select bank0
  5934     0183  00C1               	movwf	dtoa@w
  5935     0184                     l2898:
  5936                           
  5937                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 536:     if (s
  5938     0184  0843               	movf	dtoa@s,w
  5939     0185  1903               	btfsc	3,2
  5940     0186  2988               	goto	u2721
  5941     0187  2989               	goto	u2720
  5942     0188                     u2721:
  5943     0188  299D               	goto	l894
  5944     0189                     u2720:
  5945     0189                     l2900:
  5946                           
  5947                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 540:     ) {;/Applic
      +                          ations/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 541:         --w;
  5948     0189  30FF               	movlw	255
  5949     018A  07C1               	addwf	dtoa@w,f
  5950     018B  30FF               	movlw	255
  5951     018C  3DC2               	addwfc	dtoa@w+1,f
  5952     018D                     l2902:
  5953                           
  5954                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 542:   s = s ? '-' :
      +                           '+';
  5955     018D  0843               	movf	dtoa@s,w
  5956     018E  1D03               	btfss	3,2
  5957     018F  2991               	goto	u2731
  5958     0190  2992               	goto	u2730
  5959     0191                     u2731:
  5960     0191  2997               	goto	l2906
  5961     0192                     u2730:
  5962     0192                     l2904:
  5963     0192  302B               	movlw	43
  5964     0193  00BE               	movwf	_dtoa$1232
  5965     0194  3000               	movlw	0
  5966     0195  00BF               	movwf	_dtoa$1232+1
  5967     0196  299B               	goto	l898
  5968     0197                     l2906:
  5969     0197  302D               	movlw	45
  5970     0198  00BE               	movwf	_dtoa$1232
  5971     0199  3000               	movlw	0
  5972     019A  00BF               	movwf	_dtoa$1232+1
  5973     019B                     l898:
  5974     019B  083E               	movf	_dtoa$1232,w
  5975     019C  00C3               	movwf	dtoa@s
  5976     019D                     l894:	
  5977                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 543:     }
  5978                           
  5979                           
  5980                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 552:     i = sizeof(
      +                          dbuf) - 1;
  5981     019D  301F               	movlw	31
  5982     019E  00C4               	movwf	dtoa@i
  5983     019F  3000               	movlw	0
  5984     01A0  00C5               	movwf	dtoa@i+1
  5985     01A1                     l2908:
  5986                           
  5987                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 553:     dbuf[i] = '
      +                          \0';
  5988     01A1  0022               	movlb	2	; select bank2
  5989     01A2  01BF               	clrf	(_dbuf^(0+256)+31)
  5990                           
  5991                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 554:     while (!(i 
      +                          < 1) && (d != 0
  5992     01A3  29D9               	goto	l2920
  5993     01A4                     l2910:
  5994                           
  5995                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 563:     )) {;/Appli
      +                          cations/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 564:         --i;
  5996     01A4  30FF               	movlw	255
  5997     01A5  07C4               	addwf	dtoa@i,f
  5998     01A6  30FF               	movlw	255
  5999     01A7  3DC5               	addwfc	dtoa@i+1,f
  6000     01A8                     l2912:
  6001                           
  6002                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 565:         dbuf[i]
      +                           = (char)((int)'0' + abs(d % 10));
  6003     01A8  0844               	movf	dtoa@i,w
  6004     01A9  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6005     01AA  0086               	movwf	6
  6006     01AB  3001               	movlw	1	; select bank2/3
  6007     01AC  0087               	movwf	7
  6008     01AD  300A               	movlw	10
  6009     01AE  00A4               	movwf	___awmod@divisor
  6010     01AF  3000               	movlw	0
  6011     01B0  00A5               	movwf	___awmod@divisor+1
  6012     01B1  083B               	movf	dtoa@d+1,w
  6013     01B2  00A7               	movwf	___awmod@dividend+1
  6014     01B3  083A               	movf	dtoa@d,w
  6015     01B4  00A6               	movwf	___awmod@dividend
  6016     01B5  3186  26C3  3181   	fcall	___awmod
  6017     01B8  0020               	movlb	0	; select bank0
  6018     01B9  0825               	movf	?___awmod+1,w
  6019     01BA  00AC               	movwf	abs@a+1
  6020     01BB  0824               	movf	?___awmod,w
  6021     01BC  00AB               	movwf	abs@a
  6022     01BD  318D  256F  3181   	fcall	_abs
  6023     01C0  0020               	movlb	0	; select bank0
  6024     01C1  082B               	movf	?_abs,w
  6025     01C2  3E30               	addlw	48
  6026     01C3  0081               	movwf	1
  6027     01C4                     l2914:
  6028                           
  6029                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 569:   p = 0;
  6030     01C4  01C0               	clrf	dtoa@p
  6031     01C5                     l2916:
  6032                           
  6033                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 571:         --w;
  6034     01C5  30FF               	movlw	255
  6035     01C6  07C1               	addwf	dtoa@w,f
  6036     01C7  30FF               	movlw	255
  6037     01C8  3DC2               	addwfc	dtoa@w+1,f
  6038     01C9                     l2918:
  6039                           
  6040                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 572:         d = d /
      +                           10;
  6041     01C9  300A               	movlw	10
  6042     01CA  00A4               	movwf	___awdiv@divisor
  6043     01CB  3000               	movlw	0
  6044     01CC  00A5               	movwf	___awdiv@divisor+1
  6045     01CD  083B               	movf	dtoa@d+1,w
  6046     01CE  00A7               	movwf	___awdiv@dividend+1
  6047     01CF  083A               	movf	dtoa@d,w
  6048     01D0  00A6               	movwf	___awdiv@dividend
  6049     01D1  3186  2608  3181   	fcall	___awdiv
  6050     01D4  0020               	movlb	0	; select bank0
  6051     01D5  0825               	movf	?___awdiv+1,w
  6052     01D6  00BB               	movwf	dtoa@d+1
  6053     01D7  0824               	movf	?___awdiv,w
  6054     01D8  00BA               	movwf	dtoa@d
  6055     01D9                     l2920:
  6056                           
  6057                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 554:     while (!(i 
      +                          < 1) && (d != 0
  6058     01D9  0020               	movlb	0	; select bank0
  6059     01DA  0845               	movf	dtoa@i+1,w
  6060     01DB  3A80               	xorlw	128
  6061     01DC  00BC               	movwf	??_dtoa
  6062     01DD  3080               	movlw	128
  6063     01DE  023C               	subwf	??_dtoa,w
  6064     01DF  1D03               	skipz
  6065     01E0  29E3               	goto	u2745
  6066     01E1  3001               	movlw	1
  6067     01E2  0244               	subwf	dtoa@i,w
  6068     01E3                     u2745:
  6069     01E3  1C03               	skipc
  6070     01E4  29E6               	goto	u2741
  6071     01E5  29E7               	goto	u2740
  6072     01E6                     u2741:
  6073     01E6  2A05               	goto	l2930
  6074     01E7                     u2740:
  6075     01E7                     l2922:
  6076     01E7  0020               	movlb	0	; select bank0
  6077     01E8  083A               	movf	dtoa@d,w
  6078     01E9  043B               	iorwf	dtoa@d+1,w
  6079     01EA  1D03               	btfss	3,2
  6080     01EB  29ED               	goto	u2751
  6081     01EC  29EE               	goto	u2750
  6082     01ED                     u2751:
  6083     01ED  29A4               	goto	l2910
  6084     01EE                     u2750:
  6085     01EE                     l2924:
  6086     01EE  0840               	movf	dtoa@p,w
  6087     01EF  1D03               	btfss	3,2
  6088     01F0  29F2               	goto	u2761
  6089     01F1  29F3               	goto	u2760
  6090     01F2                     u2761:
  6091     01F2  29A4               	goto	l2910
  6092     01F3                     u2760:
  6093     01F3                     l2926:
  6094     01F3  0842               	movf	dtoa@w+1,w
  6095     01F4  3A80               	xorlw	128
  6096     01F5  00BC               	movwf	??_dtoa
  6097     01F6  3080               	movlw	128
  6098     01F7  023C               	subwf	??_dtoa,w
  6099     01F8  1D03               	skipz
  6100     01F9  29FC               	goto	u2775
  6101     01FA  3001               	movlw	1
  6102     01FB  0241               	subwf	dtoa@w,w
  6103     01FC                     u2775:
  6104     01FC  1C03               	skipc
  6105     01FD  29FF               	goto	u2771
  6106     01FE  2A00               	goto	u2770
  6107     01FF                     u2771:
  6108     01FF  2A05               	goto	l2930
  6109     0200                     u2770:
  6110     0200                     l2928:
  6111     0200  0020               	movlb	0	; select bank0
  6112     0201  18E5               	btfsc	_flags,1
  6113     0202  2A04               	goto	u2781
  6114     0203  2A05               	goto	u2780
  6115     0204                     u2781:
  6116     0204  29A4               	goto	l2910
  6117     0205                     u2780:
  6118     0205                     l2930:
  6119                           
  6120                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 576:     if (s != 0)
      +                           {
  6121     0205  0020               	movlb	0	; select bank0
  6122     0206  0843               	movf	dtoa@s,w
  6123     0207  1903               	btfsc	3,2
  6124     0208  2A0A               	goto	u2791
  6125     0209  2A0B               	goto	u2790
  6126     020A                     u2791:
  6127     020A  2A16               	goto	l2936
  6128     020B                     u2790:
  6129     020B                     l2932:
  6130                           
  6131                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 577:         --i;
  6132     020B  30FF               	movlw	255
  6133     020C  07C4               	addwf	dtoa@i,f
  6134     020D  30FF               	movlw	255
  6135     020E  3DC5               	addwfc	dtoa@i+1,f
  6136     020F                     l2934:
  6137                           
  6138                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 578:         dbuf[i]
      +                           = s;
  6139     020F  0844               	movf	dtoa@i,w
  6140     0210  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6141     0211  0086               	movwf	6
  6142     0212  3001               	movlw	1	; select bank2/3
  6143     0213  0087               	movwf	7
  6144     0214  0843               	movf	dtoa@s,w
  6145     0215  0081               	movwf	1
  6146     0216                     l2936:
  6147                           
  6148                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 582:     return (voi
      +                          d) pad(fp, &dbuf[i], w);
  6149     0216  0844               	movf	dtoa@i,w
  6150     0217  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6151     0218  00B3               	movwf	pad@buf
  6152     0219  0842               	movf	dtoa@w+1,w
  6153     021A  00B5               	movwf	pad@p+1
  6154     021B  0841               	movf	dtoa@w,w
  6155     021C  00B4               	movwf	pad@p
  6156     021D  083D               	movf	dtoa@fp,w
  6157     021E  318F  27C1  3181   	fcall	_pad
  6158     0221                     l907:
  6159     0221  0008               	return
  6160     0222                     __end_of_dtoa:
  6161                           
  6162                           	psect	text24
  6163     0FC1                     __ptext24:	
  6164 ;; *************** function _pad *****************
  6165 ;; Defined at:
  6166 ;;		line 193 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;  fp              1    wreg     PTR struct _IO_FILE
  6169 ;;		 -> sprintf@f(11), 
  6170 ;;  buf             1   19[BANK0 ] PTR unsigned char 
  6171 ;;		 -> dbuf(32), 
  6172 ;;  p               2   20[BANK0 ] int 
  6173 ;; Auto vars:     Size  Location     Type
  6174 ;;  fp              1   25[BANK0 ] PTR struct _IO_FILE
  6175 ;;		 -> sprintf@f(11), 
  6176 ;;  i               2   23[BANK0 ] int 
  6177 ;; Return value:  Size  Location     Type
  6178 ;;                  1    wreg      void 
  6179 ;; Registers used:
  6180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6181 ;; Tracked objects:
  6182 ;;		On entry : 0/0
  6183 ;;		On exit  : 0/0
  6184 ;;		Unchanged: 0/0
  6185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6186 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6187 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6188 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6189 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6190 ;;Total ram usage:        7 bytes
  6191 ;; Hardware stack levels used: 1
  6192 ;; Hardware stack levels required when called: 6
  6193 ;; This function calls:
  6194 ;;		_fputc
  6195 ;;		_fputs
  6196 ;; This function is called by:
  6197 ;;		_dtoa
  6198 ;;		_xtoa
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           
  6202     0FC1                     _pad:	
  6203                           ;psect for function _pad
  6204                           
  6205                           
  6206                           ;incstack = 0
  6207                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6208                           ;pad@fp stored from wreg
  6209     0FC1  0020               	movlb	0	; select bank0
  6210     0FC2  00B9               	movwf	pad@fp
  6211     0FC3                     l2870:
  6212                           
  6213                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 193: static void pad
      +                          (FILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.46/pic/sources/c99/common/do
      +                          prnt.c: 194: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 195:  
      +                             int i;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 199:     if
      +                           (flags & (1 << 0)) {
  6214     0FC3  1C65               	btfss	_flags,0
  6215     0FC4  2FC6               	goto	u2651
  6216     0FC5  2FC7               	goto	u2650
  6217     0FC6                     u2651:
  6218     0FC6  2FCD               	goto	l2874
  6219     0FC7                     u2650:
  6220     0FC7                     l2872:
  6221                           
  6222                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 200:         fputs((
      +                          const char *)buf, fp);
  6223     0FC7  0839               	movf	pad@fp,w
  6224     0FC8  00AC               	movwf	fputs@fp
  6225     0FC9  0833               	movf	pad@buf,w
  6226     0FCA  318E  269A  318F   	fcall	_fputs
  6227     0FCD                     l2874:
  6228                           
  6229                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 205:  if (p < 0) {
  6230     0FCD  0020               	movlb	0	; select bank0
  6231     0FCE  1FB5               	btfss	pad@p+1,7
  6232     0FCF  2FD1               	goto	u2661
  6233     0FD0  2FD2               	goto	u2660
  6234     0FD1                     u2661:
  6235     0FD1  2FD4               	goto	l886
  6236     0FD2                     u2660:
  6237     0FD2                     l2876:
  6238                           
  6239                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 206:   p = 0;
  6240     0FD2  01B4               	clrf	pad@p
  6241     0FD3  01B5               	clrf	pad@p+1
  6242     0FD4                     l886:	
  6243                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 207:  }
  6244                           
  6245                           
  6246                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 208:     i = 0;
  6247     0FD4  01B7               	clrf	pad@i
  6248     0FD5  01B8               	clrf	pad@i+1
  6249                           
  6250                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 209:     while (i < 
      +                          p) {
  6251     0FD6  2FE6               	goto	l2882
  6252     0FD7                     l2878:
  6253                           
  6254                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 210:         fputc('
      +                           ', fp);
  6255     0FD7  3020               	movlw	32
  6256     0FD8  0020               	movlb	0	; select bank0
  6257     0FD9  00A4               	movwf	fputc@c
  6258     0FDA  3000               	movlw	0
  6259     0FDB  00A5               	movwf	fputc@c+1
  6260     0FDC  0839               	movf	pad@fp,w
  6261     0FDD  00A6               	movwf	fputc@fp
  6262     0FDE  3187  2717  318F   	fcall	_fputc
  6263     0FE1                     l2880:
  6264                           
  6265                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 211:         ++i;
  6266     0FE1  3001               	movlw	1
  6267     0FE2  0020               	movlb	0	; select bank0
  6268     0FE3  07B7               	addwf	pad@i,f
  6269     0FE4  3000               	movlw	0
  6270     0FE5  3DB8               	addwfc	pad@i+1,f
  6271     0FE6                     l2882:
  6272                           
  6273                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 209:     while (i < 
      +                          p) {
  6274     0FE6  0838               	movf	pad@i+1,w
  6275     0FE7  3A80               	xorlw	128
  6276     0FE8  00B6               	movwf	??_pad
  6277     0FE9  0835               	movf	pad@p+1,w
  6278     0FEA  3A80               	xorlw	128
  6279     0FEB  0236               	subwf	??_pad,w
  6280     0FEC  1D03               	skipz
  6281     0FED  2FF0               	goto	u2675
  6282     0FEE  0834               	movf	pad@p,w
  6283     0FEF  0237               	subwf	pad@i,w
  6284     0FF0                     u2675:
  6285     0FF0  1C03               	skipc
  6286     0FF1  2FF3               	goto	u2671
  6287     0FF2  2FF4               	goto	u2670
  6288     0FF3                     u2671:
  6289     0FF3  2FD7               	goto	l2878
  6290     0FF4                     u2670:
  6291     0FF4                     l889:
  6292                           
  6293                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 216:     if (!(flags
      +                           & (1 << 0))) {
  6294     0FF4  0020               	movlb	0	; select bank0
  6295     0FF5  1865               	btfsc	_flags,0
  6296     0FF6  2FF8               	goto	u2681
  6297     0FF7  2FF9               	goto	u2680
  6298     0FF8                     u2681:
  6299     0FF8  2FFF               	goto	l891
  6300     0FF9                     u2680:
  6301     0FF9                     l2884:
  6302                           
  6303                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 218:         fputs((
      +                          const char *)buf, fp);
  6304     0FF9  0839               	movf	pad@fp,w
  6305     0FFA  00AC               	movwf	fputs@fp
  6306     0FFB  0833               	movf	pad@buf,w
  6307     0FFC  318E  269A  318F   	fcall	_fputs
  6308     0FFF                     l891:
  6309     0FFF  0008               	return
  6310     1000                     __end_of_pad:
  6311                           
  6312                           	psect	text25
  6313     0E9A                     __ptext25:	
  6314 ;; *************** function _fputs *****************
  6315 ;; Defined at:
  6316 ;;		line 8 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/nf_fputs.c"
  6317 ;; Parameters:    Size  Location     Type
  6318 ;;  s               1    wreg     PTR const unsigned char 
  6319 ;;		 -> dbuf(32), 
  6320 ;;  fp              1   12[BANK0 ] PTR struct _IO_FILE
  6321 ;;		 -> sprintf@f(11), 
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;  s               1   18[BANK0 ] PTR const unsigned char 
  6324 ;;		 -> dbuf(32), 
  6325 ;;  i               2   16[BANK0 ] int 
  6326 ;;  c               1   15[BANK0 ] unsigned char 
  6327 ;; Return value:  Size  Location     Type
  6328 ;;                  2   12[BANK0 ] int 
  6329 ;; Registers used:
  6330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6331 ;; Tracked objects:
  6332 ;;		On entry : 0/0
  6333 ;;		On exit  : 0/0
  6334 ;;		Unchanged: 0/0
  6335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6336 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6337 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6338 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6339 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6340 ;;Total ram usage:        7 bytes
  6341 ;; Hardware stack levels used: 1
  6342 ;; Hardware stack levels required when called: 5
  6343 ;; This function calls:
  6344 ;;		_fputc
  6345 ;; This function is called by:
  6346 ;;		_pad
  6347 ;; This function uses a non-reentrant model
  6348 ;;
  6349                           
  6350     0E9A                     _fputs:	
  6351                           ;psect for function _fputs
  6352                           
  6353                           
  6354                           ;incstack = 0
  6355                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6356                           ;fputs@s stored from wreg
  6357     0E9A  0020               	movlb	0	; select bank0
  6358     0E9B  00B2               	movwf	fputs@s
  6359     0E9C                     l2766:
  6360     0E9C  01B0               	clrf	fputs@i
  6361     0E9D  01B1               	clrf	fputs@i+1
  6362     0E9E  2EB0               	goto	l2772
  6363     0E9F                     l2768:
  6364     0E9F  082F               	movf	fputs@c,w
  6365     0EA0  00AD               	movwf	??_fputs
  6366     0EA1  01AE               	clrf	??_fputs+1
  6367     0EA2  082D               	movf	??_fputs,w
  6368     0EA3  00A4               	movwf	fputc@c
  6369     0EA4  082E               	movf	??_fputs+1,w
  6370     0EA5  00A5               	movwf	fputc@c+1
  6371     0EA6  082C               	movf	fputs@fp,w
  6372     0EA7  00A6               	movwf	fputc@fp
  6373     0EA8  3187  2717  318E   	fcall	_fputc
  6374     0EAB                     l2770:
  6375     0EAB  3001               	movlw	1
  6376     0EAC  0020               	movlb	0	; select bank0
  6377     0EAD  07B0               	addwf	fputs@i,f
  6378     0EAE  3000               	movlw	0
  6379     0EAF  3DB1               	addwfc	fputs@i+1,f
  6380     0EB0                     l2772:
  6381     0EB0  0830               	movf	fputs@i,w
  6382     0EB1  0732               	addwf	fputs@s,w
  6383     0EB2  00AD               	movwf	??_fputs
  6384     0EB3  082D               	movf	??_fputs,w
  6385     0EB4  0086               	movwf	6
  6386     0EB5  3001               	movlw	1	; select bank2/3
  6387     0EB6  0087               	movwf	7
  6388     0EB7  0801               	movf	1,w
  6389     0EB8  00AF               	movwf	fputs@c
  6390     0EB9  082F               	movf	fputs@c,w
  6391     0EBA  1D03               	btfss	3,2
  6392     0EBB  2EBD               	goto	u2411
  6393     0EBC  2EBE               	goto	u2410
  6394     0EBD                     u2411:
  6395     0EBD  2E9F               	goto	l2768
  6396     0EBE                     u2410:
  6397     0EBE                     l981:
  6398     0EBE  0008               	return
  6399     0EBF                     __end_of_fputs:
  6400                           
  6401                           	psect	text26
  6402     0717                     __ptext26:	
  6403 ;; *************** function _fputc *****************
  6404 ;; Defined at:
  6405 ;;		line 8 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/nf_fputc.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;  c               2    4[BANK0 ] int 
  6408 ;;  fp              1    6[BANK0 ] PTR struct _IO_FILE
  6409 ;;		 -> sprintf@f(11), 
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;		None
  6412 ;; Return value:  Size  Location     Type
  6413 ;;                  2    4[BANK0 ] int 
  6414 ;; Registers used:
  6415 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6421 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6423 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6424 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6425 ;;Total ram usage:        8 bytes
  6426 ;; Hardware stack levels used: 1
  6427 ;; Hardware stack levels required when called: 4
  6428 ;; This function calls:
  6429 ;;		_putch
  6430 ;; This function is called by:
  6431 ;;		_pad
  6432 ;;		_vfpfcnvrt
  6433 ;;		_fputs
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437     0717                     _fputc:	
  6438                           ;psect for function _fputc
  6439                           
  6440     0717                     l2750:	
  6441                           ;incstack = 0
  6442                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6443                           
  6444     0717  0020               	movlb	0	; select bank0
  6445     0718  0826               	movf	fputc@fp,w
  6446     0719  1903               	btfsc	3,2
  6447     071A  2F1C               	goto	u2371
  6448     071B  2F1D               	goto	u2370
  6449     071C                     u2371:
  6450     071C  2F22               	goto	l2754
  6451     071D                     u2370:
  6452     071D                     l2752:
  6453     071D  0826               	movf	fputc@fp,w
  6454     071E  1D03               	btfss	3,2
  6455     071F  2F21               	goto	u2381
  6456     0720  2F22               	goto	u2380
  6457     0721                     u2381:
  6458     0721  2F27               	goto	l2756
  6459     0722                     u2380:
  6460     0722                     l2754:
  6461     0722  0824               	movf	fputc@c,w
  6462     0723  3180  2003  3187   	fcall	_putch
  6463     0726  2F68               	goto	l973
  6464     0727                     l2756:
  6465     0727  0826               	movf	fputc@fp,w
  6466     0728  3E09               	addlw	9
  6467     0729  0086               	movwf	6
  6468     072A  0187               	clrf	7
  6469     072B  0016               	moviw fsr1++
  6470     072C  0401               	iorwf	1,w
  6471     072D  1903               	btfsc	3,2
  6472     072E  2F30               	goto	u2391
  6473     072F  2F31               	goto	u2390
  6474     0730                     u2391:
  6475     0730  2F4F               	goto	l2760
  6476     0731                     u2390:
  6477     0731                     l2758:
  6478     0731  0826               	movf	fputc@fp,w
  6479     0732  3E09               	addlw	9
  6480     0733  0086               	movwf	6
  6481     0734  0187               	clrf	7
  6482     0735  3F40               	moviw [0]fsr1
  6483     0736  00A7               	movwf	??_fputc
  6484     0737  3F41               	moviw [1]fsr1
  6485     0738  00A8               	movwf	??_fputc+1
  6486     0739  0826               	movf	fputc@fp,w
  6487     073A  3E02               	addlw	2
  6488     073B  0086               	movwf	6
  6489     073C  0187               	clrf	7
  6490     073D  3F40               	moviw [0]fsr1
  6491     073E  00A9               	movwf	??_fputc+2
  6492     073F  3F41               	moviw [1]fsr1
  6493     0740  00AA               	movwf	??_fputc+3
  6494     0741  082A               	movf	??_fputc+3,w
  6495     0742  3A80               	xorlw	128
  6496     0743  00AB               	movwf	??_fputc+4
  6497     0744  0828               	movf	??_fputc+1,w
  6498     0745  3A80               	xorlw	128
  6499     0746  022B               	subwf	??_fputc+4,w
  6500     0747  1D03               	skipz
  6501     0748  2F4B               	goto	u2405
  6502     0749  0827               	movf	??_fputc,w
  6503     074A  0229               	subwf	??_fputc+2,w
  6504     074B                     u2405:
  6505     074B  1803               	skipnc
  6506     074C  2F4E               	goto	u2401
  6507     074D  2F4F               	goto	u2400
  6508     074E                     u2401:
  6509     074E  2F68               	goto	l973
  6510     074F                     u2400:
  6511     074F                     l2760:
  6512     074F  0020               	movlb	0	; select bank0
  6513     0750  0826               	movf	fputc@fp,w
  6514     0751  0086               	movwf	6
  6515     0752  0187               	clrf	7
  6516     0753  0826               	movf	fputc@fp,w
  6517     0754  3E02               	addlw	2
  6518     0755  0084               	movwf	4
  6519     0756  0185               	clrf	5
  6520     0757  0800               	movf	0,w
  6521     0758  0701               	addwf	1,w
  6522     0759  00A7               	movwf	??_fputc
  6523     075A  0827               	movf	??_fputc,w
  6524     075B  0086               	movwf	6
  6525     075C  0187               	clrf	7
  6526     075D  0824               	movf	fputc@c,w
  6527     075E  0081               	movwf	1
  6528     075F                     l2762:
  6529     075F  0826               	movf	fputc@fp,w
  6530     0760  3E02               	addlw	2
  6531     0761  0086               	movwf	6
  6532     0762  0187               	clrf	7
  6533     0763  3001               	movlw	1
  6534     0764  0781               	addwf	1,f
  6535     0765  3141               	addfsr 1,1
  6536     0766  1803               	skipnc
  6537     0767  0A81               	incf	1,f
  6538     0768                     l973:
  6539     0768  0008               	return
  6540     0769                     __end_of_fputc:
  6541                           
  6542                           	psect	text27
  6543     0003                     __ptext27:	
  6544 ;; *************** function _putch *****************
  6545 ;; Defined at:
  6546 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/putch.c"
  6547 ;; Parameters:    Size  Location     Type
  6548 ;;  c               1    wreg     unsigned char 
  6549 ;; Auto vars:     Size  Location     Type
  6550 ;;  c               1    0[COMMON] unsigned char 
  6551 ;; Return value:  Size  Location     Type
  6552 ;;                  1    wreg      void 
  6553 ;; Registers used:
  6554 ;;		wreg
  6555 ;; Tracked objects:
  6556 ;;		On entry : 0/0
  6557 ;;		On exit  : 0/0
  6558 ;;		Unchanged: 0/0
  6559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6564 ;;Total ram usage:        0 bytes
  6565 ;; Hardware stack levels used: 1
  6566 ;; Hardware stack levels required when called: 3
  6567 ;; This function calls:
  6568 ;;		Nothing
  6569 ;; This function is called by:
  6570 ;;		_fputc
  6571 ;; This function uses a non-reentrant model
  6572 ;;
  6573                           
  6574     0003                     _putch:	
  6575                           ;psect for function _putch
  6576                           
  6577     0003                     l984:	
  6578                           ;incstack = 0
  6579                           ; Regs used in _putch: [wreg]
  6580                           
  6581     0003  0008               	return
  6582     0004                     __end_of_putch:
  6583                           
  6584                           	psect	text28
  6585     0D6F                     __ptext28:	
  6586 ;; *************** function _abs *****************
  6587 ;; Defined at:
  6588 ;;		line 1 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/abs.c"
  6589 ;; Parameters:    Size  Location     Type
  6590 ;;  a               2   11[BANK0 ] int 
  6591 ;; Auto vars:     Size  Location     Type
  6592 ;;		None
  6593 ;; Return value:  Size  Location     Type
  6594 ;;                  2   11[BANK0 ] int 
  6595 ;; Registers used:
  6596 ;;		wreg, status,2, status,0
  6597 ;; Tracked objects:
  6598 ;;		On entry : 0/0
  6599 ;;		On exit  : 0/0
  6600 ;;		Unchanged: 0/0
  6601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6602 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6604 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6605 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6606 ;;Total ram usage:        4 bytes
  6607 ;; Hardware stack levels used: 1
  6608 ;; Hardware stack levels required when called: 3
  6609 ;; This function calls:
  6610 ;;		Nothing
  6611 ;; This function is called by:
  6612 ;;		_dtoa
  6613 ;; This function uses a non-reentrant model
  6614 ;;
  6615                           
  6616     0D6F                     _abs:	
  6617                           ;psect for function _abs
  6618                           
  6619     0D6F                     l2886:	
  6620                           ;incstack = 0
  6621                           ; Regs used in _abs: [wreg+status,2+status,0]
  6622                           
  6623     0D6F  0020               	movlb	0	; select bank0
  6624     0D70  1BAC               	btfsc	abs@a+1,7
  6625     0D71  2D73               	goto	u2691
  6626     0D72  2D74               	goto	u2690
  6627     0D73                     u2691:
  6628     0D73  2D75               	goto	l2890
  6629     0D74                     u2690:
  6630     0D74                     l2888:
  6631     0D74  2D80               	goto	l961
  6632     0D75                     l2890:
  6633     0D75  092B               	comf	abs@a,w
  6634     0D76  00AD               	movwf	??_abs
  6635     0D77  092C               	comf	abs@a+1,w
  6636     0D78  00AE               	movwf	??_abs+1
  6637     0D79  0AAD               	incf	??_abs,f
  6638     0D7A  1903               	skipnz
  6639     0D7B  0AAE               	incf	??_abs+1,f
  6640     0D7C  082D               	movf	??_abs,w
  6641     0D7D  00AB               	movwf	?_abs
  6642     0D7E  082E               	movf	??_abs+1,w
  6643     0D7F  00AC               	movwf	?_abs+1
  6644     0D80                     l961:
  6645     0D80  0008               	return
  6646     0D81                     __end_of_abs:
  6647                           
  6648                           	psect	text29
  6649     06C3                     __ptext29:	
  6650 ;; *************** function ___awmod *****************
  6651 ;; Defined at:
  6652 ;;		line 5 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/awmod.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;  divisor         2    4[BANK0 ] int 
  6655 ;;  dividend        2    6[BANK0 ] int 
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;  sign            1   10[BANK0 ] unsigned char 
  6658 ;;  counter         1    9[BANK0 ] unsigned char 
  6659 ;; Return value:  Size  Location     Type
  6660 ;;                  2    4[BANK0 ] int 
  6661 ;; Registers used:
  6662 ;;		wreg, status,2, status,0
  6663 ;; Tracked objects:
  6664 ;;		On entry : 0/0
  6665 ;;		On exit  : 0/0
  6666 ;;		Unchanged: 0/0
  6667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6668 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6669 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6670 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6671 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6672 ;;Total ram usage:        7 bytes
  6673 ;; Hardware stack levels used: 1
  6674 ;; Hardware stack levels required when called: 3
  6675 ;; This function calls:
  6676 ;;		Nothing
  6677 ;; This function is called by:
  6678 ;;		_dtoa
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682     06C3                     ___awmod:	
  6683                           ;psect for function ___awmod
  6684                           
  6685     06C3                     l2832:	
  6686                           ;incstack = 0
  6687                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6688                           
  6689     06C3  0020               	movlb	0	; select bank0
  6690     06C4  01AA               	clrf	___awmod@sign
  6691     06C5                     l2834:
  6692     06C5  1FA7               	btfss	___awmod@dividend+1,7
  6693     06C6  2EC8               	goto	u2561
  6694     06C7  2EC9               	goto	u2560
  6695     06C8                     u2561:
  6696     06C8  2ED0               	goto	l2840
  6697     06C9                     u2560:
  6698     06C9                     l2836:
  6699     06C9  09A6               	comf	___awmod@dividend,f
  6700     06CA  09A7               	comf	___awmod@dividend+1,f
  6701     06CB  0AA6               	incf	___awmod@dividend,f
  6702     06CC  1903               	skipnz
  6703     06CD  0AA7               	incf	___awmod@dividend+1,f
  6704     06CE                     l2838:
  6705     06CE  01AA               	clrf	___awmod@sign
  6706     06CF  0AAA               	incf	___awmod@sign,f
  6707     06D0                     l2840:
  6708     06D0  1FA5               	btfss	___awmod@divisor+1,7
  6709     06D1  2ED3               	goto	u2571
  6710     06D2  2ED4               	goto	u2570
  6711     06D3                     u2571:
  6712     06D3  2ED9               	goto	l2844
  6713     06D4                     u2570:
  6714     06D4                     l2842:
  6715     06D4  09A4               	comf	___awmod@divisor,f
  6716     06D5  09A5               	comf	___awmod@divisor+1,f
  6717     06D6  0AA4               	incf	___awmod@divisor,f
  6718     06D7  1903               	skipnz
  6719     06D8  0AA5               	incf	___awmod@divisor+1,f
  6720     06D9                     l2844:
  6721     06D9  0824               	movf	___awmod@divisor,w
  6722     06DA  0425               	iorwf	___awmod@divisor+1,w
  6723     06DB  1903               	btfsc	3,2
  6724     06DC  2EDE               	goto	u2581
  6725     06DD  2EDF               	goto	u2580
  6726     06DE                     u2581:
  6727     06DE  2F08               	goto	l2862
  6728     06DF                     u2580:
  6729     06DF                     l2846:
  6730     06DF  01A9               	clrf	___awmod@counter
  6731     06E0  0AA9               	incf	___awmod@counter,f
  6732     06E1  2EEB               	goto	l2852
  6733     06E2                     l2848:
  6734     06E2  3001               	movlw	1
  6735     06E3                     u2595:
  6736     06E3  35A4               	lslf	___awmod@divisor,f
  6737     06E4  0DA5               	rlf	___awmod@divisor+1,f
  6738     06E5  0B89               	decfsz	9,f
  6739     06E6  2EE3               	goto	u2595
  6740     06E7                     l2850:
  6741     06E7  3001               	movlw	1
  6742     06E8  00A8               	movwf	??___awmod
  6743     06E9  0828               	movf	??___awmod,w
  6744     06EA  07A9               	addwf	___awmod@counter,f
  6745     06EB                     l2852:
  6746     06EB  1FA5               	btfss	___awmod@divisor+1,7
  6747     06EC  2EEE               	goto	u2601
  6748     06ED  2EEF               	goto	u2600
  6749     06EE                     u2601:
  6750     06EE  2EE2               	goto	l2848
  6751     06EF                     u2600:
  6752     06EF                     l2854:
  6753     06EF  0825               	movf	___awmod@divisor+1,w
  6754     06F0  0227               	subwf	___awmod@dividend+1,w
  6755     06F1  1D03               	skipz
  6756     06F2  2EF5               	goto	u2615
  6757     06F3  0824               	movf	___awmod@divisor,w
  6758     06F4  0226               	subwf	___awmod@dividend,w
  6759     06F5                     u2615:
  6760     06F5  1C03               	skipc
  6761     06F6  2EF8               	goto	u2611
  6762     06F7  2EF9               	goto	u2610
  6763     06F8                     u2611:
  6764     06F8  2EFD               	goto	l2858
  6765     06F9                     u2610:
  6766     06F9                     l2856:
  6767     06F9  0824               	movf	___awmod@divisor,w
  6768     06FA  02A6               	subwf	___awmod@dividend,f
  6769     06FB  0825               	movf	___awmod@divisor+1,w
  6770     06FC  3BA7               	subwfb	___awmod@dividend+1,f
  6771     06FD                     l2858:
  6772     06FD  3001               	movlw	1
  6773     06FE                     u2625:
  6774     06FE  36A5               	lsrf	___awmod@divisor+1,f
  6775     06FF  0CA4               	rrf	___awmod@divisor,f
  6776     0700  0B89               	decfsz	9,f
  6777     0701  2EFE               	goto	u2625
  6778     0702                     l2860:
  6779     0702  3001               	movlw	1
  6780     0703  02A9               	subwf	___awmod@counter,f
  6781     0704  1D03               	btfss	3,2
  6782     0705  2F07               	goto	u2631
  6783     0706  2F08               	goto	u2630
  6784     0707                     u2631:
  6785     0707  2EEF               	goto	l2854
  6786     0708                     u2630:
  6787     0708                     l2862:
  6788     0708  082A               	movf	___awmod@sign,w
  6789     0709  1903               	btfsc	3,2
  6790     070A  2F0C               	goto	u2641
  6791     070B  2F0D               	goto	u2640
  6792     070C                     u2641:
  6793     070C  2F12               	goto	l2866
  6794     070D                     u2640:
  6795     070D                     l2864:
  6796     070D  09A6               	comf	___awmod@dividend,f
  6797     070E  09A7               	comf	___awmod@dividend+1,f
  6798     070F  0AA6               	incf	___awmod@dividend,f
  6799     0710  1903               	skipnz
  6800     0711  0AA7               	incf	___awmod@dividend+1,f
  6801     0712                     l2866:
  6802     0712  0827               	movf	___awmod@dividend+1,w
  6803     0713  00A5               	movwf	?___awmod+1
  6804     0714  0826               	movf	___awmod@dividend,w
  6805     0715  00A4               	movwf	?___awmod
  6806     0716                     l563:
  6807     0716  0008               	return
  6808     0717                     __end_of___awmod:
  6809                           
  6810                           	psect	text30
  6811     0608                     __ptext30:	
  6812 ;; *************** function ___awdiv *****************
  6813 ;; Defined at:
  6814 ;;		line 5 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/awdiv.c"
  6815 ;; Parameters:    Size  Location     Type
  6816 ;;  divisor         2    4[BANK0 ] int 
  6817 ;;  dividend        2    6[BANK0 ] int 
  6818 ;; Auto vars:     Size  Location     Type
  6819 ;;  quotient        2   11[BANK0 ] int 
  6820 ;;  sign            1   10[BANK0 ] unsigned char 
  6821 ;;  counter         1    9[BANK0 ] unsigned char 
  6822 ;; Return value:  Size  Location     Type
  6823 ;;                  2    4[BANK0 ] int 
  6824 ;; Registers used:
  6825 ;;		wreg, status,2, status,0
  6826 ;; Tracked objects:
  6827 ;;		On entry : 0/0
  6828 ;;		On exit  : 0/0
  6829 ;;		Unchanged: 0/0
  6830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6831 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6832 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6833 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6834 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6835 ;;Total ram usage:        9 bytes
  6836 ;; Hardware stack levels used: 1
  6837 ;; Hardware stack levels required when called: 3
  6838 ;; This function calls:
  6839 ;;		Nothing
  6840 ;; This function is called by:
  6841 ;;		_dtoa
  6842 ;; This function uses a non-reentrant model
  6843 ;;
  6844                           
  6845     0608                     ___awdiv:	
  6846                           ;psect for function ___awdiv
  6847                           
  6848     0608                     l2788:	
  6849                           ;incstack = 0
  6850                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6851                           
  6852     0608  0020               	movlb	0	; select bank0
  6853     0609  01AA               	clrf	___awdiv@sign
  6854     060A                     l2790:
  6855     060A  1FA5               	btfss	___awdiv@divisor+1,7
  6856     060B  2E0D               	goto	u2461
  6857     060C  2E0E               	goto	u2460
  6858     060D                     u2461:
  6859     060D  2E15               	goto	l2796
  6860     060E                     u2460:
  6861     060E                     l2792:
  6862     060E  09A4               	comf	___awdiv@divisor,f
  6863     060F  09A5               	comf	___awdiv@divisor+1,f
  6864     0610  0AA4               	incf	___awdiv@divisor,f
  6865     0611  1903               	skipnz
  6866     0612  0AA5               	incf	___awdiv@divisor+1,f
  6867     0613                     l2794:
  6868     0613  01AA               	clrf	___awdiv@sign
  6869     0614  0AAA               	incf	___awdiv@sign,f
  6870     0615                     l2796:
  6871     0615  1FA7               	btfss	___awdiv@dividend+1,7
  6872     0616  2E18               	goto	u2471
  6873     0617  2E19               	goto	u2470
  6874     0618                     u2471:
  6875     0618  2E22               	goto	l2802
  6876     0619                     u2470:
  6877     0619                     l2798:
  6878     0619  09A6               	comf	___awdiv@dividend,f
  6879     061A  09A7               	comf	___awdiv@dividend+1,f
  6880     061B  0AA6               	incf	___awdiv@dividend,f
  6881     061C  1903               	skipnz
  6882     061D  0AA7               	incf	___awdiv@dividend+1,f
  6883     061E                     l2800:
  6884     061E  3001               	movlw	1
  6885     061F  00A8               	movwf	??___awdiv
  6886     0620  0828               	movf	??___awdiv,w
  6887     0621  06AA               	xorwf	___awdiv@sign,f
  6888     0622                     l2802:
  6889     0622  01AB               	clrf	___awdiv@quotient
  6890     0623  01AC               	clrf	___awdiv@quotient+1
  6891     0624                     l2804:
  6892     0624  0824               	movf	___awdiv@divisor,w
  6893     0625  0425               	iorwf	___awdiv@divisor+1,w
  6894     0626  1903               	btfsc	3,2
  6895     0627  2E29               	goto	u2481
  6896     0628  2E2A               	goto	u2480
  6897     0629                     u2481:
  6898     0629  2E59               	goto	l2824
  6899     062A                     u2480:
  6900     062A                     l2806:
  6901     062A  01A9               	clrf	___awdiv@counter
  6902     062B  0AA9               	incf	___awdiv@counter,f
  6903     062C  2E36               	goto	l2812
  6904     062D                     l2808:
  6905     062D  3001               	movlw	1
  6906     062E                     u2495:
  6907     062E  35A4               	lslf	___awdiv@divisor,f
  6908     062F  0DA5               	rlf	___awdiv@divisor+1,f
  6909     0630  0B89               	decfsz	9,f
  6910     0631  2E2E               	goto	u2495
  6911     0632                     l2810:
  6912     0632  3001               	movlw	1
  6913     0633  00A8               	movwf	??___awdiv
  6914     0634  0828               	movf	??___awdiv,w
  6915     0635  07A9               	addwf	___awdiv@counter,f
  6916     0636                     l2812:
  6917     0636  1FA5               	btfss	___awdiv@divisor+1,7
  6918     0637  2E39               	goto	u2501
  6919     0638  2E3A               	goto	u2500
  6920     0639                     u2501:
  6921     0639  2E2D               	goto	l2808
  6922     063A                     u2500:
  6923     063A                     l2814:
  6924     063A  3001               	movlw	1
  6925     063B                     u2515:
  6926     063B  35AB               	lslf	___awdiv@quotient,f
  6927     063C  0DAC               	rlf	___awdiv@quotient+1,f
  6928     063D  0B89               	decfsz	9,f
  6929     063E  2E3B               	goto	u2515
  6930     063F  0825               	movf	___awdiv@divisor+1,w
  6931     0640  0227               	subwf	___awdiv@dividend+1,w
  6932     0641  1D03               	skipz
  6933     0642  2E45               	goto	u2525
  6934     0643  0824               	movf	___awdiv@divisor,w
  6935     0644  0226               	subwf	___awdiv@dividend,w
  6936     0645                     u2525:
  6937     0645  1C03               	skipc
  6938     0646  2E48               	goto	u2521
  6939     0647  2E49               	goto	u2520
  6940     0648                     u2521:
  6941     0648  2E4E               	goto	l2820
  6942     0649                     u2520:
  6943     0649                     l2816:
  6944     0649  0824               	movf	___awdiv@divisor,w
  6945     064A  02A6               	subwf	___awdiv@dividend,f
  6946     064B  0825               	movf	___awdiv@divisor+1,w
  6947     064C  3BA7               	subwfb	___awdiv@dividend+1,f
  6948     064D                     l2818:
  6949     064D  142B               	bsf	___awdiv@quotient,0
  6950     064E                     l2820:
  6951     064E  3001               	movlw	1
  6952     064F                     u2535:
  6953     064F  36A5               	lsrf	___awdiv@divisor+1,f
  6954     0650  0CA4               	rrf	___awdiv@divisor,f
  6955     0651  0B89               	decfsz	9,f
  6956     0652  2E4F               	goto	u2535
  6957     0653                     l2822:
  6958     0653  3001               	movlw	1
  6959     0654  02A9               	subwf	___awdiv@counter,f
  6960     0655  1D03               	btfss	3,2
  6961     0656  2E58               	goto	u2541
  6962     0657  2E59               	goto	u2540
  6963     0658                     u2541:
  6964     0658  2E3A               	goto	l2814
  6965     0659                     u2540:
  6966     0659                     l2824:
  6967     0659  082A               	movf	___awdiv@sign,w
  6968     065A  1903               	btfsc	3,2
  6969     065B  2E5D               	goto	u2551
  6970     065C  2E5E               	goto	u2550
  6971     065D                     u2551:
  6972     065D  2E63               	goto	l2828
  6973     065E                     u2550:
  6974     065E                     l2826:
  6975     065E  09AB               	comf	___awdiv@quotient,f
  6976     065F  09AC               	comf	___awdiv@quotient+1,f
  6977     0660  0AAB               	incf	___awdiv@quotient,f
  6978     0661  1903               	skipnz
  6979     0662  0AAC               	incf	___awdiv@quotient+1,f
  6980     0663                     l2828:
  6981     0663  082C               	movf	___awdiv@quotient+1,w
  6982     0664  00A5               	movwf	?___awdiv+1
  6983     0665  082B               	movf	___awdiv@quotient,w
  6984     0666  00A4               	movwf	?___awdiv
  6985     0667                     l550:
  6986     0667  0008               	return
  6987     0668                     __end_of___awdiv:
  6988                           
  6989                           	psect	text31
  6990     0D81                     __ptext31:	
  6991 ;; *************** function _setup_address *****************
  6992 ;; Defined at:
  6993 ;;		line 278 in file "main.c"
  6994 ;; Parameters:    Size  Location     Type
  6995 ;;  addr            2    4[BANK0 ] unsigned short 
  6996 ;; Auto vars:     Size  Location     Type
  6997 ;;  hi              1    6[BANK0 ] unsigned char 
  6998 ;; Return value:  Size  Location     Type
  6999 ;;                  1    wreg      void 
  7000 ;; Registers used:
  7001 ;;		wreg, status,2
  7002 ;; Tracked objects:
  7003 ;;		On entry : 0/0
  7004 ;;		On exit  : 0/0
  7005 ;;		Unchanged: 0/0
  7006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7007 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7008 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7010 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7011 ;;Total ram usage:        3 bytes
  7012 ;; Hardware stack levels used: 1
  7013 ;; Hardware stack levels required when called: 3
  7014 ;; This function calls:
  7015 ;;		Nothing
  7016 ;; This function is called by:
  7017 ;;		_do_blank
  7018 ;;		_do_read
  7019 ;;		_do_write
  7020 ;; This function uses a non-reentrant model
  7021 ;;
  7022                           
  7023     0D81                     _setup_address:	
  7024                           ;psect for function _setup_address
  7025                           
  7026     0D81                     l3146:	
  7027                           ;incstack = 0
  7028                           ; Regs used in _setup_address: [wreg+status,2]
  7029                           
  7030                           
  7031                           ;main.c: 278: void setup_address(uint16_t addr);main.c: 279: {;main.c: 280:         PORT
      +                          Cbits.RC0 = 1;
  7032     0D81  0020               	movlb	0	; select bank0
  7033     0D82  140E               	bsf	14,0	;volatile
  7034                           
  7035                           ;main.c: 281:         PORTCbits.RC1 = 1;
  7036     0D83  148E               	bsf	14,1	;volatile
  7037                           
  7038                           ;main.c: 282:         PORTCbits.RC2 = 1;
  7039     0D84  150E               	bsf	14,2	;volatile
  7040     0D85                     l3148:
  7041                           
  7042                           ;main.c: 285:         uint8_t hi = addr >> 8;
  7043     0D85  0825               	movf	setup_address@addr+1,w
  7044     0D86  00A6               	movwf	setup_address@hi
  7045     0D87                     l3150:
  7046                           
  7047                           ;main.c: 286:         LATB = addr & 0x00ff;
  7048     0D87  0824               	movf	setup_address@addr,w
  7049     0D88  0022               	movlb	2	; select bank2
  7050     0D89  008D               	movwf	13	;volatile
  7051     0D8A                     l3152:
  7052                           
  7053                           ;main.c: 287:         LATA = hi & 0x03;
  7054     0D8A  0020               	movlb	0	; select bank0
  7055     0D8B  0826               	movf	setup_address@hi,w
  7056     0D8C  3903               	andlw	3
  7057     0D8D  0022               	movlb	2	; select bank2
  7058     0D8E  008C               	movwf	12	;volatile
  7059                           
  7060                           ;main.c: 290:         _delay((unsigned long)((2)*(20000000/4000000.0)));
  7061     0D8F  3003               	movlw	3
  7062     0D90                     u3537:
  7063     0D90  0B89               	decfsz	9,f
  7064     0D91  2D90               	goto	u3537
  7065     0D92  0000               	nop
  7066     0D93                     l122:
  7067     0D93  0008               	return
  7068     0D94                     __end_of_setup_address:
  7069                           
  7070                           	psect	text32
  7071     0D4C                     __ptext32:	
  7072 ;; *************** function _read_port *****************
  7073 ;; Defined at:
  7074 ;;		line 296 in file "main.c"
  7075 ;; Parameters:    Size  Location     Type
  7076 ;;		None
  7077 ;; Auto vars:     Size  Location     Type
  7078 ;;  data            1    4[BANK0 ] unsigned char 
  7079 ;; Return value:  Size  Location     Type
  7080 ;;                  1    wreg      unsigned char 
  7081 ;; Registers used:
  7082 ;;		wreg
  7083 ;; Tracked objects:
  7084 ;;		On entry : 0/0
  7085 ;;		On exit  : 0/0
  7086 ;;		Unchanged: 0/0
  7087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7089 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7091 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7092 ;;Total ram usage:        1 bytes
  7093 ;; Hardware stack levels used: 1
  7094 ;; Hardware stack levels required when called: 3
  7095 ;; This function calls:
  7096 ;;		Nothing
  7097 ;; This function is called by:
  7098 ;;		_do_blank
  7099 ;;		_do_read
  7100 ;; This function uses a non-reentrant model
  7101 ;;
  7102                           
  7103     0D4C                     _read_port:	
  7104                           ;psect for function _read_port
  7105                           
  7106     0D4C                     l3154:	
  7107                           ;incstack = 0
  7108                           ; Regs used in _read_port: [wreg]
  7109                           
  7110                           
  7111                           ;main.c: 299:     TRISD = 0xFF;
  7112     0D4C  30FF               	movlw	255
  7113     0D4D  0021               	movlb	1	; select bank1
  7114     0D4E  008F               	movwf	15	;volatile
  7115     0D4F                     l3156:
  7116                           
  7117                           ;main.c: 302:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  7118     0D4F  3200               	nop2	;2 cycle nop
  7119     0D50  3200               	nop2	;2 cycle nop
  7120     0D51  0000               	nop
  7121     0D52                     l3158:
  7122                           
  7123                           ;main.c: 305:     PORTCbits.RC0 = 1;
  7124     0D52  0020               	movlb	0	; select bank0
  7125     0D53  140E               	bsf	14,0	;volatile
  7126     0D54                     l3160:
  7127                           
  7128                           ;main.c: 306:     PORTCbits.RC1 = 1;
  7129     0D54  148E               	bsf	14,1	;volatile
  7130     0D55                     l3162:
  7131                           
  7132                           ;main.c: 307:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  7133     0D55  3200               	nop2	;2 cycle nop
  7134     0D56  3200               	nop2	;2 cycle nop
  7135     0D57  0000               	nop
  7136                           
  7137                           ;main.c: 310:     uint8_t data = PORTD;
  7138     0D58  0020               	movlb	0	; select bank0
  7139     0D59  080F               	movf	15,w	;volatile
  7140     0D5A  00A4               	movwf	read_port@data
  7141                           
  7142                           ;main.c: 312:     return data;
  7143     0D5B  0824               	movf	read_port@data,w
  7144     0D5C                     l125:
  7145     0D5C  0008               	return
  7146     0D5D                     __end_of_read_port:
  7147                           
  7148                           	psect	text33
  7149     0DE9                     __ptext33:	
  7150 ;; *************** function _clear *****************
  7151 ;; Defined at:
  7152 ;;		line 59 in file "main.c"
  7153 ;; Parameters:    Size  Location     Type
  7154 ;;		None
  7155 ;; Auto vars:     Size  Location     Type
  7156 ;;		None
  7157 ;; Return value:  Size  Location     Type
  7158 ;;                  1    wreg      void 
  7159 ;; Registers used:
  7160 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7161 ;; Tracked objects:
  7162 ;;		On entry : 0/0
  7163 ;;		On exit  : 0/0
  7164 ;;		Unchanged: 0/0
  7165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7170 ;;Total ram usage:        0 bytes
  7171 ;; Hardware stack levels used: 1
  7172 ;; Hardware stack levels required when called: 4
  7173 ;; This function calls:
  7174 ;;		_memset
  7175 ;; This function is called by:
  7176 ;;		_main
  7177 ;; This function uses a non-reentrant model
  7178 ;;
  7179                           
  7180     0DE9                     _clear:	
  7181                           ;psect for function _clear
  7182                           
  7183     0DE9                     l3272:	
  7184                           ;incstack = 0
  7185                           ; Regs used in _clear: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7186                           
  7187                           
  7188                           ;main.c: 61:     memset(queue, 0x00, 1024);
  7189     0DE9  30F0               	movlw	240
  7190     0DEA  0020               	movlb	0	; select bank0
  7191     0DEB  00A4               	movwf	memset@dest
  7192     0DEC  3023               	movlw	35
  7193     0DED  00A5               	movwf	memset@dest+1
  7194     0DEE  3000               	movlw	0
  7195     0DEF  00A6               	movwf	memset@c
  7196     0DF0  00A7               	movwf	memset@c+1
  7197     0DF1  3000               	movlw	0
  7198     0DF2  00A8               	movwf	memset@n
  7199     0DF3  3004               	movlw	4
  7200     0DF4  00A9               	movwf	memset@n+1
  7201     0DF5  318E  261E  318D   	fcall	_memset
  7202     0DF8                     l3274:
  7203                           
  7204                           ;main.c: 62:     head = 0;
  7205     0DF8  01FC               	clrf	_head
  7206     0DF9  01FD               	clrf	_head+1
  7207     0DFA                     l3276:
  7208                           
  7209                           ;main.c: 63:     tail = 1024 -1;
  7210     0DFA  30FF               	movlw	255
  7211     0DFB  0020               	movlb	0	; select bank0
  7212     0DFC  00E7               	movwf	_tail
  7213     0DFD  3003               	movlw	3
  7214     0DFE  00E8               	movwf	_tail+1
  7215     0DFF                     l3278:
  7216                           
  7217                           ;main.c: 64:     cmd_active = 0;
  7218     0DFF  0021               	movlb	1	; select bank1
  7219     0E00  01ED               	clrf	_cmd_active^(0+128)
  7220     0E01                     l74:
  7221     0E01  0008               	return
  7222     0E02                     __end_of_clear:
  7223                           
  7224                           	psect	text34
  7225     0E1E                     __ptext34:	
  7226 ;; *************** function _memset *****************
  7227 ;; Defined at:
  7228 ;;		line 3 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/memset.c"
  7229 ;; Parameters:    Size  Location     Type
  7230 ;;  dest            2    4[BANK0 ] PTR void 
  7231 ;;		 -> queue(1024), 
  7232 ;;  c               2    6[BANK0 ] int 
  7233 ;;  n               2    8[BANK0 ] unsigned int 
  7234 ;; Auto vars:     Size  Location     Type
  7235 ;;  p               2   10[BANK0 ] PTR unsigned char 
  7236 ;;		 -> queue(1024), 
  7237 ;; Return value:  Size  Location     Type
  7238 ;;                  2    4[BANK0 ] PTR void 
  7239 ;; Registers used:
  7240 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7241 ;; Tracked objects:
  7242 ;;		On entry : 0/0
  7243 ;;		On exit  : 0/0
  7244 ;;		Unchanged: 0/0
  7245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7246 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7247 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7249 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7250 ;;Total ram usage:        8 bytes
  7251 ;; Hardware stack levels used: 1
  7252 ;; Hardware stack levels required when called: 3
  7253 ;; This function calls:
  7254 ;;		Nothing
  7255 ;; This function is called by:
  7256 ;;		_clear
  7257 ;; This function uses a non-reentrant model
  7258 ;;
  7259                           
  7260     0E1E                     _memset:	
  7261                           ;psect for function _memset
  7262                           
  7263     0E1E                     l3090:	
  7264                           ;incstack = 0
  7265                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7266                           
  7267     0E1E  0020               	movlb	0	; select bank0
  7268     0E1F  0825               	movf	memset@dest+1,w
  7269     0E20  00AB               	movwf	memset@p+1
  7270     0E21  0824               	movf	memset@dest,w
  7271     0E22  00AA               	movwf	memset@p
  7272     0E23  2E2E               	goto	l3096
  7273     0E24                     l3092:
  7274     0E24  082A               	movf	memset@p,w
  7275     0E25  0086               	movwf	6
  7276     0E26  082B               	movf	memset@p+1,w
  7277     0E27  0087               	movwf	7
  7278     0E28  0826               	movf	memset@c,w
  7279     0E29  0081               	movwf	1
  7280     0E2A                     l3094:
  7281     0E2A  3001               	movlw	1
  7282     0E2B  07AA               	addwf	memset@p,f
  7283     0E2C  3000               	movlw	0
  7284     0E2D  3DAB               	addwfc	memset@p+1,f
  7285     0E2E                     l3096:
  7286     0E2E  3001               	movlw	1
  7287     0E2F  02A8               	subwf	memset@n,f
  7288     0E30  3000               	movlw	0
  7289     0E31  3BA9               	subwfb	memset@n+1,f
  7290     0E32  0A28               	incf	memset@n,w
  7291     0E33  1D03               	skipz
  7292     0E34  2E39               	goto	u2971
  7293     0E35  0A29               	incf	memset@n+1,w
  7294     0E36  1D03               	btfss	3,2
  7295     0E37  2E39               	goto	u2971
  7296     0E38  2E3A               	goto	u2970
  7297     0E39                     u2971:
  7298     0E39  2E24               	goto	l3092
  7299     0E3A                     u2970:
  7300     0E3A                     l859:
  7301     0E3A  0008               	return
  7302     0E3B                     __end_of_memset:
  7303                           
  7304                           	psect	intentry
  7305     0004                     __pintentry:	
  7306 ;; *************** function _isr *****************
  7307 ;; Defined at:
  7308 ;;		line 248 in file "main.c"
  7309 ;; Parameters:    Size  Location     Type
  7310 ;;		None
  7311 ;; Auto vars:     Size  Location     Type
  7312 ;;  n               2    0[BANK0 ] short 
  7313 ;;  c               1    3[BANK0 ] unsigned char 
  7314 ;;  ok              1    2[BANK0 ] _Bool 
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  1    wreg      void 
  7317 ;; Registers used:
  7318 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7325 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7326 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7327 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7328 ;;Total ram usage:        5 bytes
  7329 ;; Hardware stack levels used: 1
  7330 ;; Hardware stack levels required when called: 2
  7331 ;; This function calls:
  7332 ;;		_first
  7333 ;;		_push
  7334 ;;		_size
  7335 ;;		_uart_getc
  7336 ;; This function is called by:
  7337 ;;		Interrupt level 1
  7338 ;; This function uses a non-reentrant model
  7339 ;;
  7340                           
  7341     0004                     _isr:
  7342                           
  7343                           ;incstack = 0
  7344     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  7345                           
  7346                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7347     0005  3180               	pagesel	$
  7348     0006                     i1l2690:
  7349                           
  7350                           ;main.c: 250:         char c = 0;
  7351     0006  0020               	movlb	0	; select bank0
  7352     0007  01A3               	clrf	isr@c
  7353     0008                     i1l2692:
  7354                           
  7355                           ;main.c: 253:         INTCONbits.GIE = 0;
  7356     0008  138B               	bcf	11,7	;volatile
  7357     0009                     i1l2694:
  7358                           
  7359                           ;main.c: 254:         PIE1bits.RCIE=0;
  7360     0009  0021               	movlb	1	; select bank1
  7361     000A  1291               	bcf	17,5	;volatile
  7362     000B                     i1l2696:
  7363                           
  7364                           ;main.c: 257:         _Bool ok = uart_getc(&c);
  7365     000B  3023               	movlw	(low (isr@c| 0))& (0+255)
  7366     000C  318E  265A  3180   	fcall	_uart_getc
  7367     000F  0020               	movlb	0	; select bank0
  7368     0010  00A2               	movwf	isr@ok
  7369     0011                     i1l2698:
  7370                           
  7371                           ;main.c: 258:         if (ok) {
  7372     0011  0822               	movf	isr@ok,w
  7373     0012  1903               	btfsc	3,2
  7374     0013  2815               	goto	u230_21
  7375     0014  2816               	goto	u230_20
  7376     0015                     u230_21:
  7377     0015  283B               	goto	i1l117
  7378     0016                     u230_20:
  7379     0016                     i1l2700:
  7380                           
  7381                           ;main.c: 260:             push(c);
  7382     0016  0823               	movf	isr@c,w
  7383     0017  3184  245D  3180   	fcall	_push
  7384     001A                     i1l2702:
  7385                           
  7386                           ;main.c: 263:             int16_t n = size();
  7387     001A  318E  26E4  3180   	fcall	_size
  7388     001D  0873               	movf	?_size+1,w
  7389     001E  0020               	movlb	0	; select bank0
  7390     001F  00A1               	movwf	isr@n+1
  7391     0020  0872               	movf	?_size,w
  7392     0021  00A0               	movwf	isr@n
  7393     0022                     i1l2704:
  7394                           
  7395                           ;main.c: 264:             if ( (first() == '$') && n > 1) {
  7396     0022  318D  2534  3180   	fcall	_first
  7397     0025  3A24               	xorlw	36
  7398     0026  1D03               	skipz
  7399     0027  2829               	goto	u231_21
  7400     0028  282A               	goto	u231_20
  7401     0029                     u231_21:
  7402     0029  283B               	goto	i1l117
  7403     002A                     u231_20:
  7404     002A                     i1l2706:
  7405     002A  0020               	movlb	0	; select bank0
  7406     002B  0821               	movf	isr@n+1,w
  7407     002C  3A80               	xorlw	128
  7408     002D  00FB               	movwf	??_isr
  7409     002E  3080               	movlw	128
  7410     002F  027B               	subwf	??_isr,w
  7411     0030  1D03               	skipz
  7412     0031  2834               	goto	u232_25
  7413     0032  3002               	movlw	2
  7414     0033  0220               	subwf	isr@n,w
  7415     0034                     u232_25:
  7416     0034  1C03               	skipc
  7417     0035  2837               	goto	u232_21
  7418     0036  2838               	goto	u232_20
  7419     0037                     u232_21:
  7420     0037  283B               	goto	i1l117
  7421     0038                     u232_20:
  7422     0038                     i1l2708:
  7423                           
  7424                           ;main.c: 266:                 cmd_active = 1;
  7425     0038  0021               	movlb	1	; select bank1
  7426     0039  01ED               	clrf	_cmd_active^(0+128)
  7427     003A  0AED               	incf	_cmd_active^(0+128),f
  7428     003B                     i1l117:	
  7429                           ;main.c: 268:         }
  7430                           
  7431                           
  7432                           ;main.c: 271:         PIE1bits.RCIE=1;
  7433     003B  0021               	movlb	1	; select bank1
  7434     003C  1691               	bsf	17,5	;volatile
  7435                           
  7436                           ;main.c: 272:         INTCONbits.GIE = 1;
  7437     003D  178B               	bsf	11,7	;volatile
  7438     003E                     i1l119:
  7439     003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7440     003F  0009               	retfie
  7441     0040                     __end_of_isr:
  7442                           
  7443                           	psect	text36
  7444     0E5A                     __ptext36:	
  7445 ;; *************** function _uart_getc *****************
  7446 ;; Defined at:
  7447 ;;		line 134 in file "uart.c"
  7448 ;; Parameters:    Size  Location     Type
  7449 ;;  c               1    wreg     PTR unsigned char 
  7450 ;;		 -> isr@c(1), 
  7451 ;; Auto vars:     Size  Location     Type
  7452 ;;  c               1    0[COMMON] PTR unsigned char 
  7453 ;;		 -> isr@c(1), 
  7454 ;;  er              1    0        unsigned char 
  7455 ;;  ok              1    1[COMMON] _Bool 
  7456 ;; Return value:  Size  Location     Type
  7457 ;;                  1    wreg      _Bool 
  7458 ;; Registers used:
  7459 ;;		wreg, fsr1l, fsr1h, status,2
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 0/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7466 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7468 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7469 ;;Total ram usage:        2 bytes
  7470 ;; Hardware stack levels used: 1
  7471 ;; This function calls:
  7472 ;;		Nothing
  7473 ;; This function is called by:
  7474 ;;		_isr
  7475 ;; This function uses a non-reentrant model
  7476 ;;
  7477                           
  7478     0E5A                     _uart_getc:	
  7479                           ;psect for function _uart_getc
  7480                           
  7481                           
  7482                           ;incstack = 0
  7483                           ; Regs used in _uart_getc: [wreg+fsr1l+fsr1h+status,2]
  7484                           ;uart_getc@c stored from wreg
  7485     0E5A  00F0               	movwf	uart_getc@c
  7486     0E5B                     i1l2502:
  7487                           
  7488                           ;uart.c: 134: _Bool uart_getc(char *c);uart.c: 135: {;uart.c: 137:     _Bool ok = 0;
  7489     0E5B  01F1               	clrf	uart_getc@ok
  7490     0E5C                     i1l2504:
  7491                           
  7492                           ;uart.c: 140:     if (RCSTAbits.FERR) {
  7493     0E5C  0023               	movlb	3	; select bank3
  7494     0E5D  1D1D               	btfss	29,2	;volatile
  7495     0E5E  2E60               	goto	u205_21
  7496     0E5F  2E61               	goto	u205_20
  7497     0E60                     u205_21:
  7498     0E60  2E63               	goto	i1l221
  7499     0E61                     u205_20:
  7500     0E61                     i1l2506:
  7501     0E61  0819               	movf	25,w	;volatile
  7502                           
  7503                           ;uart.c: 142:     }
  7504     0E62  2E78               	goto	i1l2514
  7505     0E63                     i1l221:	
  7506                           ;uart.c: 143:     else if (RCSTAbits.OERR) {
  7507                           
  7508     0E63  1C9D               	btfss	29,1	;volatile
  7509     0E64  2E66               	goto	u206_21
  7510     0E65  2E67               	goto	u206_20
  7511     0E66                     u206_21:
  7512     0E66  2E6A               	goto	i1l223
  7513     0E67                     u206_20:
  7514     0E67                     i1l2508:
  7515                           
  7516                           ;uart.c: 144:         RCSTAbits.CREN = 0;
  7517     0E67  121D               	bcf	29,4	;volatile
  7518                           
  7519                           ;uart.c: 145:         RCSTAbits.CREN = 1;
  7520     0E68  161D               	bsf	29,4	;volatile
  7521                           
  7522                           ;uart.c: 146:     }
  7523     0E69  2E78               	goto	i1l2514
  7524     0E6A                     i1l223:	
  7525                           ;uart.c: 147:     else {
  7526                           
  7527                           
  7528                           ;uart.c: 148:         if (PIR1bits.RCIF) {
  7529     0E6A  0020               	movlb	0	; select bank0
  7530     0E6B  1E91               	btfss	17,5	;volatile
  7531     0E6C  2E6E               	goto	u207_21
  7532     0E6D  2E6F               	goto	u207_20
  7533     0E6E                     u207_21:
  7534     0E6E  2E78               	goto	i1l2514
  7535     0E6F                     u207_20:
  7536     0E6F                     i1l2510:
  7537                           
  7538                           ;uart.c: 149:             *c = RCREG & 0x7f;
  7539     0E6F  0870               	movf	uart_getc@c,w
  7540     0E70  0086               	movwf	6
  7541     0E71  0187               	clrf	7
  7542     0E72  0023               	movlb	3	; select bank3
  7543     0E73  0819               	movf	25,w	;volatile
  7544     0E74  397F               	andlw	127
  7545     0E75  0081               	movwf	1
  7546     0E76                     i1l2512:
  7547                           
  7548                           ;uart.c: 150:             ok = 1;
  7549     0E76  01F1               	clrf	uart_getc@ok
  7550     0E77  0AF1               	incf	uart_getc@ok,f
  7551     0E78                     i1l2514:
  7552                           
  7553                           ;uart.c: 153:     return ok;
  7554     0E78  0871               	movf	uart_getc@ok,w
  7555     0E79                     i1l226:
  7556     0E79  0008               	return
  7557     0E7A                     __end_of_uart_getc:
  7558                           
  7559                           	psect	text37
  7560     0EE4                     __ptext37:	
  7561 ;; *************** function _size *****************
  7562 ;; Defined at:
  7563 ;;		line 80 in file "main.c"
  7564 ;; Parameters:    Size  Location     Type
  7565 ;;		None
  7566 ;; Auto vars:     Size  Location     Type
  7567 ;;  s               2    5[COMMON] short 
  7568 ;; Return value:  Size  Location     Type
  7569 ;;                  2    2[COMMON] short 
  7570 ;; Registers used:
  7571 ;;		wreg, status,2, status,0, pclath, cstack
  7572 ;; Tracked objects:
  7573 ;;		On entry : 0/0
  7574 ;;		On exit  : 0/0
  7575 ;;		Unchanged: 0/0
  7576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7577 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7578 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7579 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7580 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7581 ;;Total ram usage:        5 bytes
  7582 ;; Hardware stack levels used: 1
  7583 ;; Hardware stack levels required when called: 1
  7584 ;; This function calls:
  7585 ;;		_setCTS
  7586 ;;		i1_addone
  7587 ;; This function is called by:
  7588 ;;		_isr
  7589 ;; This function uses a non-reentrant model
  7590 ;;
  7591                           
  7592     0EE4                     _size:	
  7593                           ;psect for function _size
  7594                           
  7595     0EE4                     i1l2410:	
  7596                           ;incstack = 0
  7597                           ; Regs used in _size: [wreg+status,2+status,0+pclath+cstack]
  7598                           
  7599                           
  7600                           ;main.c: 82:     int16_t s = addone(tail) - head;
  7601     0EE4  0020               	movlb	0	; select bank0
  7602     0EE5  0868               	movf	_tail+1,w
  7603     0EE6  00F1               	movwf	i1addone@i+1
  7604     0EE7  0867               	movf	_tail,w
  7605     0EE8  00F0               	movwf	i1addone@i
  7606     0EE9  318D  255D  318E   	fcall	i1_addone
  7607     0EEC  087C               	movf	_head,w
  7608     0EED  0270               	subwf	?i1_addone,w
  7609     0EEE  00F5               	movwf	size@s
  7610     0EEF  087D               	movf	_head+1,w
  7611     0EF0  3B71               	subwfb	?i1_addone+1,w
  7612     0EF1  00F6               	movwf	size@s+1
  7613     0EF2                     i1l2412:
  7614                           
  7615                           ;main.c: 83:     if (s > 1024 -16) {
  7616     0EF2  0876               	movf	size@s+1,w
  7617     0EF3  3A80               	xorlw	128
  7618     0EF4  00F4               	movwf	??_size
  7619     0EF5  3083               	movlw	131
  7620     0EF6  0274               	subwf	??_size,w
  7621     0EF7  1D03               	skipz
  7622     0EF8  2EFB               	goto	u202_25
  7623     0EF9  30F1               	movlw	241
  7624     0EFA  0275               	subwf	size@s,w
  7625     0EFB                     u202_25:
  7626     0EFB  1C03               	skipc
  7627     0EFC  2EFE               	goto	u202_21
  7628     0EFD  2EFF               	goto	u202_20
  7629     0EFE                     u202_21:
  7630     0EFE  2F04               	goto	i1l2416
  7631     0EFF                     u202_20:
  7632     0EFF                     i1l2414:
  7633                           
  7634                           ;main.c: 84:         setCTS(1);
  7635     0EFF  3001               	movlw	1
  7636     0F00  3187  27F6  318E   	fcall	_setCTS
  7637                           
  7638                           ;main.c: 85:     }
  7639     0F03  2F08               	goto	i1l2418
  7640     0F04                     i1l2416:
  7641                           
  7642                           ;main.c: 87:         setCTS(0);
  7643     0F04  3000               	movlw	0
  7644     0F05  3187  27F6  318E   	fcall	_setCTS
  7645     0F08                     i1l2418:
  7646                           
  7647                           ;main.c: 89:     return s;
  7648     0F08  0876               	movf	size@s+1,w
  7649     0F09  00F3               	movwf	?_size+1
  7650     0F0A  0875               	movf	size@s,w
  7651     0F0B  00F2               	movwf	?_size
  7652     0F0C                     i1l83:
  7653     0F0C  0008               	return
  7654     0F0D                     __end_of_size:
  7655                           
  7656                           	psect	text38
  7657     045D                     __ptext38:	
  7658 ;; *************** function _push *****************
  7659 ;; Defined at:
  7660 ;;		line 110 in file "main.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;  c               1    wreg     unsigned char 
  7663 ;; Auto vars:     Size  Location     Type
  7664 ;;  c               1   10[COMMON] unsigned char 
  7665 ;;  s               2    6[COMMON] short 
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  1    wreg      void 
  7668 ;; Registers used:
  7669 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/0
  7672 ;;		On exit  : 0/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7676 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7677 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7678 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7679 ;;Total ram usage:        9 bytes
  7680 ;; Hardware stack levels used: 1
  7681 ;; Hardware stack levels required when called: 1
  7682 ;; This function calls:
  7683 ;;		_setCTS
  7684 ;;		i1_addone
  7685 ;; This function is called by:
  7686 ;;		_isr
  7687 ;; This function uses a non-reentrant model
  7688 ;;
  7689                           
  7690     045D                     _push:	
  7691                           ;psect for function _push
  7692                           
  7693                           
  7694                           ;incstack = 0
  7695                           ; Regs used in _push: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7696                           ;push@c stored from wreg
  7697     045D  00FA               	movwf	push@c
  7698     045E                     i1l2422:
  7699                           
  7700                           ;main.c: 110: void push(char c);main.c: 111: {;main.c: 113:     int16_t s = addone(tail)
      +                           - head;
  7701     045E  0020               	movlb	0	; select bank0
  7702     045F  0868               	movf	_tail+1,w
  7703     0460  00F1               	movwf	i1addone@i+1
  7704     0461  0867               	movf	_tail,w
  7705     0462  00F0               	movwf	i1addone@i
  7706     0463  318D  255D  3184   	fcall	i1_addone
  7707     0466  087C               	movf	_head,w
  7708     0467  0270               	subwf	?i1_addone,w
  7709     0468  00F6               	movwf	push@s
  7710     0469  087D               	movf	_head+1,w
  7711     046A  3B71               	subwfb	?i1_addone+1,w
  7712     046B  00F7               	movwf	push@s+1
  7713     046C                     i1l2424:
  7714                           
  7715                           ;main.c: 114:     if (s > 1024 -16) {
  7716     046C  0877               	movf	push@s+1,w
  7717     046D  3A80               	xorlw	128
  7718     046E  00F2               	movwf	??_push
  7719     046F  3083               	movlw	131
  7720     0470  0272               	subwf	??_push,w
  7721     0471  1D03               	skipz
  7722     0472  2C75               	goto	u203_25
  7723     0473  30F1               	movlw	241
  7724     0474  0276               	subwf	push@s,w
  7725     0475                     u203_25:
  7726     0475  1C03               	skipc
  7727     0476  2C78               	goto	u203_21
  7728     0477  2C79               	goto	u203_20
  7729     0478                     u203_21:
  7730     0478  2C7E               	goto	i1l2428
  7731     0479                     u203_20:
  7732     0479                     i1l2426:
  7733                           
  7734                           ;main.c: 115:         setCTS(1);
  7735     0479  3001               	movlw	1
  7736     047A  3187  27F6  3184   	fcall	_setCTS
  7737                           
  7738                           ;main.c: 116:     }
  7739     047D  2C82               	goto	i1l91
  7740     047E                     i1l2428:
  7741                           
  7742                           ;main.c: 118:         setCTS(0);
  7743     047E  3000               	movlw	0
  7744     047F  3187  27F6  3184   	fcall	_setCTS
  7745     0482                     i1l91:	
  7746                           ;main.c: 119:     }
  7747                           
  7748                           
  7749                           ;main.c: 121:     if ( addone(addone(tail)) == head) {
  7750     0482  0020               	movlb	0	; select bank0
  7751     0483  0868               	movf	_tail+1,w
  7752     0484  00F1               	movwf	i1addone@i+1
  7753     0485  0867               	movf	_tail,w
  7754     0486  00F0               	movwf	i1addone@i
  7755     0487  318D  255D  3184   	fcall	i1_addone
  7756     048A  0871               	movf	?i1_addone+1,w
  7757     048B  00F9               	movwf	_push$1524+1
  7758     048C  0870               	movf	?i1_addone,w
  7759     048D  00F8               	movwf	_push$1524
  7760                           
  7761                           ;main.c: 121:     if ( addone(addone(tail)) == head) {
  7762     048E  0879               	movf	_push$1524+1,w
  7763     048F  00F1               	movwf	i1addone@i+1
  7764     0490  0878               	movf	_push$1524,w
  7765     0491  00F0               	movwf	i1addone@i
  7766     0492  318D  255D  3184   	fcall	i1_addone
  7767     0495  087D               	movf	_head+1,w
  7768     0496  0671               	xorwf	?i1_addone+1,w
  7769     0497  1D03               	skipz
  7770     0498  2C9B               	goto	u204_25
  7771     0499  087C               	movf	_head,w
  7772     049A  0670               	xorwf	?i1_addone,w
  7773     049B                     u204_25:
  7774     049B  1D03               	skipz
  7775     049C  2C9E               	goto	u204_21
  7776     049D  2C9F               	goto	u204_20
  7777     049E                     u204_21:
  7778     049E  2CAD               	goto	i1l2438
  7779     049F                     u204_20:
  7780     049F                     i1l2430:
  7781                           
  7782                           ;main.c: 123:         PORTEbits.RE2 = 1;
  7783     049F  0020               	movlb	0	; select bank0
  7784     04A0  1510               	bsf	16,2	;volatile
  7785     04A1                     i1l2432:
  7786                           
  7787                           ;main.c: 124:         _delay((unsigned long)((2000)*(20000000/4000.0)));
  7788     04A1  3033               	movlw	51
  7789     04A2  00F3               	movwf	??_push+1
  7790     04A3  30BB               	movlw	187
  7791     04A4  00F2               	movwf	??_push
  7792     04A5  30E0               	movlw	224
  7793     04A6                     u354_27:
  7794     04A6  0B89               	decfsz	9,f
  7795     04A7  2CA6               	goto	u354_27
  7796     04A8  0BF2               	decfsz	??_push,f
  7797     04A9  2CA6               	goto	u354_27
  7798     04AA  0BF3               	decfsz	??_push+1,f
  7799     04AB  2CA6               	goto	u354_27
  7800     04AC  2CCF               	goto	i1l93
  7801     04AD                     i1l2438:
  7802                           
  7803                           ;main.c: 128:         tail = addone(tail);
  7804     04AD  0020               	movlb	0	; select bank0
  7805     04AE  0868               	movf	_tail+1,w
  7806     04AF  00F1               	movwf	i1addone@i+1
  7807     04B0  0867               	movf	_tail,w
  7808     04B1  00F0               	movwf	i1addone@i
  7809     04B2  318D  255D  3184   	fcall	i1_addone
  7810     04B5  0871               	movf	?i1_addone+1,w
  7811     04B6  0020               	movlb	0	; select bank0
  7812     04B7  00E8               	movwf	_tail+1
  7813     04B8  0870               	movf	?i1_addone,w
  7814     04B9  00E7               	movwf	_tail
  7815     04BA                     i1l2440:
  7816                           
  7817                           ;main.c: 129:         queue[tail] = c;
  7818     04BA  30F0               	movlw	240
  7819     04BB  00F2               	movwf	??_push
  7820     04BC  3023               	movlw	35
  7821     04BD  00F3               	movwf	??_push+1
  7822     04BE  0867               	movf	_tail,w
  7823     04BF  0772               	addwf	??_push,w
  7824     04C0  00F4               	movwf	??_push+2
  7825     04C1  0868               	movf	_tail+1,w
  7826     04C2  3D73               	addwfc	??_push+1,w
  7827     04C3  00F5               	movwf	??_push+3
  7828     04C4  0874               	movf	??_push+2,w
  7829     04C5  0086               	movwf	6
  7830     04C6  0875               	movf	??_push+3,w
  7831     04C7  0087               	movwf	7
  7832     04C8  087A               	movf	push@c,w
  7833     04C9  0081               	movwf	1
  7834     04CA                     i1l2442:
  7835                           
  7836                           ;main.c: 130:         bytes_pushed++;
  7837     04CA  3001               	movlw	1
  7838     04CB  0021               	movlb	1	; select bank1
  7839     04CC  07EB               	addwf	_bytes_pushed^(0+128),f
  7840     04CD  3000               	movlw	0
  7841     04CE  3DEC               	addwfc	(_bytes_pushed+1)^(0+128),f
  7842     04CF                     i1l93:
  7843     04CF  0008               	return
  7844     04D0                     __end_of_push:
  7845                           
  7846                           	psect	text39
  7847     0D5D                     __ptext39:	
  7848 ;; *************** function i1_addone *****************
  7849 ;; Defined at:
  7850 ;;		line 70 in file "main.c"
  7851 ;; Parameters:    Size  Location     Type
  7852 ;;  i               2    0[COMMON] short 
  7853 ;; Auto vars:     Size  Location     Type
  7854 ;;		None
  7855 ;; Return value:  Size  Location     Type
  7856 ;;                  2    0[COMMON] short 
  7857 ;; Registers used:
  7858 ;;		wreg, status,2, status,0
  7859 ;; Tracked objects:
  7860 ;;		On entry : 0/0
  7861 ;;		On exit  : 0/0
  7862 ;;		Unchanged: 0/0
  7863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7864 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7867 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7868 ;;Total ram usage:        2 bytes
  7869 ;; Hardware stack levels used: 1
  7870 ;; This function calls:
  7871 ;;		Nothing
  7872 ;; This function is called by:
  7873 ;;		_size
  7874 ;;		_push
  7875 ;; This function uses a non-reentrant model
  7876 ;;
  7877                           
  7878     0D5D                     i1_addone:	
  7879                           ;psect for function i1_addone
  7880                           
  7881     0D5D                     i1l2392:	
  7882                           ;incstack = 0
  7883                           ; Regs used in i1_addone: [wreg+status,2+status,0]
  7884                           
  7885                           
  7886                           ;main.c: 70: int16_t addone(int16_t i);main.c: 71: {;main.c: 72:     if (i == 1024 -1)
  7887     0D5D  0A70               	incf	i1addone@i,w
  7888     0D5E  3003               	movlw	3
  7889     0D5F  1903               	skipnz
  7890     0D60  0671               	xorwf	i1addone@i+1,w
  7891     0D61  1D03               	btfss	3,2
  7892     0D62  2D64               	goto	u201_21
  7893     0D63  2D65               	goto	u201_20
  7894     0D64                     u201_21:
  7895     0D64  2D68               	goto	i1l2398
  7896     0D65                     u201_20:
  7897     0D65                     i1l2394:
  7898                           
  7899                           ;main.c: 73:         return 0;
  7900     0D65  01F0               	clrf	?i1_addone
  7901     0D66  01F1               	clrf	?i1_addone+1
  7902     0D67  2D6E               	goto	i1l78
  7903     0D68                     i1l2398:
  7904                           
  7905                           ;main.c: 74:     return i+1;
  7906     0D68  0870               	movf	i1addone@i,w
  7907     0D69  3E01               	addlw	1
  7908     0D6A  00F0               	movwf	?i1_addone
  7909     0D6B  3000               	movlw	0
  7910     0D6C  3D71               	addwfc	i1addone@i+1,w
  7911     0D6D  00F1               	movwf	?i1_addone+1
  7912     0D6E                     i1l78:
  7913     0D6E  0008               	return
  7914     0D6F                     __end_ofi1_addone:
  7915                           
  7916                           	psect	text40
  7917     07F6                     __ptext40:	
  7918 ;; *************** function _setCTS *****************
  7919 ;; Defined at:
  7920 ;;		line 51 in file "main.c"
  7921 ;; Parameters:    Size  Location     Type
  7922 ;;  b               1    wreg     _Bool 
  7923 ;; Auto vars:     Size  Location     Type
  7924 ;;  b               1    0[COMMON] _Bool 
  7925 ;; Return value:  Size  Location     Type
  7926 ;;                  1    wreg      void 
  7927 ;; Registers used:
  7928 ;;		wreg, status,0
  7929 ;; Tracked objects:
  7930 ;;		On entry : 0/0
  7931 ;;		On exit  : 0/0
  7932 ;;		Unchanged: 0/0
  7933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7935 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7937 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7938 ;;Total ram usage:        1 bytes
  7939 ;; Hardware stack levels used: 1
  7940 ;; This function calls:
  7941 ;;		Nothing
  7942 ;; This function is called by:
  7943 ;;		_size
  7944 ;;		_push
  7945 ;; This function uses a non-reentrant model
  7946 ;;
  7947                           
  7948     07F6                     _setCTS:	
  7949                           ;psect for function _setCTS
  7950                           
  7951                           
  7952                           ;incstack = 0
  7953                           ; Regs used in _setCTS: [wreg+status,0]
  7954                           ;setCTS@b stored from wreg
  7955     07F6  00F0               	movwf	setCTS@b
  7956     07F7                     i1l2208:
  7957                           
  7958                           ;main.c: 51: void setCTS(_Bool b);main.c: 52: {;main.c: 53:     PORTAbits.RA2 = b;
  7959     07F7  0C70               	rrf	setCTS@b,w
  7960     07F8  0020               	movlb	0	; select bank0
  7961     07F9  1C03               	skipc
  7962     07FA  110C               	bcf	12,2	;volatile
  7963     07FB  1803               	skipnc
  7964     07FC  150C               	bsf	12,2	;volatile
  7965     07FD                     i1l71:
  7966     07FD  0008               	return
  7967     07FE                     __end_of_setCTS:
  7968                           
  7969                           	psect	text41
  7970     0D34                     __ptext41:	
  7971 ;; *************** function _first *****************
  7972 ;; Defined at:
  7973 ;;		line 171 in file "main.c"
  7974 ;; Parameters:    Size  Location     Type
  7975 ;;		None
  7976 ;; Auto vars:     Size  Location     Type
  7977 ;;		None
  7978 ;; Return value:  Size  Location     Type
  7979 ;;                  1    wreg      unsigned char 
  7980 ;; Registers used:
  7981 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7982 ;; Tracked objects:
  7983 ;;		On entry : 0/0
  7984 ;;		On exit  : 0/0
  7985 ;;		Unchanged: 0/0
  7986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7989 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7990 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7991 ;;Total ram usage:        2 bytes
  7992 ;; Hardware stack levels used: 1
  7993 ;; This function calls:
  7994 ;;		Nothing
  7995 ;; This function is called by:
  7996 ;;		_isr
  7997 ;; This function uses a non-reentrant model
  7998 ;;
  7999                           
  8000     0D34                     _first:	
  8001                           ;psect for function _first
  8002                           
  8003     0D34                     i1l2444:	
  8004                           ;incstack = 0
  8005                           ; Regs used in _first: [wreg+fsr1l+fsr1h+status,2+status,0]
  8006                           
  8007                           
  8008                           ;main.c: 173:     return queue[head];
  8009     0D34  30F0               	movlw	240
  8010     0D35  00F0               	movwf	??_first
  8011     0D36  3023               	movlw	35
  8012     0D37  00F1               	movwf	??_first+1
  8013     0D38  087C               	movf	_head,w
  8014     0D39  0770               	addwf	??_first,w
  8015     0D3A  0086               	movwf	6
  8016     0D3B  087D               	movf	_head+1,w
  8017     0D3C  3D71               	addwfc	??_first+1,w
  8018     0D3D  0087               	movwf	7
  8019     0D3E  0801               	movf	1,w
  8020     0D3F                     i1l102:
  8021     0D3F  0008               	return
  8022     0D40                     __end_of_first:
  8023     007E                     btemp	set	126	;btemp
  8024     007E                     int$flags	set	126
  8025     007E                     wtemp0	set	126
  8026     23F0                     
  8027                           	psect	config
  8028                           
  8029                           ;Config register CONFIG1 @ 0x8007
  8030                           ;	Oscillator Selection
  8031                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  8032                           ;	Watchdog Timer Enable
  8033                           ;	WDTE = OFF, WDT disabled
  8034                           ;	Power-up Timer Enable
  8035                           ;	PWRTE = OFF, PWRT disabled
  8036                           ;	MCLR Pin Function Select
  8037                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  8038                           ;	Flash Program Memory Code Protection
  8039                           ;	CP = OFF, Program memory code protection is disabled
  8040                           ;	Data Memory Code Protection
  8041                           ;	CPD = OFF, Data memory code protection is disabled
  8042                           ;	Brown-out Reset Enable
  8043                           ;	BOREN = OFF, Brown-out Reset disabled
  8044                           ;	Clock Out Enable
  8045                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  8046                           ;	Internal/External Switchover
  8047                           ;	IESO = ON, Internal/External Switchover mode is enabled
  8048                           ;	Fail-Safe Clock Monitor Enable
  8049                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  8050     8007                     	org	32775
  8051     8007  39E2               	dw	14818
  8052                           
  8053                           ;Config register CONFIG2 @ 0x8008
  8054                           ;	Flash Memory Self-Write Protection
  8055                           ;	WRT = OFF, Write protection off
  8056                           ;	Voltage Regulator Capacitor Enable bit
  8057                           ;	VCAPEN = OFF, Vcap functionality is disabled on RA6.
  8058                           ;	PLL Enable
  8059                           ;	PLLEN = OFF, 4x PLL disabled
  8060                           ;	Stack Overflow/Underflow Reset Enable
  8061                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  8062                           ;	Brown-out Reset Voltage Selection
  8063                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  8064                           ;	Low Power Brown-Out Reset Enable Bit
  8065                           ;	LPBOR = OFF, Low power brown-out is disabled
  8066                           ;	In-Circuit Debugger Mode
  8067                           ;	DEBUG = OFF, In-Circuit Debugger disabled, ICSPCLK and ICSPDAT are general purpose I/O
      +                           pins
  8068                           ;	Low-Voltage Programming Enable
  8069                           ;	LVP = ON, Low-voltage programming enabled
  8070     8008                     	org	32776
  8071     8008  3EFF               	dw	16127

Data Sizes:
    Strings     146
    Constant    0
    Data        2
    BSS         45
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     69      73
    BANK1            80     69      78
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    do_blank@s	PTR unsigned char  size(2) Largest target is 21
		 -> STR_2(CODE[15]), STR_6(CODE[21]), 

    do_read@s	PTR unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[14]), 

    do_write@s	PTR unsigned char  size(2) Largest target is 15
		 -> STR_10(CODE[15]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    memset@dest	PTR void  size(2) Largest target is 1024
		 -> queue(BIGRAM[1024]), 

    memset@p	PTR unsigned char  size(2) Largest target is 1024
		 -> queue(BIGRAM[1024]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1153$buffer	PTR unsigned char  size(2) Largest target is 0

    S1153$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 1024
		 -> queue(BIGRAM[1024]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[4]), STR_11(CODE[18]), STR_4(CODE[10]), STR_5(CODE[8]), 
		 -> STR_8(CODE[7]), STR_9(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 48
		 -> do_blank@ads(BANK1[32]), do_init@s(BANK1[8]), do_read@ads(BANK1[16]), do_write@ads(BANK1[48]), 

    uart_getc@c	PTR unsigned char  size(1) Largest target is 1
		 -> isr@c(BANK0[1]), 

    uart_puts@p	PTR unsigned char  size(2) Largest target is 48
		 -> do_blank@ads(BANK1[32]), do_init@s(BANK1[8]), do_read@ads(BANK1[16]), do_write@ads(BANK1[48]), 
		 -> STR_10(CODE[15]), STR_2(CODE[15]), STR_3(CODE[29]), STR_6(CODE[21]), 
		 -> STR_7(CODE[14]), 

    uart_puts@s	PTR unsigned char  size(2) Largest target is 48
		 -> do_blank@ads(BANK1[32]), do_init@s(BANK1[8]), do_read@ads(BANK1[16]), do_write@ads(BANK1[48]), 
		 -> STR_10(CODE[15]), STR_2(CODE[15]), STR_3(CODE[29]), STR_6(CODE[21]), 
		 -> STR_7(CODE[14]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[4]), STR_11(CODE[18]), STR_4(CODE[10]), STR_5(CODE[8]), 
		 -> STR_8(CODE[7]), STR_9(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[4]), STR_11(CODE[18]), STR_4(CODE[10]), STR_5(CODE[8]), 
		 -> STR_8(CODE[7]), STR_9(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[4]), STR_11(CODE[18]), STR_4(CODE[10]), STR_5(CODE[8]), 
		 -> STR_8(CODE[7]), STR_9(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_push
    _size->i1_addone
    _push->i1_addone

Critical Paths under _main in BANK0

    _main->_do_blank
    _main->_do_read
    _uart_init->___lldiv
    ___lldiv->___lmul
    _do_write->_sprintf
    _pop->_addone
    _empty->_addone
    _do_read->_sprintf
    _do_init->_sprintf
    _do_blank->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _xtoa->_pad
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _clear->_memset

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_do_write
    _do_write->_sprintf
    _do_read->_sprintf
    _do_init->_sprintf
    _do_blank->_sprintf

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _isr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   60448
                                             66 BANK0      3     3      0
                              _clear
                           _do_blank
                            _do_init
                            _do_read
                           _do_write
                                _pop
                         _ports_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                           13     9      4    1000
                                             30 BANK0     13     9      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     316
                                              4 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                             16 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ports_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _do_write                                            57    57      0   15529
                                             64 BANK0      1     1      0
                                             13 BANK1     56    56      0
                     _charToHexDigit
                                _pop
                      _setup_address
                            _sprintf
                          _uart_puts
                         _write_port
 ---------------------------------------------------------------------------------
 (2) _write_port                                           3     3      0      31
                                              4 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _pop                                                  3     3      0    1102
                                              6 BANK0      3     3      0
                             _addone
                              _empty
 ---------------------------------------------------------------------------------
 (2) _empty                                                0     0      0     517
                             _addone
 ---------------------------------------------------------------------------------
 (3) _addone                                               2     0      2     517
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _charToHexDigit                                       1     1      0     155
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _do_read                                             24    24      0   14334
                                             64 BANK0      2     2      0
                                             13 BANK1     22    22      0
                          _read_port
                      _setup_address
                            _sprintf
                          _uart_putc
                          _uart_puts
 ---------------------------------------------------------------------------------
 (2) _uart_putc                                            1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _do_init                                             10    10      0   13646
                                             13 BANK1     10    10      0
                            _sprintf
                      _uart_init_brg
                          _uart_puts
 ---------------------------------------------------------------------------------
 (2) _uart_init_brg                                       10     8      2      40
                                              4 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _do_blank                                            40    40      0   14334
                                             64 BANK0      2     2      0
                                             13 BANK1     38    38      0
                          _read_port
                      _setup_address
                            _sprintf
                          _uart_puts
 ---------------------------------------------------------------------------------
 (2) _uart_puts                                            5     3      2    1089
                                              4 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    16      4   12403
                                             59 BANK0      5     1      4
                                              0 BANK1     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     4      3   11329
                                             52 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           15    13      2   10889
                                             38 BANK0     14    12      2
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                10     8      2    3354
                                             26 BANK0     10     8      2
                                _pad
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   9     7      2     702
                                             10 BANK0      9     7      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     316
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                12    10      2    4939
                                             26 BANK0     12    10      2
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  7     4      3    2795
                                             19 BANK0      7     4      3
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     6      1    1249
                                             12 BANK0      7     6      1
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     857
                                              4 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             11 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     613
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     625
                                              4 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _setup_address                                        3     1      2     366
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _read_port                                            1     1      0      34
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _clear                                                0     0      0     407
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     407
                                              4 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _isr                                                 5     5      0     678
                                             11 COMMON     1     1      0
                                              0 BANK0      4     4      0
                              _first
                               _push
                               _size
                          _uart_getc
 ---------------------------------------------------------------------------------
 (11) _uart_getc                                           3     3      0      80
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _size                                                5     3      2     241
                                              2 COMMON     5     3      2
                             _setCTS
                           i1_addone
 ---------------------------------------------------------------------------------
 (11) _push                                                9     9      0     264
                                              2 COMMON     9     9      0
                             _setCTS
                           i1_addone
 ---------------------------------------------------------------------------------
 (12) i1_addone                                            2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) _setCTS                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _first                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clear
     _memset
   _do_blank
     _read_port
     _setup_address
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
           _xtoa
             _pad
     _uart_puts
   _do_init
     _sprintf
     _uart_init_brg
     _uart_puts
   _do_read
     _read_port
     _setup_address
     _sprintf
     _uart_putc
     _uart_puts
   _do_write
     _charToHexDigit
     _pop
       _addone
       _empty
         _addone
     _setup_address
     _sprintf
     _uart_puts
     _write_port
   _pop
   _ports_init
   _uart_init
     ___lldiv
       ___lmul (ARG)
     ___lmul

 _isr (ROOT)
   _first
   _push
     _setCTS
     i1_addone
   _size
     _setCTS
     i1_addone
   _uart_getc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     45      49       5       91.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     45      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      C5      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      C5      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Feb 20 09:59:22 2025

                        l74 0E01                          l78 0DA6                          l87 0DE8  
                        l98 07F5                ___awdiv@sign 002A         ___wmul@multiplicand 0026  
                       l112 0F35                         l122 0D93                         l106 0DD1  
                       l210 02CE                         l202 0246                         l132 03D8  
                       l140 0358                         l204 0252                         l125 0D5C  
                       l205 0267                         l134 03E5                         l214 0775  
                       l230 0DAA                         l142 035A                         l206 025B  
                       l128 0EE3                         l232 0DB5                         l152 052C  
                       l233 0DB4                         l218 07B6                         l154 053F  
                       l243 0F50                         l235 0DBA                         l411 0FC0  
                       l244 0F4F                         l148 0F8C                         l229 0DAB  
                       l238 0F38                         l247 0F5F                         l239 0F37  
                       l433 06C2                         l550 0667                         l563 0716  
                       l397 0E85                         l399 0E99                         l907 0221  
                       l942 0170                         l934 009E                         l927 0607  
                       l919 045C                         l936 00A8                         l961 0D80  
                       l954 0E1D                         l866 0E59                         l859 0E3A  
                       l891 0FFF                         l973 0768                         l981 0EBE  
                       l886 0FD4                         l894 019D                         l984 0003  
                       l889 0FF4                         l898 019B             ??_uart_init_brg 0026  
                       _abs 0D6F                         _pad 0FC1                         _isr 0004  
                       _pop 07B7                ___awmod@sign 002A                         wreg 0009  
               do_write@ads 00AD                        ?_abs 002B                        l3010 008D  
                      l3002 0DA0                        l3020 00AB                        l3012 0096  
                      l3100 07BA                        l3030 00D4                        l3022 00BB  
                      l3014 009B                        l3006 0074                        l3102 07BA  
                      l3040 0102                        l3032 00DA                        l3024 00C0  
                      l3016 009F                        l3008 0085                        l3200 0E50  
                      l3120 07F2                        l3104 07C2                        l3112 07D3  
                      l3050 012E                        l3042 010F                        l3034 00E2  
                      l3026 00CE                        l3210 0F49                        l3122 07F3  
                      l3114 07E0                        l3106 07C4                        l3052 013C  
                      l3060 014E                        l3036 00EC                        l3028 00D2  
                      l3212 0F55                        l3204 0F36                        l3116 07EC  
                      l3220 0F6E                        l3300 0F20                        l3150 0D87  
                      l3046 0118                        l3038 00F6                        l3206 0F3D  
                      l3214 0DA9                        l3142 0DCF                        l3134 0DC6  
                      l3126 0DBD                        l3070 0DD2                        l3118 07F1  
                      l3230 0F87                        l3222 0F70                        l3310 0F25  
                      l3302 0F21                        l3160 0D54                        l3152 0D8A  
                      l3048 0122                        l3064 0158                        l3080 0E04  
                      l3208 0F42                        l3216 0DB0                        l3400 02EC  
                      l3136 0DCC                        l3128 0DC3                        l3072 0DE5  
                      l3232 0F89                        l3224 0F73                        l3320 0F2B  
                      l3312 0F26                        l3304 0F22                        l3240 0FA2  
                      l3090 0E1E                        l3162 0D55                        l3154 0D4C  
                      l3146 0D81                        l3058 0145                        l3082 0E09  
                      l3170 076B                        l3410 0319                        l3402 02F6  
                      l3226 0F82                        l3218 0F62                        l3330 0F33  
                      l3322 0F2E                        l3314 0F27                        l3306 0F23  
                      l3250 0679                        l3242 0FA9                        l3234 0F8D  
                      l3092 0E24                        l3156 0D4F                        l3148 0D85  
                      l3084 0E11                        l3340 035B                        l3180 0792  
                      l3172 076D                        l3420 0344                        l3412 0333  
                      l3404 02FB                        l3076 0DE7                        l3228 0F84  
                      l3332 0F34                        l3324 0F2F                        l3316 0F29  
                      l3308 0F24                        l3260 06A4                        l3252 067C  
                      l3244 0FB8                        l3236 0F96                        l3500 02CA  
                      l3094 0E2A                        l3158 0D52                        l3086 0E1B  
                      l3350 036A                        l3342 0362                        l3182 0797  
                      l3174 0772                        l3166 0769                        l3334 0EBF  
                      l3422 034A                        l3414 033A                        l3406 0300  
                      l3430 04D4                        l3326 0F30                        l3318 0F2A  
                      l3262 06AC                        l3254 0687                        l3238 0F9A  
                      l3502 02CC                        l3510 0552                        l3096 0E2E  
                      l3272 0DE9                        l2800 061E                        l3192 0E3D  
                      l3360 0388                        l3352 036E                        l3176 0776  
                      l3184 0799                        l3168 0769                        l3336 0ECA  
                      l3424 034F                        l3416 033B                        l3408 0311  
                      l3440 04DE                        l3432 04D5                        l3328 0F31  
                      l3280 0F0D                        l3264 06AD                        l3256 068B  
                      l3248 0668                        l3504 02CD                        l3520 0565  
                      l3512 0554                        l3274 0DF8                        l2810 0632  
                      l2802 0622                        l3194 0E41                        l3370 03C8  
                      l3362 038D                        l3186 07AE                        l3178 0783  
                      l3338 0EDB                        l3418 0340                        l3098 07B7  
                      l3450 04F8                        l3442 04E2                        l3426 04D0  
                      l3290 0F18                        l3282 0F0F                        l3266 06B4  
                      l3258 0692                        l3530 057F                        l3522 056B  
                      l3514 0555                        l3506 0540                        l3276 0DFA  
                      l2820 064E                        l2812 0636                        l2804 0624  
                      l2900 0189                        l3196 0E43                        l3364 0395  
                      l3372 03CB                        l3356 0379                        l3348 0365  
                      l3188 07AF                        l3380 02CF                        l3460 0523  
                      l3452 0503                        l3428 04D2                        l3292 0F19  
                      l3284 0F14                        l3268 06BA                        l3540 0596  
                      l3532 0582                        l3524 056F                        l3516 055B  
                      l3508 054F                        l3278 0DFF                        l2822 0653  
                      l2814 063A                        l2806 062A                        l2750 0717  
                      l2910 01A4                        l2902 018D                        l3198 0E45  
                      l3374 03DA                        l3366 03A6                        l3358 0383  
                      l3382 02D1                        l3462 052F                        l3454 050F  
                      l3446 04ED                        l3438 04D9                        l3294 0F1A  
                      l3286 0F16                        l3470 0239                        l3542 0597  
                      l3526 0575                        l3518 055D                        l3534 0585  
                      l2816 0649                        l2808 062D                        l2824 0659  
                      l2840 06D0                        l2832 06C3                        l2760 074F  
                      l2752 071D                        l2912 01A8                        l2920 01D9  
                      l2904 0192                        l3376 03E0                        l3368 03C0  
                      l3392 02D8                        l3384 02D3                        l3464 0537  
                      l3456 0519                        l3448 04F2                        l3296 0F1B  
                      l3288 0F17                        l3480 0256                        l3472 023E  
                      l3544 0598                        l3536 0587                        l3528 0579  
                      l2826 065E                        l2818 064D                        l2850 06E7  
                      l2842 06D4                        l2834 06C5                        l2762 075F  
                      l2754 0722                        l2770 0EAB                        l2922 01E7  
                      l2930 0205                        l2914 01C4                        l2906 0197  
                      l3394 02DD                        l3386 02D4                        l3458 051E  
                      l3298 0F1F                        l3490 026C                        l3474 0242  
                      l3466 0222                        l3538 0594                        l2828 0663  
                      l2860 0702                        l2852 06EB                        l2844 06D9  
                      l2836 06C9                        l2756 0727                        l2772 0EB0  
                      l2932 020B                        l2924 01EE                        l2916 01C5  
                      l2908 01A1                        l2780 0E8A                        l2940 03E8  
                      l3396 02E1                        l3492 026F                        l3484 025F  
                      l3476 024A                        l3468 0230                        l2790 060A  
                      l2854 06EF                        l2846 06DF                        l2862 0708  
                      l2838 06CE                        l2758 0731                        l2766 0E9C  
                      l2870 0FC3                        l2934 020F                        l2926 01F3  
                      l2918 01C9                        l2782 0E8F                        l2774 0E7A  
                      l2950 0400                        l2942 03EA                        l3494 02A9  
                      l3486 0263                        l3478 024E                        ?_pad 0033  
                      l2792 060E                        l2864 070D                        l2856 06F9  
                      l2848 06E2                        l2768 0E9F                        l2880 0FE1  
                      l2872 0FC7                        l2936 0216                        l2928 0200  
                      l2784 0E95                        l2776 0E7D                        l2960 0417  
                      l2952 0406                        l2944 03F6                        l3496 02BB  
                      l3488 0267                        l2794 0613                        l2866 0712  
                      l2858 06FD                        l2890 0D75                        l2882 0FE6  
                      l2874 0FCD                        l2778 0E81                        l2970 043E  
                      l2962 041B                        l2954 040B                        l2946 03F9  
                      l3498 02C9                        l2796 0615                        l2788 0608  
                      l2884 0FF9                        l2876 0FD2                        l2980 05AC  
                      l2972 044B                        l2956 040F                        l2948 03FD  
                      l2964 0424                        l2798 0619                        l2886 0D6F  
                      l2878 0FD7                        l2894 0173                        l2982 05BD  
                      l2990 05EF                        l2966 0432                        l2974 0450  
                      l2958 0416                        l2888 0D74                        l2896 0175  
                      l2992 0603                        l2984 05C5                        l2968 0439  
                      l2898 0184                        l2986 05D2                        l2978 05AA  
                      l2988 05E7                        l2996 0D94                        l2998 0D9D  
                      ?_isr 0070                        ?_pop 0070                        STR_1 108E  
                      STR_2 1053                        STR_3 1000                        STR_4 1070  
                      STR_5 107A                        STR_6 101D                        STR_7 1062  
                      STR_8 1082                        STR_9 1089                        u3000 0DCC  
                      u3001 0DCB                        u3010 0772                        u3011 0771  
                      u3020 0797                        u3021 0796                        _LATA 010C  
                      u3030 0F3D                        u3110 0FB8                        _LATB 010D  
                      u3031 0F3C                        u3111 0FB7                        u2400 074F  
                      u3040 0F55                        u3200 038D                        u3120 0679  
                      _LATD 010F                        u2401 074E                        u3041 0F54  
                      u3201 038C                        u3121 0678                        u3105 0FAA  
                      u2410 0EBE                        u3050 0F5F                        u3210 03D8  
                      u2411 0EBD                        u3051 0F5E                        u3211 03D7  
                      u2500 063A                        u2420 0E81                        u3220 03E0  
                      u3060 0DB0                        u3140 068B                        u3300 0239  
                      u2501 0639                        u2405 074B                        u2421 0E80  
                      u3221 03DF                        u3061 0DAF                        u3141 068A  
                      u3301 0238                        u3070 0DBA                        u3230 02DD  
                      u3310 023E                        u3071 0DB9                        u3231 02DC  
                      u3135 067D                        u3311 023D                        u2520 0649  
                      u2600 06EF                        u3240 0300                        u3160 06A4  
                      u3080 0F9A                        u3400 02B6                        u3320 0242  
                      u2521 0648                        u2601 06EE                        u3241 02FF  
                      u3161 06A3                        u3081 0F99                        u3321 0241  
                      u2610 06F9                        u2370 071D                        u2450 0E95  
                      u3250 033A                        u3330 024A                        u3410 055B  
                      u2515 063B                        u2611 06F8                        u2371 071C  
                      u2451 0E94                        u2435 0E86                        u3251 0339  
                      u3155 068C                        u3331 0249                        u3411 055A  
                      u2540 0659                        u2460 060E                        u2380 0722  
                      u2700 017A                        u3260 0358                        u3180 06BA  
                      u3340 024E                        u3420 056B                        u2541 0658  
                      u2525 0645                        u2461 060D                        u2381 0721  
                      u2701 0178                        u2445 0E8B                        u3261 0357  
                      u3181 06B9                        u3165 06A0                        u3405 02B2  
                      u3341 024D                        u3421 056A                        u2550 065E  
                      u2470 0619                        u2630 0708                        u2390 0731  
                      u2710 017B                        u3190 036A                        u3270 04DE  
                      u3350 0256                        u3430 0575                        u2551 065D  
                      u2535 064F                        u2471 0618                        u2631 0707  
                      u2615 06F5                        u2391 0730                        u3191 0369  
                      u3271 04DD                        u3175 06AE                        u3095 0FA3  
                      u3351 0255                        u3431 0574                        u2480 062A  
                      u2640 070D                        u2560 06C9                        u2720 0189  
                      u2800 0406                        u3360 025A                        u3440 057F  
                      u2481 0629                        u2641 070C                        u2625 06FE  
                      u2561 06C8                        u2721 0188                        u2801 0405  
                      u3361 0259                        u3441 057E                        u2570 06D4  
                      u2650 0FC7                        u2730 0192                        u2810 0432  
                      u3290 052C                        u3370 025F                        u2571 06D3  
                      u2651 0FC6                        u2731 0191                        u2811 0431  
                      u3507 07CA                        u3291 052B                        u3371 025E  
                      u2580 06DF                        u2660 0FD2                        u2740 01E7  
                      u2820 0439                        u2900 00C0                        u3380 0263  
                      u2581 06DE                        u2661 0FD1                        u2741 01E6  
                      u2821 0438                        u2901 00BF                        u3517 077C  
                      u3285 0507                        u3381 0262                        u2670 0FF4  
                      u2750 01EE                        u2830 043E                        u2910 00D2  
                      u3390 026C                        u2495 062E                        u2671 0FF3  
                      u2751 01ED                        u2831 043D                        u2815 042E  
                      u2911 00D1                        u3527 078B                        u3391 026B  
                      u2680 0FF9                        u2760 01F3                        u2840 044B  
                      u2920 00EC                        u3537 0D90                        u2681 0FF8  
                      u2761 01F2                        u2745 01E3                        u2841 044A  
                      u2921 00EB                        u3457 058D                        u2690 0D74  
                      u2770 0200                        u2850 0450                        u2930 00F6  
                      u2595 06E3                        u2691 0D73                        u2675 0FF0  
                      u2771 01FF                        u2851 044F                        u2931 00F5  
                      u3467 059E                        u2780 0205                        u2860 05BD  
                      u2940 0122                        u2781 0204                        u2861 05BC  
                      u2845 0447                        u2941 0121                        u3477 0F63  
                      u2790 020B                        u2870 0603                        u2950 0DE5  
                      u2791 020A                        u2775 01FC                        u2871 0602  
                      u2951 0DE4                        u3487 0F6B                        u2960 0E1B  
                      u2880 0D9D                        u2961 0E1A                        u2881 0D9C  
                      u3497 0F7B                        u2970 0E3A                        u2890 0085  
                      u2971 0E39                        u2891 0084                        u2955 0DE1  
                      u2980 07C2                        u2981 07C1                        u2990 0DC3  
                      i1l71 07FD                        u2991 0DC2                        i1l91 0482  
                      i1l83 0F0C                        i1l93 04CF                        i1l78 0D6E  
         uart_init_brg@rate 002B                        abs@a 002B                        _dbuf 0120  
                      _head 007C                        _main 0540                        _dtoa 0171  
                      _tail 0067                        _prec 00E7                        pad@i 0037  
                      _size 0EE4                        pad@p 0034                        fsr0h 0005  
                      fsr1h 0007                        indf0 0000                        fsr0l 0004  
                      indf1 0001                        fsr1l 0006                        _push 045D  
                      btemp 007E                        _xtoa 03E6                        isr@c 0023  
                      isr@n 0020                        pop@c 0028                        start 0040  
           ?_charToHexDigit 0070                do_write@addr 00E3                do_write@data 00E1  
                     ??_abs 002D                       ??_pad 0036                       ??_isr 007B  
                     ??_pop 0026                       ?_main 0070                       ?_dtoa 003A  
           __end_of___awdiv 0668                       STR_10 1044                       STR_11 1032  
           __end_of___awmod 0717                       ?_size 0072                       ?_push 0070  
           __end_of___lldiv 06C3             ___awdiv@divisor 0024                       ?_xtoa 003A  
                     i1l102 0D3F                       i1l221 0E63                       i1l117 003B  
                     i1l223 0E6A                       i1l119 003E                       i1l226 0E79  
           ___awdiv@counter 0029                       _RCREG 0199                vfpfcnvrt@fmt 0046  
                     _SPBRG 019B                       _PORTD 000F                       _TRISB 008D  
                     _TRISD 008F                       _TXREG 019A         ___lmul@multiplicand 0028  
           __end_of_do_init 0EE4             __end_of_do_read 035B             ??_setup_address 0026  
                     _clear 0DE9                       _flags 0065                       _first 0D34  
                     _empty 0DD2         read_prec_or_width@c 002F         read_prec_or_width@n 0030  
                     _fputc 0717                       _fputs 0E9A                       pad@fp 0039  
                     _width 00E5                       _queue 23F0                       _putch 0003  
                     dtoa@d 003A                       dtoa@i 0044                       dtoa@p 0040  
                     dtoa@s 0043                       dtoa@w 0041                       isr@ok 0022  
          __end_ofi1_addone 0D6F                       size@s 0075                       push@c 007A  
                     push@s 0076                       status 0003                       wtemp0 007E  
           __end_of_sprintf 0E5A                       xtoa@c 0041                       xtoa@d 003A  
                     xtoa@i 0042                       xtoa@p 003E                       xtoa@w 003F  
           __initialization 0042                __end_of_main 05A8                __end_of_dtoa 0222  
              __end_of_size 0F0D                __end_of_push 04D0                __end_of_xtoa 045D  
                    ??_main 0062                      ??_dtoa 003C              write_port@data 0026  
                    ??_size 0074                      ??_push 0072                      ??_xtoa 003C  
__end_of_read_prec_or_width 0608                      ?_clear 0070                      ?_first 0070  
                    ?_empty 0070                      ?_fputc 0024                      ?_fputs 002C  
          ___awdiv@dividend 0026                      _ANSELA 018C                      ?_putch 0070  
                    _ANSELB 018D                      _ANSELC 018E                      _ANSELD 018F  
                    i1l2208 07F7                      i1l2410 0EE4                      i1l2412 0EF2  
                    i1l2430 049F                      i1l2422 045E                      i1l2414 0EFF  
                    i1l2510 0E6F                      i1l2502 0E5B                      u201_20 0D65  
                    i1l2440 04BA                      i1l2432 04A1                      i1l2424 046C  
                    i1l2416 0F04                      i1l2512 0E76                      i1l2504 0E5C  
                    u201_21 0D64                      i1l2442 04CA                      i1l2426 0479  
                    i1l2418 0F08                      i1l2514 0E78                      i1l2506 0E61  
                    i1l2444 0D34                      i1l2428 047E                      i1l2508 0E67  
                    i1l2700 0016                      i1l2438 04AD                      i1l2702 001A  
                    i1l2392 0D5D                      u202_20 0EFF                      i1l2704 0022  
                    u202_21 0EFE                      i1l2394 0D65                      i1l2706 002A  
                    i1l2708 0038                      u202_25 0EFB                      i1l2398 0D68  
                    u203_20 0479                      u203_21 0478                      i1l2690 0006  
                    i1l2692 0008                      u203_25 0475                      i1l2694 0009  
                    u204_20 049F                      i1l2696 000B                      u204_21 049E  
                    i1l2698 0011                      u204_25 049B                      u205_20 0E61  
                    u205_21 0E60                      u206_20 0E67                      u230_20 0016  
                    u206_21 0E66                      u230_21 0015                      u207_20 0E6F  
                    u231_20 002A                      u207_21 0E6E                      u231_21 0029  
                    u232_20 0038                      u232_21 0037                      u232_25 0034  
                    u354_27 04A6               vfpfcnvrt@done 004C                      _SPBRGH 019C  
          __end_of_do_blank 03E6                vfprintf@cfmt 0059            __end_of_do_write 0540  
                    ___lmul 0F8D                      _addone 0D94                      ___wmul 0E7A  
                 ??___awdiv 0028                   ??___awmod 0028                   ??___lldiv 0038  
      read_prec_or_width@ap 002A                      _setCTS 07F6                      _memset 0E1E  
          ___awdiv@quotient 002B             ___awmod@divisor 0024             ___awmod@counter 0029  
                    pad@buf 0033                   ??_do_init 0060                   ??_do_read 0060  
                    dtoa@fp 003D                      fputc@c 0024                      fputs@c 002F  
                    fputs@i 0030                      fputs@s 0032                      putch@c 0070  
          __end_of_vfprintf 0E1E                   ??_sprintf 005F                      xtoa@fp 003D  
   __end_of__initialization 006E              __pcstackCOMMON 0070                __pidataBANK0 07FE  
             __end_of_clear 0E02               __end_of_first 0D40               __end_of_empty 0DE9  
             __end_of_fputc 0769               __end_of_fputs 0EBF               __end_of_putch 0004  
                 ?i1_addone 0070                     ??_clear 002C                     ??_first 0070  
                   ??_empty 0026                     ??_fputc 0027                     ??_fputs 002D  
                   ??_putch 0024                  __pbssBANK0 0065                  __pbssBANK1 00E5  
                __pbssBANK2 0120            ??_charToHexDigit 0024                  _cmd_active 00ED  
                __pmaintext 0540                     ?___lmul 0024                     ?_addone 0024  
                   ?___wmul 0024                  __pintentry 0004                     ?_setCTS 0070  
                   ?_memset 0024              ___lmul@product 002C                  ??i1_addone 0072  
     __end_of_uart_init_brg 07B7             setup_address@hi 0026                   ?_do_blank 0070  
                 ?_do_write 0070                     ___awdiv 0608                     ___awmod 06C3  
                   ___lldiv 0668                   ?_vfprintf 0054                     _do_init 0EBF  
                   _do_read 02CF                     __ptext1 0222                     __ptext2 0F8D  
                   __ptext3 0668                     __ptext4 0F0D                     __ptext5 04D0  
                   __ptext6 0F60                     __ptext7 07B7                     __ptext8 0DD2  
                   __ptext9 0D94                     addone@i 0024       read_prec_or_width@fmt 0032  
          ___awmod@dividend 0026           __end_of_read_port 0D5D                  ??_do_blank 0060  
                   main@cmd 0064       __end_of_setup_address 0D94                     _sprintf 0E3B  
                   clrloop0 0D41                  ??_do_write 0060        end_of_initialization 006E  
                   fputc@fp 0026                     setCTS@b 0070                     memset@c 0026  
                   memset@n 0028                     memset@p 002A                     fputs@fp 002C  
        _read_prec_or_width 05A8           __end_of_uart_getc 0E7A           __end_of_uart_init 02CF  
           ___lldiv@divisor 0030                  do_blank@ok 00CD           __end_of_uart_putc 0DBB  
         setup_address@addr 0024           __end_of_uart_puts 0F60             ___lldiv@counter 003D  
         __end_of_vfpfcnvrt 0171                   _RCSTAbits 019D         ?_read_prec_or_width 002A  
          vfpfcnvrt@convarg 004D                  ??_vfprintf 0057                 uart_getc@ok 0071  
                _uart_ready 0066                  do_read@ads 00AD                  do_read@col 00C0  
                 _PORTAbits 000C                   _PORTBbits 000D                   _PORTCbits 000E  
                 _PORTEbits 0010                   _TRISAbits 008C                   _TRISCbits 008E  
                 _TRISEbits 0090        ??_read_prec_or_width 002C                  _ports_init 0F0D  
                 i1addone@i 0070                  do_write@hi 00DF                  do_write@lo 00E0  
                 _TXSTAbits 019E              __end_of___lmul 0FC1                 vfpfcnvrt@ap 0047  
            __end_of_addone 0DA7                 vfpfcnvrt@cp 0052                 vfpfcnvrt@fp 0051  
            __end_of___wmul 0E9A                 _BAUDCONbits 019F                  _write_port 0F60  
            __end_of_setCTS 07FE              __end_of_memset 0E3B         start_initialization 0042  
               __end_of_abs 0D81                 __end_of_pad 1000                 __end_of_isr 0040  
               __end_of_pop 07F6                 vfprintf@fmt 0054                    ??___lmul 002C  
                  ??_addone 0026                    ??___wmul 0028                 __pdataBANK0 0067  
                  ??_setCTS 0070                    ??_memset 002A                  memset@dest 0024  
               __pbssBIGRAM 23F0                 __pbssCOMMON 007C                   ___latbits 0003  
             __pcstackBANK0 0020               __pcstackBANK1 00A0                 ?_ports_init 0070  
                 _dtoa$1232 003E                _bytes_popped 00E9                _bytes_pushed 00EB  
                  ?___awdiv 0024                    ?___awmod 0024                    ?___lldiv 0030  
               ?_write_port 0070                    ?_do_init 0070                    ?_do_read 0070  
                  ?_sprintf 005B                   _read_port 0D4C              ___wmul@product 0028  
                 clear_ram0 0D40                    _PIE1bits 0091                   _push$1524 0078  
           uart_init@factor 004A                   do_blank@s 00CF                    _PIR1bits 0011  
                uart_getc@c 0070                   _uart_getc 0E5A                   _uart_init 0222  
                 _uart_putc 0DA7                   _uart_puts 0F36                  uart_init@n 0046  
                uart_putc@c 0024                   _vfpfcnvrt 0072                  uart_puts@p 0027  
                uart_puts@s 0024                  _ADCON0bits 009D                    i1_addone 0D5D  
         ___wmul@multiplier 0024                   do_write@c 00E2                   do_write@s 00DD  
         ___lmul@multiplier 0024                  ?_read_port 0070                  vfprintf@ap 0056  
                vfprintf@fp 0058                  ?_uart_getc 0070                  ?_uart_init 003E  
                ?_uart_putc 0070                  ?_uart_puts 0024                  ?_vfpfcnvrt 0046  
                sprintf@fmt 005B          uart_init@baud_rate 003E                    _do_blank 035B  
             _uart_init_brg 0769                    __ptext10 0DBB                    __ptext11 02CF  
                  __ptext20 03E6                    __ptext12 0DA7                    __ptext21 05A8  
                  __ptext13 0EBF                    __ptext30 0608                    __ptext22 0E7A  
                  __ptext14 0769                    __ptext31 0D81                    __ptext23 0171  
                  __ptext15 035B                    __ptext40 07F6                    __ptext32 0D4C  
                  __ptext24 0FC1                    __ptext16 0F36                    __ptext41 0D34  
                  __ptext33 0DE9                    __ptext25 0E9A                    __ptext17 0E3B  
                  __ptext34 0E1E                    __ptext26 0717                    __ptext18 0E02  
                  __ptext27 0003                    __ptext19 0072                    __ptext36 0E5A  
                  __ptext28 0D6F                    __ptext37 0EE4                    __ptext29 06C3  
                  __ptext38 045D                    __ptext39 0D5D                    _do_write 04D0  
           charToHexDigit@c 0024                do_blank@addr 00D1                do_blank@data 00CE  
                  do_init@s 00AD                    do_read@s 00BD                    int$flags 007E  
                  _vfprintf 0E02                  _INTCONbits 000B              ?_uart_init_brg 0024  
            __pstringtext10 1089              __pstringtext11 108E              __pstringtext12 0000  
              ??_ports_init 0024                 ??_read_port 0024               _setup_address 0D81  
                  intlevel1 0000                   sprintf@ap 00A0            ___lldiv@dividend 0034  
               do_blank@ads 00AD                 ??_uart_getc 0070                 ??_uart_init 0042  
               ??_uart_putc 0024                 ??_uart_puts 0026              _charToHexDigit 0DBB  
        __end_of_ports_init 0F36                 ??_vfpfcnvrt 0048                ??_write_port 0024  
             __pstringtext1 1000               __pstringtext2 101D               __pstringtext3 1032  
             __pstringtext4 1044               __pstringtext5 1053               __pstringtext6 1062  
             __pstringtext7 1070               __pstringtext8 107A               __pstringtext9 1082  
                  sprintf@f 00A2                    sprintf@s 00A1            ___lldiv@quotient 0039  
               do_read@addr 00C1                 do_init@rate 00B5                 do_read@data 00BF  
            ?_setup_address 0024          __end_of_write_port 0F8D               read_port@data 0024  
    __end_of_charToHexDigit 0DD2  
