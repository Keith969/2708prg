

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Feb 11 10:28:35 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1789
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	cinit,global,class=CODE,merge=1,delta=2
    19                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    24                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    27                           	psect	text1,local,class=CODE,merge=1,delta=2
    28                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text4,local,class=CODE,merge=1,delta=2
    31                           	psect	text5,local,class=CODE,merge=1,delta=2
    32                           	psect	text6,local,class=CODE,merge=1,delta=2
    33                           	psect	text7,local,class=CODE,merge=1,delta=2
    34                           	psect	text8,local,class=CODE,merge=1,delta=2
    35                           	psect	text9,local,class=CODE,merge=1,delta=2
    36                           	psect	text10,local,class=CODE,merge=1,delta=2
    37                           	psect	text11,local,class=CODE,merge=1,delta=2
    38                           	psect	text12,local,class=CODE,merge=1,delta=2
    39                           	psect	text13,local,class=CODE,merge=1,delta=2
    40                           	psect	text14,local,class=CODE,merge=1,delta=2
    41                           	psect	text15,local,class=CODE,merge=1,delta=2
    42                           	psect	text16,local,class=CODE,merge=1,delta=2
    43                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    44                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text25,local,class=CODE,merge=1,delta=2,group=3
    52                           	psect	text26,local,class=CODE,merge=1,delta=2,group=3
    53                           	psect	text27,local,class=CODE,merge=1,delta=2,group=3
    54                           	psect	text28,local,class=CODE,merge=1,delta=2,group=3
    55                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text31,local,class=CODE,merge=1,delta=2
    58                           	psect	text32,local,class=CODE,merge=1,delta=2
    59                           	psect	text33,local,class=CODE,merge=1,delta=2
    60                           	psect	text34,local,class=CODE,merge=1,delta=2,group=3
    61                           	psect	intentry,global,class=CODE,delta=2
    62                           	psect	text36,local,class=CODE,merge=1,delta=2
    63                           	psect	text37,local,class=CODE,merge=1,delta=2
    64                           	psect	text38,local,class=CODE,merge=1,delta=2
    65                           	psect	text39,local,class=CODE,merge=1,delta=2
    66                           	psect	text40,local,class=CODE,merge=1,delta=2
    67                           	psect	text41,local,class=CODE,merge=1,delta=2
    68                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    69                           	dabs	1,0xCA0,32
    70                           	dabs	1,0xC20,80
    71                           	dabs	1,0xBA0,80
    72                           	dabs	1,0xB20,80
    73                           	dabs	1,0xAA0,80
    74                           	dabs	1,0xA20,80
    75                           	dabs	1,0x9A0,80
    76                           	dabs	1,0x920,80
    77                           	dabs	1,0x8A0,80
    78                           	dabs	1,0x820,80
    79                           	dabs	1,0x7A0,80
    80                           	dabs	1,0x720,80
    81                           	dabs	1,0x6A0,80
    82                           	dabs	1,0x650,32
    83                           	dabs	1,0x23F0,0,_queue
    84                           	dabs	1,0x7E,2
    85     0000                     
    86                           ; Generated 07/09/2023 GMT
    87                           ; 
    88                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution. Publication is not required when
   102                           ;        this file is used in an embedded application.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC16F1789 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120     0000                     	;# 
   121     0001                     	;# 
   122     0002                     	;# 
   123     0003                     	;# 
   124     0004                     	;# 
   125     0005                     	;# 
   126     0006                     	;# 
   127     0007                     	;# 
   128     0008                     	;# 
   129     0009                     	;# 
   130     000A                     	;# 
   131     000B                     	;# 
   132     000C                     	;# 
   133     000D                     	;# 
   134     000E                     	;# 
   135     000F                     	;# 
   136     0010                     	;# 
   137     0011                     	;# 
   138     0012                     	;# 
   139     0013                     	;# 
   140     0014                     	;# 
   141     0015                     	;# 
   142     0016                     	;# 
   143     0016                     	;# 
   144     0017                     	;# 
   145     0018                     	;# 
   146     0019                     	;# 
   147     001A                     	;# 
   148     001B                     	;# 
   149     001C                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     008F                     	;# 
   154     0090                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0095                     	;# 
   160     0096                     	;# 
   161     0097                     	;# 
   162     0098                     	;# 
   163     0099                     	;# 
   164     009A                     	;# 
   165     009B                     	;# 
   166     009B                     	;# 
   167     009C                     	;# 
   168     009D                     	;# 
   169     009E                     	;# 
   170     009F                     	;# 
   171     010C                     	;# 
   172     010D                     	;# 
   173     010E                     	;# 
   174     010F                     	;# 
   175     0110                     	;# 
   176     0111                     	;# 
   177     0112                     	;# 
   178     0113                     	;# 
   179     0114                     	;# 
   180     0115                     	;# 
   181     0116                     	;# 
   182     0117                     	;# 
   183     0118                     	;# 
   184     0119                     	;# 
   185     011A                     	;# 
   186     011B                     	;# 
   187     011C                     	;# 
   188     011D                     	;# 
   189     011D                     	;# 
   190     011D                     	;# 
   191     011E                     	;# 
   192     011F                     	;# 
   193     018C                     	;# 
   194     018D                     	;# 
   195     018E                     	;# 
   196     018F                     	;# 
   197     0190                     	;# 
   198     0191                     	;# 
   199     0191                     	;# 
   200     0192                     	;# 
   201     0193                     	;# 
   202     0193                     	;# 
   203     0193                     	;# 
   204     0194                     	;# 
   205     0195                     	;# 
   206     0196                     	;# 
   207     0197                     	;# 
   208     0199                     	;# 
   209     0199                     	;# 
   210     0199                     	;# 
   211     019A                     	;# 
   212     019A                     	;# 
   213     019A                     	;# 
   214     019B                     	;# 
   215     019B                     	;# 
   216     019B                     	;# 
   217     019B                     	;# 
   218     019B                     	;# 
   219     019C                     	;# 
   220     019C                     	;# 
   221     019C                     	;# 
   222     019D                     	;# 
   223     019D                     	;# 
   224     019D                     	;# 
   225     019E                     	;# 
   226     019E                     	;# 
   227     019E                     	;# 
   228     019F                     	;# 
   229     019F                     	;# 
   230     019F                     	;# 
   231     019F                     	;# 
   232     019F                     	;# 
   233     020C                     	;# 
   234     020D                     	;# 
   235     020E                     	;# 
   236     020F                     	;# 
   237     0210                     	;# 
   238     0211                     	;# 
   239     0211                     	;# 
   240     0212                     	;# 
   241     0212                     	;# 
   242     0213                     	;# 
   243     0213                     	;# 
   244     0214                     	;# 
   245     0214                     	;# 
   246     0215                     	;# 
   247     0215                     	;# 
   248     0215                     	;# 
   249     0215                     	;# 
   250     0216                     	;# 
   251     0216                     	;# 
   252     0217                     	;# 
   253     0217                     	;# 
   254     028C                     	;# 
   255     028D                     	;# 
   256     028E                     	;# 
   257     028F                     	;# 
   258     0290                     	;# 
   259     0291                     	;# 
   260     0291                     	;# 
   261     0292                     	;# 
   262     0293                     	;# 
   263     0298                     	;# 
   264     0298                     	;# 
   265     0299                     	;# 
   266     029A                     	;# 
   267     030C                     	;# 
   268     030D                     	;# 
   269     030E                     	;# 
   270     030F                     	;# 
   271     0310                     	;# 
   272     0311                     	;# 
   273     0311                     	;# 
   274     0312                     	;# 
   275     0313                     	;# 
   276     038C                     	;# 
   277     038D                     	;# 
   278     038E                     	;# 
   279     038F                     	;# 
   280     0390                     	;# 
   281     0391                     	;# 
   282     0392                     	;# 
   283     0393                     	;# 
   284     0394                     	;# 
   285     0395                     	;# 
   286     0396                     	;# 
   287     0397                     	;# 
   288     0398                     	;# 
   289     0399                     	;# 
   290     039D                     	;# 
   291     039E                     	;# 
   292     039F                     	;# 
   293     0511                     	;# 
   294     0513                     	;# 
   295     0515                     	;# 
   296     051A                     	;# 
   297     0591                     	;# 
   298     0592                     	;# 
   299     0592                     	;# 
   300     0593                     	;# 
   301     0594                     	;# 
   302     0594                     	;# 
   303     0595                     	;# 
   304     0596                     	;# 
   305     0596                     	;# 
   306     0E91                     	;# 
   307     0E92                     	;# 
   308     0E93                     	;# 
   309     0E94                     	;# 
   310     0E95                     	;# 
   311     0E96                     	;# 
   312     0E97                     	;# 
   313     0E98                     	;# 
   314     0E99                     	;# 
   315     0E9A                     	;# 
   316     0E9B                     	;# 
   317     0E9C                     	;# 
   318     0E9D                     	;# 
   319     0E9E                     	;# 
   320     0E9F                     	;# 
   321     0EA0                     	;# 
   322     0EA1                     	;# 
   323     0EA1                     	;# 
   324     0EA2                     	;# 
   325     0EA3                     	;# 
   326     0EA3                     	;# 
   327     0EA4                     	;# 
   328     0EA5                     	;# 
   329     0EA5                     	;# 
   330     0EA6                     	;# 
   331     0EA7                     	;# 
   332     0EA7                     	;# 
   333     0EA8                     	;# 
   334     0EA9                     	;# 
   335     0EAA                     	;# 
   336     0EAB                     	;# 
   337     0EAC                     	;# 
   338     0EAD                     	;# 
   339     0EAE                     	;# 
   340     0EAF                     	;# 
   341     0EB1                     	;# 
   342     0EB2                     	;# 
   343     0EB3                     	;# 
   344     0EB4                     	;# 
   345     0EB5                     	;# 
   346     0EB6                     	;# 
   347     0EB7                     	;# 
   348     0EB8                     	;# 
   349     0EB9                     	;# 
   350     0EBA                     	;# 
   351     0EBB                     	;# 
   352     0EBC                     	;# 
   353     0EBD                     	;# 
   354     0EBE                     	;# 
   355     0EBF                     	;# 
   356     0EC0                     	;# 
   357     0EC1                     	;# 
   358     0EC1                     	;# 
   359     0EC2                     	;# 
   360     0EC3                     	;# 
   361     0EC3                     	;# 
   362     0EC4                     	;# 
   363     0EC5                     	;# 
   364     0EC5                     	;# 
   365     0EC6                     	;# 
   366     0EC7                     	;# 
   367     0EC7                     	;# 
   368     0EC8                     	;# 
   369     0EC9                     	;# 
   370     0ECA                     	;# 
   371     0ECB                     	;# 
   372     0ECC                     	;# 
   373     0ECD                     	;# 
   374     0ECE                     	;# 
   375     0ECF                     	;# 
   376     0ED1                     	;# 
   377     0ED2                     	;# 
   378     0ED3                     	;# 
   379     0ED4                     	;# 
   380     0ED5                     	;# 
   381     0ED6                     	;# 
   382     0ED7                     	;# 
   383     0ED8                     	;# 
   384     0ED9                     	;# 
   385     0EDA                     	;# 
   386     0EDB                     	;# 
   387     0EDC                     	;# 
   388     0EDD                     	;# 
   389     0EDE                     	;# 
   390     0EDF                     	;# 
   391     0EE0                     	;# 
   392     0EE1                     	;# 
   393     0EE1                     	;# 
   394     0EE2                     	;# 
   395     0EE3                     	;# 
   396     0EE3                     	;# 
   397     0EE4                     	;# 
   398     0EE5                     	;# 
   399     0EE5                     	;# 
   400     0EE6                     	;# 
   401     0EE7                     	;# 
   402     0EE7                     	;# 
   403     0EE8                     	;# 
   404     0EE9                     	;# 
   405     0EEA                     	;# 
   406     0EEB                     	;# 
   407     0EEC                     	;# 
   408     0EED                     	;# 
   409     0EEE                     	;# 
   410     0EEF                     	;# 
   411     0F11                     	;# 
   412     0F12                     	;# 
   413     0F13                     	;# 
   414     0F14                     	;# 
   415     0F15                     	;# 
   416     0F16                     	;# 
   417     0F17                     	;# 
   418     0F18                     	;# 
   419     0F19                     	;# 
   420     0F1A                     	;# 
   421     0F1B                     	;# 
   422     0F1C                     	;# 
   423     0F1D                     	;# 
   424     0F1E                     	;# 
   425     0F1F                     	;# 
   426     0F20                     	;# 
   427     0F21                     	;# 
   428     0F21                     	;# 
   429     0F22                     	;# 
   430     0F23                     	;# 
   431     0F23                     	;# 
   432     0F24                     	;# 
   433     0F25                     	;# 
   434     0F25                     	;# 
   435     0F26                     	;# 
   436     0F27                     	;# 
   437     0F27                     	;# 
   438     0F28                     	;# 
   439     0F29                     	;# 
   440     0F2A                     	;# 
   441     0F2B                     	;# 
   442     0F2C                     	;# 
   443     0F2D                     	;# 
   444     0F2E                     	;# 
   445     0F2F                     	;# 
   446     0FE4                     	;# 
   447     0FE5                     	;# 
   448     0FE6                     	;# 
   449     0FE7                     	;# 
   450     0FE8                     	;# 
   451     0FE9                     	;# 
   452     0FEA                     	;# 
   453     0FEB                     	;# 
   454     0FED                     	;# 
   455     0FEE                     	;# 
   456     0FEF                     	;# 
   457     0000                     	;# 
   458     0001                     	;# 
   459     0002                     	;# 
   460     0003                     	;# 
   461     0004                     	;# 
   462     0005                     	;# 
   463     0006                     	;# 
   464     0007                     	;# 
   465     0008                     	;# 
   466     0009                     	;# 
   467     000A                     	;# 
   468     000B                     	;# 
   469     000C                     	;# 
   470     000D                     	;# 
   471     000E                     	;# 
   472     000F                     	;# 
   473     0010                     	;# 
   474     0011                     	;# 
   475     0012                     	;# 
   476     0013                     	;# 
   477     0014                     	;# 
   478     0015                     	;# 
   479     0016                     	;# 
   480     0016                     	;# 
   481     0017                     	;# 
   482     0018                     	;# 
   483     0019                     	;# 
   484     001A                     	;# 
   485     001B                     	;# 
   486     001C                     	;# 
   487     008C                     	;# 
   488     008D                     	;# 
   489     008E                     	;# 
   490     008F                     	;# 
   491     0090                     	;# 
   492     0091                     	;# 
   493     0092                     	;# 
   494     0093                     	;# 
   495     0094                     	;# 
   496     0095                     	;# 
   497     0096                     	;# 
   498     0097                     	;# 
   499     0098                     	;# 
   500     0099                     	;# 
   501     009A                     	;# 
   502     009B                     	;# 
   503     009B                     	;# 
   504     009C                     	;# 
   505     009D                     	;# 
   506     009E                     	;# 
   507     009F                     	;# 
   508     010C                     	;# 
   509     010D                     	;# 
   510     010E                     	;# 
   511     010F                     	;# 
   512     0110                     	;# 
   513     0111                     	;# 
   514     0112                     	;# 
   515     0113                     	;# 
   516     0114                     	;# 
   517     0115                     	;# 
   518     0116                     	;# 
   519     0117                     	;# 
   520     0118                     	;# 
   521     0119                     	;# 
   522     011A                     	;# 
   523     011B                     	;# 
   524     011C                     	;# 
   525     011D                     	;# 
   526     011D                     	;# 
   527     011D                     	;# 
   528     011E                     	;# 
   529     011F                     	;# 
   530     018C                     	;# 
   531     018D                     	;# 
   532     018E                     	;# 
   533     018F                     	;# 
   534     0190                     	;# 
   535     0191                     	;# 
   536     0191                     	;# 
   537     0192                     	;# 
   538     0193                     	;# 
   539     0193                     	;# 
   540     0193                     	;# 
   541     0194                     	;# 
   542     0195                     	;# 
   543     0196                     	;# 
   544     0197                     	;# 
   545     0199                     	;# 
   546     0199                     	;# 
   547     0199                     	;# 
   548     019A                     	;# 
   549     019A                     	;# 
   550     019A                     	;# 
   551     019B                     	;# 
   552     019B                     	;# 
   553     019B                     	;# 
   554     019B                     	;# 
   555     019B                     	;# 
   556     019C                     	;# 
   557     019C                     	;# 
   558     019C                     	;# 
   559     019D                     	;# 
   560     019D                     	;# 
   561     019D                     	;# 
   562     019E                     	;# 
   563     019E                     	;# 
   564     019E                     	;# 
   565     019F                     	;# 
   566     019F                     	;# 
   567     019F                     	;# 
   568     019F                     	;# 
   569     019F                     	;# 
   570     020C                     	;# 
   571     020D                     	;# 
   572     020E                     	;# 
   573     020F                     	;# 
   574     0210                     	;# 
   575     0211                     	;# 
   576     0211                     	;# 
   577     0212                     	;# 
   578     0212                     	;# 
   579     0213                     	;# 
   580     0213                     	;# 
   581     0214                     	;# 
   582     0214                     	;# 
   583     0215                     	;# 
   584     0215                     	;# 
   585     0215                     	;# 
   586     0215                     	;# 
   587     0216                     	;# 
   588     0216                     	;# 
   589     0217                     	;# 
   590     0217                     	;# 
   591     028C                     	;# 
   592     028D                     	;# 
   593     028E                     	;# 
   594     028F                     	;# 
   595     0290                     	;# 
   596     0291                     	;# 
   597     0291                     	;# 
   598     0292                     	;# 
   599     0293                     	;# 
   600     0298                     	;# 
   601     0298                     	;# 
   602     0299                     	;# 
   603     029A                     	;# 
   604     030C                     	;# 
   605     030D                     	;# 
   606     030E                     	;# 
   607     030F                     	;# 
   608     0310                     	;# 
   609     0311                     	;# 
   610     0311                     	;# 
   611     0312                     	;# 
   612     0313                     	;# 
   613     038C                     	;# 
   614     038D                     	;# 
   615     038E                     	;# 
   616     038F                     	;# 
   617     0390                     	;# 
   618     0391                     	;# 
   619     0392                     	;# 
   620     0393                     	;# 
   621     0394                     	;# 
   622     0395                     	;# 
   623     0396                     	;# 
   624     0397                     	;# 
   625     0398                     	;# 
   626     0399                     	;# 
   627     039D                     	;# 
   628     039E                     	;# 
   629     039F                     	;# 
   630     0511                     	;# 
   631     0513                     	;# 
   632     0515                     	;# 
   633     051A                     	;# 
   634     0591                     	;# 
   635     0592                     	;# 
   636     0592                     	;# 
   637     0593                     	;# 
   638     0594                     	;# 
   639     0594                     	;# 
   640     0595                     	;# 
   641     0596                     	;# 
   642     0596                     	;# 
   643     0E91                     	;# 
   644     0E92                     	;# 
   645     0E93                     	;# 
   646     0E94                     	;# 
   647     0E95                     	;# 
   648     0E96                     	;# 
   649     0E97                     	;# 
   650     0E98                     	;# 
   651     0E99                     	;# 
   652     0E9A                     	;# 
   653     0E9B                     	;# 
   654     0E9C                     	;# 
   655     0E9D                     	;# 
   656     0E9E                     	;# 
   657     0E9F                     	;# 
   658     0EA0                     	;# 
   659     0EA1                     	;# 
   660     0EA1                     	;# 
   661     0EA2                     	;# 
   662     0EA3                     	;# 
   663     0EA3                     	;# 
   664     0EA4                     	;# 
   665     0EA5                     	;# 
   666     0EA5                     	;# 
   667     0EA6                     	;# 
   668     0EA7                     	;# 
   669     0EA7                     	;# 
   670     0EA8                     	;# 
   671     0EA9                     	;# 
   672     0EAA                     	;# 
   673     0EAB                     	;# 
   674     0EAC                     	;# 
   675     0EAD                     	;# 
   676     0EAE                     	;# 
   677     0EAF                     	;# 
   678     0EB1                     	;# 
   679     0EB2                     	;# 
   680     0EB3                     	;# 
   681     0EB4                     	;# 
   682     0EB5                     	;# 
   683     0EB6                     	;# 
   684     0EB7                     	;# 
   685     0EB8                     	;# 
   686     0EB9                     	;# 
   687     0EBA                     	;# 
   688     0EBB                     	;# 
   689     0EBC                     	;# 
   690     0EBD                     	;# 
   691     0EBE                     	;# 
   692     0EBF                     	;# 
   693     0EC0                     	;# 
   694     0EC1                     	;# 
   695     0EC1                     	;# 
   696     0EC2                     	;# 
   697     0EC3                     	;# 
   698     0EC3                     	;# 
   699     0EC4                     	;# 
   700     0EC5                     	;# 
   701     0EC5                     	;# 
   702     0EC6                     	;# 
   703     0EC7                     	;# 
   704     0EC7                     	;# 
   705     0EC8                     	;# 
   706     0EC9                     	;# 
   707     0ECA                     	;# 
   708     0ECB                     	;# 
   709     0ECC                     	;# 
   710     0ECD                     	;# 
   711     0ECE                     	;# 
   712     0ECF                     	;# 
   713     0ED1                     	;# 
   714     0ED2                     	;# 
   715     0ED3                     	;# 
   716     0ED4                     	;# 
   717     0ED5                     	;# 
   718     0ED6                     	;# 
   719     0ED7                     	;# 
   720     0ED8                     	;# 
   721     0ED9                     	;# 
   722     0EDA                     	;# 
   723     0EDB                     	;# 
   724     0EDC                     	;# 
   725     0EDD                     	;# 
   726     0EDE                     	;# 
   727     0EDF                     	;# 
   728     0EE0                     	;# 
   729     0EE1                     	;# 
   730     0EE1                     	;# 
   731     0EE2                     	;# 
   732     0EE3                     	;# 
   733     0EE3                     	;# 
   734     0EE4                     	;# 
   735     0EE5                     	;# 
   736     0EE5                     	;# 
   737     0EE6                     	;# 
   738     0EE7                     	;# 
   739     0EE7                     	;# 
   740     0EE8                     	;# 
   741     0EE9                     	;# 
   742     0EEA                     	;# 
   743     0EEB                     	;# 
   744     0EEC                     	;# 
   745     0EED                     	;# 
   746     0EEE                     	;# 
   747     0EEF                     	;# 
   748     0F11                     	;# 
   749     0F12                     	;# 
   750     0F13                     	;# 
   751     0F14                     	;# 
   752     0F15                     	;# 
   753     0F16                     	;# 
   754     0F17                     	;# 
   755     0F18                     	;# 
   756     0F19                     	;# 
   757     0F1A                     	;# 
   758     0F1B                     	;# 
   759     0F1C                     	;# 
   760     0F1D                     	;# 
   761     0F1E                     	;# 
   762     0F1F                     	;# 
   763     0F20                     	;# 
   764     0F21                     	;# 
   765     0F21                     	;# 
   766     0F22                     	;# 
   767     0F23                     	;# 
   768     0F23                     	;# 
   769     0F24                     	;# 
   770     0F25                     	;# 
   771     0F25                     	;# 
   772     0F26                     	;# 
   773     0F27                     	;# 
   774     0F27                     	;# 
   775     0F28                     	;# 
   776     0F29                     	;# 
   777     0F2A                     	;# 
   778     0F2B                     	;# 
   779     0F2C                     	;# 
   780     0F2D                     	;# 
   781     0F2E                     	;# 
   782     0F2F                     	;# 
   783     0FE4                     	;# 
   784     0FE5                     	;# 
   785     0FE6                     	;# 
   786     0FE7                     	;# 
   787     0FE8                     	;# 
   788     0FE9                     	;# 
   789     0FEA                     	;# 
   790     0FEB                     	;# 
   791     0FED                     	;# 
   792     0FEE                     	;# 
   793     0FEF                     	;# 
   794     0000                     	;# 
   795     0001                     	;# 
   796     0002                     	;# 
   797     0003                     	;# 
   798     0004                     	;# 
   799     0005                     	;# 
   800     0006                     	;# 
   801     0007                     	;# 
   802     0008                     	;# 
   803     0009                     	;# 
   804     000A                     	;# 
   805     000B                     	;# 
   806     000C                     	;# 
   807     000D                     	;# 
   808     000E                     	;# 
   809     000F                     	;# 
   810     0010                     	;# 
   811     0011                     	;# 
   812     0012                     	;# 
   813     0013                     	;# 
   814     0014                     	;# 
   815     0015                     	;# 
   816     0016                     	;# 
   817     0016                     	;# 
   818     0017                     	;# 
   819     0018                     	;# 
   820     0019                     	;# 
   821     001A                     	;# 
   822     001B                     	;# 
   823     001C                     	;# 
   824     008C                     	;# 
   825     008D                     	;# 
   826     008E                     	;# 
   827     008F                     	;# 
   828     0090                     	;# 
   829     0091                     	;# 
   830     0092                     	;# 
   831     0093                     	;# 
   832     0094                     	;# 
   833     0095                     	;# 
   834     0096                     	;# 
   835     0097                     	;# 
   836     0098                     	;# 
   837     0099                     	;# 
   838     009A                     	;# 
   839     009B                     	;# 
   840     009B                     	;# 
   841     009C                     	;# 
   842     009D                     	;# 
   843     009E                     	;# 
   844     009F                     	;# 
   845     010C                     	;# 
   846     010D                     	;# 
   847     010E                     	;# 
   848     010F                     	;# 
   849     0110                     	;# 
   850     0111                     	;# 
   851     0112                     	;# 
   852     0113                     	;# 
   853     0114                     	;# 
   854     0115                     	;# 
   855     0116                     	;# 
   856     0117                     	;# 
   857     0118                     	;# 
   858     0119                     	;# 
   859     011A                     	;# 
   860     011B                     	;# 
   861     011C                     	;# 
   862     011D                     	;# 
   863     011D                     	;# 
   864     011D                     	;# 
   865     011E                     	;# 
   866     011F                     	;# 
   867     018C                     	;# 
   868     018D                     	;# 
   869     018E                     	;# 
   870     018F                     	;# 
   871     0190                     	;# 
   872     0191                     	;# 
   873     0191                     	;# 
   874     0192                     	;# 
   875     0193                     	;# 
   876     0193                     	;# 
   877     0193                     	;# 
   878     0194                     	;# 
   879     0195                     	;# 
   880     0196                     	;# 
   881     0197                     	;# 
   882     0199                     	;# 
   883     0199                     	;# 
   884     0199                     	;# 
   885     019A                     	;# 
   886     019A                     	;# 
   887     019A                     	;# 
   888     019B                     	;# 
   889     019B                     	;# 
   890     019B                     	;# 
   891     019B                     	;# 
   892     019B                     	;# 
   893     019C                     	;# 
   894     019C                     	;# 
   895     019C                     	;# 
   896     019D                     	;# 
   897     019D                     	;# 
   898     019D                     	;# 
   899     019E                     	;# 
   900     019E                     	;# 
   901     019E                     	;# 
   902     019F                     	;# 
   903     019F                     	;# 
   904     019F                     	;# 
   905     019F                     	;# 
   906     019F                     	;# 
   907     020C                     	;# 
   908     020D                     	;# 
   909     020E                     	;# 
   910     020F                     	;# 
   911     0210                     	;# 
   912     0211                     	;# 
   913     0211                     	;# 
   914     0212                     	;# 
   915     0212                     	;# 
   916     0213                     	;# 
   917     0213                     	;# 
   918     0214                     	;# 
   919     0214                     	;# 
   920     0215                     	;# 
   921     0215                     	;# 
   922     0215                     	;# 
   923     0215                     	;# 
   924     0216                     	;# 
   925     0216                     	;# 
   926     0217                     	;# 
   927     0217                     	;# 
   928     028C                     	;# 
   929     028D                     	;# 
   930     028E                     	;# 
   931     028F                     	;# 
   932     0290                     	;# 
   933     0291                     	;# 
   934     0291                     	;# 
   935     0292                     	;# 
   936     0293                     	;# 
   937     0298                     	;# 
   938     0298                     	;# 
   939     0299                     	;# 
   940     029A                     	;# 
   941     030C                     	;# 
   942     030D                     	;# 
   943     030E                     	;# 
   944     030F                     	;# 
   945     0310                     	;# 
   946     0311                     	;# 
   947     0311                     	;# 
   948     0312                     	;# 
   949     0313                     	;# 
   950     038C                     	;# 
   951     038D                     	;# 
   952     038E                     	;# 
   953     038F                     	;# 
   954     0390                     	;# 
   955     0391                     	;# 
   956     0392                     	;# 
   957     0393                     	;# 
   958     0394                     	;# 
   959     0395                     	;# 
   960     0396                     	;# 
   961     0397                     	;# 
   962     0398                     	;# 
   963     0399                     	;# 
   964     039D                     	;# 
   965     039E                     	;# 
   966     039F                     	;# 
   967     0511                     	;# 
   968     0513                     	;# 
   969     0515                     	;# 
   970     051A                     	;# 
   971     0591                     	;# 
   972     0592                     	;# 
   973     0592                     	;# 
   974     0593                     	;# 
   975     0594                     	;# 
   976     0594                     	;# 
   977     0595                     	;# 
   978     0596                     	;# 
   979     0596                     	;# 
   980     0E91                     	;# 
   981     0E92                     	;# 
   982     0E93                     	;# 
   983     0E94                     	;# 
   984     0E95                     	;# 
   985     0E96                     	;# 
   986     0E97                     	;# 
   987     0E98                     	;# 
   988     0E99                     	;# 
   989     0E9A                     	;# 
   990     0E9B                     	;# 
   991     0E9C                     	;# 
   992     0E9D                     	;# 
   993     0E9E                     	;# 
   994     0E9F                     	;# 
   995     0EA0                     	;# 
   996     0EA1                     	;# 
   997     0EA1                     	;# 
   998     0EA2                     	;# 
   999     0EA3                     	;# 
  1000     0EA3                     	;# 
  1001     0EA4                     	;# 
  1002     0EA5                     	;# 
  1003     0EA5                     	;# 
  1004     0EA6                     	;# 
  1005     0EA7                     	;# 
  1006     0EA7                     	;# 
  1007     0EA8                     	;# 
  1008     0EA9                     	;# 
  1009     0EAA                     	;# 
  1010     0EAB                     	;# 
  1011     0EAC                     	;# 
  1012     0EAD                     	;# 
  1013     0EAE                     	;# 
  1014     0EAF                     	;# 
  1015     0EB1                     	;# 
  1016     0EB2                     	;# 
  1017     0EB3                     	;# 
  1018     0EB4                     	;# 
  1019     0EB5                     	;# 
  1020     0EB6                     	;# 
  1021     0EB7                     	;# 
  1022     0EB8                     	;# 
  1023     0EB9                     	;# 
  1024     0EBA                     	;# 
  1025     0EBB                     	;# 
  1026     0EBC                     	;# 
  1027     0EBD                     	;# 
  1028     0EBE                     	;# 
  1029     0EBF                     	;# 
  1030     0EC0                     	;# 
  1031     0EC1                     	;# 
  1032     0EC1                     	;# 
  1033     0EC2                     	;# 
  1034     0EC3                     	;# 
  1035     0EC3                     	;# 
  1036     0EC4                     	;# 
  1037     0EC5                     	;# 
  1038     0EC5                     	;# 
  1039     0EC6                     	;# 
  1040     0EC7                     	;# 
  1041     0EC7                     	;# 
  1042     0EC8                     	;# 
  1043     0EC9                     	;# 
  1044     0ECA                     	;# 
  1045     0ECB                     	;# 
  1046     0ECC                     	;# 
  1047     0ECD                     	;# 
  1048     0ECE                     	;# 
  1049     0ECF                     	;# 
  1050     0ED1                     	;# 
  1051     0ED2                     	;# 
  1052     0ED3                     	;# 
  1053     0ED4                     	;# 
  1054     0ED5                     	;# 
  1055     0ED6                     	;# 
  1056     0ED7                     	;# 
  1057     0ED8                     	;# 
  1058     0ED9                     	;# 
  1059     0EDA                     	;# 
  1060     0EDB                     	;# 
  1061     0EDC                     	;# 
  1062     0EDD                     	;# 
  1063     0EDE                     	;# 
  1064     0EDF                     	;# 
  1065     0EE0                     	;# 
  1066     0EE1                     	;# 
  1067     0EE1                     	;# 
  1068     0EE2                     	;# 
  1069     0EE3                     	;# 
  1070     0EE3                     	;# 
  1071     0EE4                     	;# 
  1072     0EE5                     	;# 
  1073     0EE5                     	;# 
  1074     0EE6                     	;# 
  1075     0EE7                     	;# 
  1076     0EE7                     	;# 
  1077     0EE8                     	;# 
  1078     0EE9                     	;# 
  1079     0EEA                     	;# 
  1080     0EEB                     	;# 
  1081     0EEC                     	;# 
  1082     0EED                     	;# 
  1083     0EEE                     	;# 
  1084     0EEF                     	;# 
  1085     0F11                     	;# 
  1086     0F12                     	;# 
  1087     0F13                     	;# 
  1088     0F14                     	;# 
  1089     0F15                     	;# 
  1090     0F16                     	;# 
  1091     0F17                     	;# 
  1092     0F18                     	;# 
  1093     0F19                     	;# 
  1094     0F1A                     	;# 
  1095     0F1B                     	;# 
  1096     0F1C                     	;# 
  1097     0F1D                     	;# 
  1098     0F1E                     	;# 
  1099     0F1F                     	;# 
  1100     0F20                     	;# 
  1101     0F21                     	;# 
  1102     0F21                     	;# 
  1103     0F22                     	;# 
  1104     0F23                     	;# 
  1105     0F23                     	;# 
  1106     0F24                     	;# 
  1107     0F25                     	;# 
  1108     0F25                     	;# 
  1109     0F26                     	;# 
  1110     0F27                     	;# 
  1111     0F27                     	;# 
  1112     0F28                     	;# 
  1113     0F29                     	;# 
  1114     0F2A                     	;# 
  1115     0F2B                     	;# 
  1116     0F2C                     	;# 
  1117     0F2D                     	;# 
  1118     0F2E                     	;# 
  1119     0F2F                     	;# 
  1120     0FE4                     	;# 
  1121     0FE5                     	;# 
  1122     0FE6                     	;# 
  1123     0FE7                     	;# 
  1124     0FE8                     	;# 
  1125     0FE9                     	;# 
  1126     0FEA                     	;# 
  1127     0FEB                     	;# 
  1128     0FED                     	;# 
  1129     0FEE                     	;# 
  1130     0FEF                     	;_queue
  1131                           
  1132                           	psect	idataBANK1
  1133     07FE                     __pidataBANK1:
  1134                           
  1135                           ;initializer for _tail
  1136     07FE  34FF               	retlw	255
  1137     07FF  3403               	retlw	3
  1138     0011                     _PIR1bits	set	17
  1139     000E                     _PORTCbits	set	14
  1140     000F                     _PORTD	set	15
  1141     000D                     _PORTBbits	set	13
  1142     0010                     _PORTEbits	set	16
  1143     000B                     _INTCONbits	set	11
  1144     000C                     _PORTAbits	set	12
  1145     008E                     _TRISCbits	set	142
  1146     008D                     _TRISB	set	141
  1147     008E                     _TRISC	set	142
  1148     008F                     _TRISD	set	143
  1149     008C                     _TRISAbits	set	140
  1150     009E                     _ADCON1	set	158
  1151     009D                     _ADCON0bits	set	157
  1152     0091                     _PIE1bits	set	145
  1153     0090                     _TRISEbits	set	144
  1154     019B                     _SPBRG	set	411
  1155     019A                     _TXREG	set	410
  1156     0199                     _RCREG	set	409
  1157     019C                     _SPBRGH	set	412
  1158     019E                     _TXSTAbits	set	414
  1159     019D                     _RCSTAbits	set	413
  1160     019F                     _BAUDCONbits	set	415
  1161                           
  1162                           	psect	stringtext1
  1163     1000                     __pstringtext1:
  1164     1000                     STR_11:
  1165     1000  3477               	retlw	119	;'w'
  1166     1001  3472               	retlw	114	;'r'
  1167     1002  3469               	retlw	105	;'i'
  1168     1003  3474               	retlw	116	;'t'
  1169     1004  3465               	retlw	101	;'e'
  1170     1005  3420               	retlw	32	;' '
  1171     1006  3476               	retlw	118	;'v'
  1172     1007  3465               	retlw	101	;'e'
  1173     1008  3472               	retlw	114	;'r'
  1174     1009  3469               	retlw	105	;'i'
  1175     100A  3466               	retlw	102	;'f'
  1176     100B  3479               	retlw	121	;'y'
  1177     100C  3420               	retlw	32	;' '
  1178     100D  3466               	retlw	102	;'f'
  1179     100E  3461               	retlw	97	;'a'
  1180     100F  3469               	retlw	105	;'i'
  1181     1010  346C               	retlw	108	;'l'
  1182     1011  342C               	retlw	44	;','
  1183     1012  3420               	retlw	32	;' '
  1184     1013  3477               	retlw	119	;'w'
  1185     1014  3472               	retlw	114	;'r'
  1186     1015  3469               	retlw	105	;'i'
  1187     1016  3474               	retlw	116	;'t'
  1188     1017  3465               	retlw	101	;'e'
  1189     1018  343D               	retlw	61	;'='
  1190     1019  3425               	retlw	37	;'%'
  1191     101A  3430               	retlw	48	;'0'
  1192     101B  3432               	retlw	50	;'2'
  1193     101C  3478               	retlw	120	;'x'
  1194     101D  342C               	retlw	44	;','
  1195     101E  3420               	retlw	32	;' '
  1196     101F  3472               	retlw	114	;'r'
  1197     1020  3465               	retlw	101	;'e'
  1198     1021  3461               	retlw	97	;'a'
  1199     1022  3464               	retlw	100	;'d'
  1200     1023  343D               	retlw	61	;'='
  1201     1024  3425               	retlw	37	;'%'
  1202     1025  3430               	retlw	48	;'0'
  1203     1026  3432               	retlw	50	;'2'
  1204     1027  3478               	retlw	120	;'x'
  1205     1028  340A               	retlw	10
  1206     1029  3400               	retlw	0
  1207                           
  1208                           	psect	stringtext2
  1209     102A                     __pstringtext2:
  1210     102A                     STR_3:
  1211     102A  3442               	retlw	66	;'B'
  1212     102B  346C               	retlw	108	;'l'
  1213     102C  3461               	retlw	97	;'a'
  1214     102D  346E               	retlw	110	;'n'
  1215     102E  346B               	retlw	107	;'k'
  1216     102F  3420               	retlw	32	;' '
  1217     1030  3463               	retlw	99	;'c'
  1218     1031  3468               	retlw	104	;'h'
  1219     1032  3465               	retlw	101	;'e'
  1220     1033  3463               	retlw	99	;'c'
  1221     1034  346B               	retlw	107	;'k'
  1222     1035  3420               	retlw	32	;' '
  1223     1036  3466               	retlw	102	;'f'
  1224     1037  3461               	retlw	97	;'a'
  1225     1038  3469               	retlw	105	;'i'
  1226     1039  346C               	retlw	108	;'l'
  1227     103A  3420               	retlw	32	;' '
  1228     103B  3461               	retlw	97	;'a'
  1229     103C  3474               	retlw	116	;'t'
  1230     103D  3420               	retlw	32	;' '
  1231     103E  3461               	retlw	97	;'a'
  1232     103F  3464               	retlw	100	;'d'
  1233     1040  3464               	retlw	100	;'d'
  1234     1041  3472               	retlw	114	;'r'
  1235     1042  3465               	retlw	101	;'e'
  1236     1043  3473               	retlw	115	;'s'
  1237     1044  3473               	retlw	115	;'s'
  1238     1045  3420               	retlw	32	;' '
  1239     1046  3400               	retlw	0
  1240                           
  1241                           	psect	stringtext3
  1242     1047                     __pstringtext3:
  1243     1047                     STR_12:
  1244     1047  3477               	retlw	119	;'w'
  1245     1048  3472               	retlw	114	;'r'
  1246     1049  3469               	retlw	105	;'i'
  1247     104A  3474               	retlw	116	;'t'
  1248     104B  3465               	retlw	101	;'e'
  1249     104C  3420               	retlw	32	;' '
  1250     104D  3463               	retlw	99	;'c'
  1251     104E  346F               	retlw	111	;'o'
  1252     104F  346D               	retlw	109	;'m'
  1253     1050  3470               	retlw	112	;'p'
  1254     1051  346C               	retlw	108	;'l'
  1255     1052  3465               	retlw	101	;'e'
  1256     1053  3474               	retlw	116	;'t'
  1257     1054  3465               	retlw	101	;'e'
  1258     1055  3464               	retlw	100	;'d'
  1259     1056  3420               	retlw	32	;' '
  1260     1057  3426               	retlw	38	;'&'
  1261     1058  3420               	retlw	32	;' '
  1262     1059  3476               	retlw	118	;'v'
  1263     105A  3465               	retlw	101	;'e'
  1264     105B  3472               	retlw	114	;'r'
  1265     105C  3469               	retlw	105	;'i'
  1266     105D  3466               	retlw	102	;'f'
  1267     105E  3469               	retlw	105	;'i'
  1268     105F  3465               	retlw	101	;'e'
  1269     1060  3464               	retlw	100	;'d'
  1270     1061  340A               	retlw	10
  1271     1062  3400               	retlw	0
  1272                           
  1273                           	psect	stringtext4
  1274     1063                     __pstringtext4:
  1275     1063                     STR_6:
  1276     1063  3450               	retlw	80	;'P'
  1277     1064  3461               	retlw	97	;'a'
  1278     1065  3473               	retlw	115	;'s'
  1279     1066  3473               	retlw	115	;'s'
  1280     1067  3465               	retlw	101	;'e'
  1281     1068  3464               	retlw	100	;'d'
  1282     1069  3420               	retlw	32	;' '
  1283     106A  3462               	retlw	98	;'b'
  1284     106B  346C               	retlw	108	;'l'
  1285     106C  3461               	retlw	97	;'a'
  1286     106D  346E               	retlw	110	;'n'
  1287     106E  346B               	retlw	107	;'k'
  1288     106F  3420               	retlw	32	;' '
  1289     1070  3463               	retlw	99	;'c'
  1290     1071  3468               	retlw	104	;'h'
  1291     1072  3465               	retlw	101	;'e'
  1292     1073  3463               	retlw	99	;'c'
  1293     1074  346B               	retlw	107	;'k'
  1294     1075  340A               	retlw	10
  1295     1076  3400               	retlw	0
  1296                           
  1297                           	psect	stringtext5
  1298     1077                     __pstringtext5:
  1299     1077                     STR_10:
  1300     1077  3457               	retlw	87	;'W'
  1301     1078  3472               	retlw	114	;'r'
  1302     1079  3469               	retlw	105	;'i'
  1303     107A  3474               	retlw	116	;'t'
  1304     107B  3465               	retlw	101	;'e'
  1305     107C  3420               	retlw	32	;' '
  1306     107D  3461               	retlw	97	;'a'
  1307     107E  3462               	retlw	98	;'b'
  1308     107F  346F               	retlw	111	;'o'
  1309     1080  3472               	retlw	114	;'r'
  1310     1081  3474               	retlw	116	;'t'
  1311     1082  3465               	retlw	101	;'e'
  1312     1083  3464               	retlw	100	;'d'
  1313     1084  340A               	retlw	10
  1314     1085  3400               	retlw	0
  1315                           
  1316                           	psect	stringtext6
  1317     1086                     __pstringtext6:
  1318     1086                     STR_2:
  1319     1086  3443               	retlw	67	;'C'
  1320     1087  3468               	retlw	104	;'h'
  1321     1088  3465               	retlw	101	;'e'
  1322     1089  3463               	retlw	99	;'c'
  1323     108A  346B               	retlw	107	;'k'
  1324     108B  3420               	retlw	32	;' '
  1325     108C  3461               	retlw	97	;'a'
  1326     108D  3462               	retlw	98	;'b'
  1327     108E  346F               	retlw	111	;'o'
  1328     108F  3472               	retlw	114	;'r'
  1329     1090  3474               	retlw	116	;'t'
  1330     1091  3465               	retlw	101	;'e'
  1331     1092  3464               	retlw	100	;'d'
  1332     1093  340A               	retlw	10
  1333     1094  3400               	retlw	0
  1334                           
  1335                           	psect	stringtext7
  1336     1095                     __pstringtext7:
  1337     1095                     STR_7:
  1338     1095  3452               	retlw	82	;'R'
  1339     1096  3465               	retlw	101	;'e'
  1340     1097  3461               	retlw	97	;'a'
  1341     1098  3464               	retlw	100	;'d'
  1342     1099  3420               	retlw	32	;' '
  1343     109A  3461               	retlw	97	;'a'
  1344     109B  3462               	retlw	98	;'b'
  1345     109C  346F               	retlw	111	;'o'
  1346     109D  3472               	retlw	114	;'r'
  1347     109E  3474               	retlw	116	;'t'
  1348     109F  3465               	retlw	101	;'e'
  1349     10A0  3464               	retlw	100	;'d'
  1350     10A1  340A               	retlw	10
  1351     10A2  3400               	retlw	0
  1352                           
  1353                           	psect	stringtext8
  1354     10A3                     __pstringtext8:
  1355     10A3                     STR_4:
  1356     10A3  3430               	retlw	48	;'0'
  1357     10A4  3478               	retlw	120	;'x'
  1358     10A5  3425               	retlw	37	;'%'
  1359     10A6  3430               	retlw	48	;'0'
  1360     10A7  3434               	retlw	52	;'4'
  1361     10A8  3478               	retlw	120	;'x'
  1362     10A9  3420               	retlw	32	;' '
  1363     10AA  343D               	retlw	61	;'='
  1364     10AB  3420               	retlw	32	;' '
  1365     10AC  3400               	retlw	0
  1366                           
  1367                           	psect	stringtext9
  1368     10AD                     __pstringtext9:
  1369     10AD                     STR_5:
  1370     10AD  3430               	retlw	48	;'0'
  1371     10AE  3478               	retlw	120	;'x'
  1372     10AF  3425               	retlw	37	;'%'
  1373     10B0  3430               	retlw	48	;'0'
  1374     10B1  3432               	retlw	50	;'2'
  1375     10B2  3478               	retlw	120	;'x'
  1376     10B3  340A               	retlw	10
  1377     10B4  3400               	retlw	0
  1378                           
  1379                           	psect	stringtext10
  1380     10B5                     __pstringtext10:
  1381     10B5                     STR_8:
  1382     10B5  3425               	retlw	37	;'%'
  1383     10B6  3430               	retlw	48	;'0'
  1384     10B7  3434               	retlw	52	;'4'
  1385     10B8  3478               	retlw	120	;'x'
  1386     10B9  343A               	retlw	58	;':'
  1387     10BA  3420               	retlw	32	;' '
  1388     10BB  3400               	retlw	0
  1389                           
  1390                           	psect	stringtext11
  1391     10BC                     __pstringtext11:
  1392     10BC                     STR_9:
  1393     10BC  3425               	retlw	37	;'%'
  1394     10BD  3430               	retlw	48	;'0'
  1395     10BE  3432               	retlw	50	;'2'
  1396     10BF  3478               	retlw	120	;'x'
  1397     10C0  3400               	retlw	0
  1398                           
  1399                           	psect	stringtext12
  1400     10C1                     __pstringtext12:
  1401     10C1                     STR_1:
  1402     10C1  3425               	retlw	37	;'%'
  1403     10C2  3464               	retlw	100	;'d'
  1404     10C3  340A               	retlw	10
  1405     10C4  3400               	retlw	0
  1406                           
  1407                           	psect	stringtext13
  1408     0000                     __pstringtext13:
  1409                           
  1410                           	psect	cinit
  1411     003E                     start_initialization:	
  1412                           ; #config settings
  1413                           
  1414     003E                     __initialization:	;BIGRAM
  1415                           
  1416                           ; Initialize objects allocated to BANK1
  1417     003E  0021               	movlb	1	; select bank1
  1418     003F  3187  27FE  3180   	fcall	__pidataBANK1	;fetch initializer
  1419     0042  00E8               	movwf	__pdataBANK1& (0+127)
  1420     0043  3187  27FF  3180   	fcall	__pidataBANK1+1	;fetch initializer
  1421     0046  00E9               	movwf	(__pdataBANK1+1)& (0+127)
  1422                           
  1423                           ; Clear objects allocated to BIGRAM
  1424     0047  30F0               	movlw	low (0+9200)
  1425     0048  0084               	movwf	4
  1426     0049  3023               	movlw	high (0+9200)
  1427     004A  0085               	movwf	5
  1428     004B  3000               	movlw	0
  1429     004C  00FE               	movwf	btemp
  1430     004D  3004               	movlw	4
  1431     004E  00FF               	movwf	btemp+1
  1432     004F  318D  2527  3180   	fcall	clear_ram0
  1433                           
  1434                           ; Clear objects allocated to BANK1
  1435     0052  30DB               	movlw	low __pbssBANK1
  1436     0053  0084               	movwf	4
  1437     0054  3000               	movlw	high __pbssBANK1
  1438     0055  0085               	movwf	5
  1439     0056  300D               	movlw	13
  1440     0057  00FE               	movwf	btemp
  1441     0058  3000               	movlw	0
  1442     0059  00FF               	movwf	btemp+1
  1443     005A  318D  2527  3180   	fcall	clear_ram0
  1444                           
  1445                           ; Clear objects allocated to BANK2
  1446     005D  3020               	movlw	low __pbssBANK2
  1447     005E  0084               	movwf	4
  1448     005F  3001               	movlw	high __pbssBANK2
  1449     0060  0085               	movwf	5
  1450     0061  3020               	movlw	32
  1451     0062  00FE               	movwf	btemp
  1452     0063  3000               	movlw	0
  1453     0064  00FF               	movwf	btemp+1
  1454     0065  318D  2527  3180   	fcall	clear_ram0
  1455     0068                     end_of_initialization:	
  1456                           ;End of C runtime variable initialization code
  1457                           
  1458     0068                     __end_of__initialization:
  1459     0068  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1460     0069  0020               	movlb	0
  1461     006A  3184  2CEE         	ljmp	_main	;jump to C main() function
  1462                           
  1463                           	psect	bssBANK1
  1464     00DB                     __pbssBANK1:
  1465     00DB                     _width:
  1466     00DB                     	ds	2
  1467     00DD                     _prec:
  1468     00DD                     	ds	2
  1469     00DF                     _bytes_popped:
  1470     00DF                     	ds	2
  1471     00E1                     _bytes_pushed:
  1472     00E1                     	ds	2
  1473     00E3                     _head:
  1474     00E3                     	ds	2
  1475     00E5                     _flags:
  1476     00E5                     	ds	1
  1477     00E6                     _uart_ready:
  1478     00E6                     	ds	1
  1479     00E7                     _cmd_active:
  1480     00E7                     	ds	1
  1481                           
  1482                           	psect	dataBANK1
  1483     00E8                     __pdataBANK1:
  1484     00E8                     _tail:
  1485     00E8                     	ds	2
  1486                           
  1487                           	psect	bssBANK2
  1488     0120                     __pbssBANK2:
  1489     0120                     _dbuf:
  1490     0120                     	ds	32
  1491                           
  1492                           	psect	clrtext
  1493     0D27                     clear_ram0:	
  1494                           ;	Called with FSR0 containing the base address, and
  1495                           ;	btemp/btemp+1 has the size to clear
  1496                           
  1497     0D27  0064               	clrwdt	;clear the watchdog before getting into this loop
  1498     0D28                     clrloop0:
  1499     0D28  0180               	clrf	0	;clear RAM location pointed to by FSR
  1500     0D29  3101               	addfsr 0,1
  1501     0D2A  3001               	movlw	1
  1502     0D2B  02FE               	subwf	btemp,f
  1503     0D2C  3000               	movlw	0
  1504     0D2D  3BFF               	subwfb	btemp+1,f
  1505     0D2E  087F               	movf	btemp+1,w
  1506     0D2F  047E               	iorwf	btemp,w
  1507     0D30  1D03               	skipz
  1508     0D31  2D28               	goto	clrloop0	;have we reached the end yet?
  1509     0D32  3400               	retlw	0	;all done for this memory range, return
  1510                           
  1511                           	psect	cstackBANK1
  1512     00A0                     __pcstackBANK1:
  1513     00A0                     do_init@s:
  1514     00A0                     do_read@ads:	
  1515                           ; 8 bytes @ 0x0
  1516                           
  1517     00A0                     do_blank@ads:	
  1518                           ; 16 bytes @ 0x0
  1519                           
  1520     00A0                     do_write@ads:	
  1521                           ; 32 bytes @ 0x0
  1522                           
  1523                           
  1524                           ; 48 bytes @ 0x0
  1525     00A0                     	ds	8
  1526     00A8                     do_init@rate:
  1527                           
  1528                           ; 2 bytes @ 0x8
  1529     00A8                     	ds	8
  1530     00B0                     do_read@s:
  1531                           
  1532                           ; 2 bytes @ 0x10
  1533     00B0                     	ds	2
  1534     00B2                     do_read@data:
  1535                           
  1536                           ; 1 bytes @ 0x12
  1537     00B2                     	ds	1
  1538     00B3                     do_read@col:
  1539                           
  1540                           ; 1 bytes @ 0x13
  1541     00B3                     	ds	1
  1542     00B4                     do_read@addr:
  1543                           
  1544                           ; 2 bytes @ 0x14
  1545     00B4                     	ds	12
  1546     00C0                     do_blank@ok:
  1547                           
  1548                           ; 1 bytes @ 0x20
  1549     00C0                     	ds	1
  1550     00C1                     do_blank@s:
  1551                           
  1552                           ; 2 bytes @ 0x21
  1553     00C1                     	ds	2
  1554     00C3                     do_blank@data:
  1555                           
  1556                           ; 1 bytes @ 0x23
  1557     00C3                     	ds	1
  1558     00C4                     do_blank@addr:
  1559                           
  1560                           ; 2 bytes @ 0x24
  1561     00C4                     	ds	12
  1562     00D0                     do_write@s:
  1563                           
  1564                           ; 2 bytes @ 0x30
  1565     00D0                     	ds	2
  1566     00D2                     do_write@lo:
  1567                           
  1568                           ; 1 bytes @ 0x32
  1569     00D2                     	ds	1
  1570     00D3                     do_write@hi:
  1571                           
  1572                           ; 1 bytes @ 0x33
  1573     00D3                     	ds	1
  1574     00D4                     do_write@read:
  1575                           
  1576                           ; 1 bytes @ 0x34
  1577     00D4                     	ds	1
  1578     00D5                     do_write@c:
  1579                           
  1580                           ; 1 bytes @ 0x35
  1581     00D5                     	ds	1
  1582     00D6                     do_write@addr:
  1583                           
  1584                           ; 2 bytes @ 0x36
  1585     00D6                     	ds	2
  1586     00D8                     do_write@data:
  1587                           
  1588                           ; 1 bytes @ 0x38
  1589     00D8                     	ds	1
  1590     00D9                     ??_main:
  1591                           
  1592                           ; 1 bytes @ 0x39
  1593     00D9                     	ds	2
  1594                           
  1595                           	psect	cstackCOMMON
  1596     0070                     __pcstackCOMMON:
  1597     0070                     ?_uart_getc:
  1598     0070                     ??_uart_getc:	
  1599                           ; 1 bytes @ 0x0
  1600                           
  1601     0070                     ?_uart_putc:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604     0070                     ?_putch:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607     0070                     ?_setCTS:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610     0070                     ??_setCTS:	
  1611                           ; 1 bytes @ 0x0
  1612                           
  1613     0070                     ?_clear:	
  1614                           ; 1 bytes @ 0x0
  1615                           
  1616     0070                     ?_empty:	
  1617                           ; 1 bytes @ 0x0
  1618                           
  1619     0070                     ?_push:	
  1620                           ; 1 bytes @ 0x0
  1621                           
  1622     0070                     ?_pop:	
  1623                           ; 1 bytes @ 0x0
  1624                           
  1625     0070                     ?_first:	
  1626                           ; 1 bytes @ 0x0
  1627                           
  1628     0070                     ??_first:	
  1629                           ; 1 bytes @ 0x0
  1630                           
  1631     0070                     ?_charToHexDigit:	
  1632                           ; 1 bytes @ 0x0
  1633                           
  1634     0070                     ?_ports_init:	
  1635                           ; 1 bytes @ 0x0
  1636                           
  1637     0070                     ?_high_isr:	
  1638                           ; 1 bytes @ 0x0
  1639                           
  1640     0070                     ?_read_port:	
  1641                           ; 1 bytes @ 0x0
  1642                           
  1643     0070                     ?_do_init:	
  1644                           ; 1 bytes @ 0x0
  1645                           
  1646     0070                     ?_do_blank:	
  1647                           ; 1 bytes @ 0x0
  1648                           
  1649     0070                     ?_do_read:	
  1650                           ; 1 bytes @ 0x0
  1651                           
  1652     0070                     ?_write_port:	
  1653                           ; 1 bytes @ 0x0
  1654                           
  1655     0070                     ?_do_write:	
  1656                           ; 1 bytes @ 0x0
  1657                           
  1658     0070                     ?_main:	
  1659                           ; 1 bytes @ 0x0
  1660                           
  1661     0070                     ?i1_addone:	
  1662                           ; 1 bytes @ 0x0
  1663                           
  1664     0070                     setCTS@b:	
  1665                           ; 2 bytes @ 0x0
  1666                           
  1667     0070                     uart_getc@c:	
  1668                           ; 1 bytes @ 0x0
  1669                           
  1670     0070                     putch@c:	
  1671                           ; 1 bytes @ 0x0
  1672                           
  1673     0070                     i1addone@i:	
  1674                           ; 1 bytes @ 0x0
  1675                           
  1676                           
  1677                           ; 2 bytes @ 0x0
  1678     0070                     	ds	1
  1679     0071                     uart_getc@ok:
  1680                           
  1681                           ; 1 bytes @ 0x1
  1682     0071                     	ds	1
  1683     0072                     ??_push:
  1684     0072                     ??i1_addone:	
  1685                           ; 1 bytes @ 0x2
  1686                           
  1687     0072                     ?_size:	
  1688                           ; 1 bytes @ 0x2
  1689                           
  1690                           
  1691                           ; 2 bytes @ 0x2
  1692     0072                     	ds	2
  1693     0074                     ??_size:
  1694                           
  1695                           ; 1 bytes @ 0x4
  1696     0074                     	ds	1
  1697     0075                     size@s:
  1698                           
  1699                           ; 2 bytes @ 0x5
  1700     0075                     	ds	1
  1701     0076                     _push$1505:
  1702                           
  1703                           ; 2 bytes @ 0x6
  1704     0076                     	ds	2
  1705     0078                     push@c:
  1706                           
  1707                           ; 1 bytes @ 0x8
  1708     0078                     	ds	1
  1709     0079                     ??_high_isr:
  1710                           
  1711                           ; 1 bytes @ 0x9
  1712     0079                     	ds	1
  1713     007A                     high_isr@n:
  1714                           
  1715                           ; 2 bytes @ 0xA
  1716     007A                     	ds	2
  1717     007C                     high_isr@ok:
  1718                           
  1719                           ; 1 bytes @ 0xC
  1720     007C                     	ds	1
  1721     007D                     high_isr@c:
  1722                           
  1723                           ; 1 bytes @ 0xD
  1724     007D                     	ds	1
  1725                           
  1726                           	psect	cstackBANK0
  1727     0020                     __pcstackBANK0:
  1728     0020                     ?_uart_puts:
  1729     0020                     ??_uart_putc:	
  1730                           ; 1 bytes @ 0x0
  1731                           
  1732     0020                     ??_putch:	
  1733                           ; 1 bytes @ 0x0
  1734                           
  1735     0020                     ??_charToHexDigit:	
  1736                           ; 1 bytes @ 0x0
  1737                           
  1738     0020                     ??_ports_init:	
  1739                           ; 1 bytes @ 0x0
  1740                           
  1741     0020                     ?_setup_address:	
  1742                           ; 1 bytes @ 0x0
  1743                           
  1744     0020                     ??_read_port:	
  1745                           ; 1 bytes @ 0x0
  1746                           
  1747     0020                     ??_write_port:	
  1748                           ; 1 bytes @ 0x0
  1749                           
  1750     0020                     ?_memset:	
  1751                           ; 1 bytes @ 0x0
  1752                           
  1753     0020                     ?_uart_init_brg:	
  1754                           ; 2 bytes @ 0x0
  1755                           
  1756     0020                     ?_fputc:	
  1757                           ; 2 bytes @ 0x0
  1758                           
  1759     0020                     ?_addone:	
  1760                           ; 2 bytes @ 0x0
  1761                           
  1762     0020                     ?___wmul:	
  1763                           ; 2 bytes @ 0x0
  1764                           
  1765     0020                     ?___awdiv:	
  1766                           ; 2 bytes @ 0x0
  1767                           
  1768     0020                     ?___awmod:	
  1769                           ; 2 bytes @ 0x0
  1770                           
  1771     0020                     ?___lmul:	
  1772                           ; 2 bytes @ 0x0
  1773                           
  1774     0020                     charToHexDigit@c:	
  1775                           ; 4 bytes @ 0x0
  1776                           
  1777     0020                     read_port@data:	
  1778                           ; 1 bytes @ 0x0
  1779                           
  1780     0020                     uart_putc@c:	
  1781                           ; 1 bytes @ 0x0
  1782                           
  1783     0020                     addone@i:	
  1784                           ; 1 bytes @ 0x0
  1785                           
  1786     0020                     setup_address@addr:	
  1787                           ; 2 bytes @ 0x0
  1788                           
  1789     0020                     uart_puts@s:	
  1790                           ; 2 bytes @ 0x0
  1791                           
  1792     0020                     ___wmul@multiplier:	
  1793                           ; 2 bytes @ 0x0
  1794                           
  1795     0020                     ___awdiv@divisor:	
  1796                           ; 2 bytes @ 0x0
  1797                           
  1798     0020                     ___awmod@divisor:	
  1799                           ; 2 bytes @ 0x0
  1800                           
  1801     0020                     memset@dest:	
  1802                           ; 2 bytes @ 0x0
  1803                           
  1804     0020                     fputc@c:	
  1805                           ; 2 bytes @ 0x0
  1806                           
  1807     0020                     ___lmul@multiplier:	
  1808                           ; 2 bytes @ 0x0
  1809                           
  1810                           
  1811                           ; 4 bytes @ 0x0
  1812     0020                     	ds	2
  1813     0022                     ??_uart_init_brg:
  1814     0022                     ??_uart_puts:	
  1815                           ; 1 bytes @ 0x2
  1816                           
  1817     0022                     ??_addone:	
  1818                           ; 1 bytes @ 0x2
  1819                           
  1820     0022                     ??_empty:	
  1821                           ; 1 bytes @ 0x2
  1822                           
  1823     0022                     ??_pop:	
  1824                           ; 1 bytes @ 0x2
  1825                           
  1826     0022                     ??_setup_address:	
  1827                           ; 1 bytes @ 0x2
  1828                           
  1829     0022                     write_port@data:	
  1830                           ; 1 bytes @ 0x2
  1831                           
  1832     0022                     fputc@fp:	
  1833                           ; 1 bytes @ 0x2
  1834                           
  1835     0022                     ___wmul@multiplicand:	
  1836                           ; 1 bytes @ 0x2
  1837                           
  1838     0022                     ___awdiv@dividend:	
  1839                           ; 2 bytes @ 0x2
  1840                           
  1841     0022                     ___awmod@dividend:	
  1842                           ; 2 bytes @ 0x2
  1843                           
  1844     0022                     memset@c:	
  1845                           ; 2 bytes @ 0x2
  1846                           
  1847                           
  1848                           ; 2 bytes @ 0x2
  1849     0022                     	ds	1
  1850     0023                     ??_fputc:
  1851     0023                     uart_puts@p:	
  1852                           ; 1 bytes @ 0x3
  1853                           
  1854                           
  1855                           ; 2 bytes @ 0x3
  1856     0023                     	ds	1
  1857     0024                     ??___wmul:
  1858     0024                     ??___awdiv:	
  1859                           ; 1 bytes @ 0x4
  1860                           
  1861     0024                     ??___awmod:	
  1862                           ; 1 bytes @ 0x4
  1863                           
  1864     0024                     pop@c:	
  1865                           ; 1 bytes @ 0x4
  1866                           
  1867     0024                     setup_address@hi:	
  1868                           ; 1 bytes @ 0x4
  1869                           
  1870     0024                     ___wmul@product:	
  1871                           ; 1 bytes @ 0x4
  1872                           
  1873     0024                     memset@n:	
  1874                           ; 2 bytes @ 0x4
  1875                           
  1876     0024                     ___lmul@multiplicand:	
  1877                           ; 2 bytes @ 0x4
  1878                           
  1879                           
  1880                           ; 4 bytes @ 0x4
  1881     0024                     	ds	1
  1882     0025                     ___awdiv@counter:
  1883     0025                     ___awmod@counter:	
  1884                           ; 1 bytes @ 0x5
  1885                           
  1886                           
  1887                           ; 1 bytes @ 0x5
  1888     0025                     	ds	1
  1889     0026                     ??_memset:
  1890     0026                     ?_read_prec_or_width:	
  1891                           ; 1 bytes @ 0x6
  1892                           
  1893     0026                     ___awdiv@sign:	
  1894                           ; 2 bytes @ 0x6
  1895                           
  1896     0026                     ___awmod@sign:	
  1897                           ; 1 bytes @ 0x6
  1898                           
  1899     0026                     read_prec_or_width@ap:	
  1900                           ; 1 bytes @ 0x6
  1901                           
  1902     0026                     memset@p:	
  1903                           ; 1 bytes @ 0x6
  1904                           
  1905                           
  1906                           ; 2 bytes @ 0x6
  1907     0026                     	ds	1
  1908     0027                     ?_abs:
  1909     0027                     uart_init_brg@rate:	
  1910                           ; 2 bytes @ 0x7
  1911                           
  1912     0027                     ___awdiv@quotient:	
  1913                           ; 2 bytes @ 0x7
  1914                           
  1915     0027                     abs@a:	
  1916                           ; 2 bytes @ 0x7
  1917                           
  1918                           
  1919                           ; 2 bytes @ 0x7
  1920     0027                     	ds	1
  1921     0028                     ??_clear:
  1922     0028                     ??___lmul:	
  1923                           ; 1 bytes @ 0x8
  1924                           
  1925     0028                     ??_read_prec_or_width:	
  1926                           ; 1 bytes @ 0x8
  1927                           
  1928     0028                     ?_fputs:	
  1929                           ; 1 bytes @ 0x8
  1930                           
  1931     0028                     fputs@fp:	
  1932                           ; 2 bytes @ 0x8
  1933                           
  1934     0028                     ___lmul@product:	
  1935                           ; 1 bytes @ 0x8
  1936                           
  1937                           
  1938                           ; 4 bytes @ 0x8
  1939     0028                     	ds	1
  1940     0029                     ??_fputs:
  1941     0029                     ??_abs:	
  1942                           ; 1 bytes @ 0x9
  1943                           
  1944                           
  1945                           ; 1 bytes @ 0x9
  1946     0029                     	ds	2
  1947     002B                     read_prec_or_width@c:
  1948     002B                     fputs@c:	
  1949                           ; 1 bytes @ 0xB
  1950                           
  1951                           
  1952                           ; 1 bytes @ 0xB
  1953     002B                     	ds	1
  1954     002C                     ?___lldiv:
  1955     002C                     read_prec_or_width@n:	
  1956                           ; 4 bytes @ 0xC
  1957                           
  1958     002C                     fputs@i:	
  1959                           ; 2 bytes @ 0xC
  1960                           
  1961     002C                     ___lldiv@divisor:	
  1962                           ; 2 bytes @ 0xC
  1963                           
  1964                           
  1965                           ; 4 bytes @ 0xC
  1966     002C                     	ds	2
  1967     002E                     read_prec_or_width@fmt:
  1968     002E                     fputs@s:	
  1969                           ; 1 bytes @ 0xE
  1970                           
  1971                           
  1972                           ; 1 bytes @ 0xE
  1973     002E                     	ds	1
  1974     002F                     ?_pad:
  1975     002F                     pad@buf:	
  1976                           ; 1 bytes @ 0xF
  1977                           
  1978                           
  1979                           ; 1 bytes @ 0xF
  1980     002F                     	ds	1
  1981     0030                     pad@p:
  1982     0030                     ___lldiv@dividend:	
  1983                           ; 2 bytes @ 0x10
  1984                           
  1985                           
  1986                           ; 4 bytes @ 0x10
  1987     0030                     	ds	2
  1988     0032                     ??_pad:
  1989                           
  1990                           ; 1 bytes @ 0x12
  1991     0032                     	ds	1
  1992     0033                     pad@i:
  1993                           
  1994                           ; 2 bytes @ 0x13
  1995     0033                     	ds	1
  1996     0034                     ??___lldiv:
  1997                           
  1998                           ; 1 bytes @ 0x14
  1999     0034                     	ds	1
  2000     0035                     pad@fp:
  2001     0035                     ___lldiv@quotient:	
  2002                           ; 1 bytes @ 0x15
  2003                           
  2004                           
  2005                           ; 4 bytes @ 0x15
  2006     0035                     	ds	1
  2007     0036                     ?_dtoa:
  2008     0036                     ?_xtoa:	
  2009                           ; 1 bytes @ 0x16
  2010                           
  2011     0036                     dtoa@d:	
  2012                           ; 1 bytes @ 0x16
  2013                           
  2014     0036                     xtoa@d:	
  2015                           ; 2 bytes @ 0x16
  2016                           
  2017                           
  2018                           ; 2 bytes @ 0x16
  2019     0036                     	ds	2
  2020     0038                     ??_dtoa:
  2021     0038                     ??_xtoa:	
  2022                           ; 1 bytes @ 0x18
  2023                           
  2024                           
  2025                           ; 1 bytes @ 0x18
  2026     0038                     	ds	1
  2027     0039                     ___lldiv@counter:
  2028     0039                     xtoa@fp:	
  2029                           ; 1 bytes @ 0x19
  2030                           
  2031     0039                     _dtoa$1213:	
  2032                           ; 1 bytes @ 0x19
  2033                           
  2034                           
  2035                           ; 2 bytes @ 0x19
  2036     0039                     	ds	1
  2037     003A                     ?_uart_init:
  2038     003A                     xtoa@p:	
  2039                           ; 1 bytes @ 0x1A
  2040                           
  2041     003A                     uart_init@baud_rate:	
  2042                           ; 1 bytes @ 0x1A
  2043                           
  2044                           
  2045                           ; 4 bytes @ 0x1A
  2046     003A                     	ds	1
  2047     003B                     dtoa@fp:
  2048     003B                     xtoa@w:	
  2049                           ; 1 bytes @ 0x1B
  2050                           
  2051                           
  2052                           ; 2 bytes @ 0x1B
  2053     003B                     	ds	1
  2054     003C                     dtoa@p:
  2055                           
  2056                           ; 1 bytes @ 0x1C
  2057     003C                     	ds	1
  2058     003D                     xtoa@c:
  2059     003D                     dtoa@w:	
  2060                           ; 1 bytes @ 0x1D
  2061                           
  2062                           
  2063                           ; 2 bytes @ 0x1D
  2064     003D                     	ds	1
  2065     003E                     ??_uart_init:
  2066     003E                     xtoa@i:	
  2067                           ; 1 bytes @ 0x1E
  2068                           
  2069                           
  2070                           ; 2 bytes @ 0x1E
  2071     003E                     	ds	1
  2072     003F                     dtoa@s:
  2073                           
  2074                           ; 1 bytes @ 0x1F
  2075     003F                     	ds	1
  2076     0040                     dtoa@i:
  2077                           
  2078                           ; 2 bytes @ 0x20
  2079     0040                     	ds	2
  2080     0042                     ?_vfpfcnvrt:
  2081     0042                     vfpfcnvrt@fmt:	
  2082                           ; 1 bytes @ 0x22
  2083                           
  2084     0042                     uart_init@n:	
  2085                           ; 1 bytes @ 0x22
  2086                           
  2087                           
  2088                           ; 4 bytes @ 0x22
  2089     0042                     	ds	1
  2090     0043                     vfpfcnvrt@ap:
  2091                           
  2092                           ; 1 bytes @ 0x23
  2093     0043                     	ds	1
  2094     0044                     ??_vfpfcnvrt:
  2095                           
  2096                           ; 1 bytes @ 0x24
  2097     0044                     	ds	2
  2098     0046                     uart_init@factor:
  2099                           
  2100                           ; 1 bytes @ 0x26
  2101     0046                     	ds	2
  2102     0048                     vfpfcnvrt@done:
  2103                           
  2104                           ; 1 bytes @ 0x28
  2105     0048                     	ds	1
  2106     0049                     vfpfcnvrt@convarg:
  2107                           
  2108                           ; 4 bytes @ 0x29
  2109     0049                     	ds	4
  2110     004D                     vfpfcnvrt@fp:
  2111                           
  2112                           ; 1 bytes @ 0x2D
  2113     004D                     	ds	1
  2114     004E                     vfpfcnvrt@cp:
  2115                           
  2116                           ; 2 bytes @ 0x2E
  2117     004E                     	ds	2
  2118     0050                     ?_vfprintf:
  2119     0050                     vfprintf@fmt:	
  2120                           ; 2 bytes @ 0x30
  2121                           
  2122                           
  2123                           ; 2 bytes @ 0x30
  2124     0050                     	ds	2
  2125     0052                     vfprintf@ap:
  2126                           
  2127                           ; 1 bytes @ 0x32
  2128     0052                     	ds	1
  2129     0053                     ??_vfprintf:
  2130                           
  2131                           ; 1 bytes @ 0x33
  2132     0053                     	ds	1
  2133     0054                     vfprintf@fp:
  2134                           
  2135                           ; 1 bytes @ 0x34
  2136     0054                     	ds	1
  2137     0055                     vfprintf@cfmt:
  2138                           
  2139                           ; 2 bytes @ 0x35
  2140     0055                     	ds	2
  2141     0057                     ?_sprintf:
  2142     0057                     sprintf@fmt:	
  2143                           ; 2 bytes @ 0x37
  2144                           
  2145                           
  2146                           ; 2 bytes @ 0x37
  2147     0057                     	ds	6
  2148     005D                     ??_sprintf:
  2149                           
  2150                           ; 1 bytes @ 0x3D
  2151     005D                     	ds	1
  2152     005E                     sprintf@ap:
  2153                           
  2154                           ; 1 bytes @ 0x3E
  2155     005E                     	ds	1
  2156     005F                     sprintf@s:
  2157                           
  2158                           ; 1 bytes @ 0x3F
  2159     005F                     	ds	1
  2160     0060                     sprintf@f:
  2161                           
  2162                           ; 11 bytes @ 0x40
  2163     0060                     	ds	11
  2164     006B                     ??_do_init:
  2165     006B                     ??_do_blank:	
  2166                           ; 1 bytes @ 0x4B
  2167                           
  2168     006B                     ??_do_read:	
  2169                           ; 1 bytes @ 0x4B
  2170                           
  2171     006B                     ??_do_write:	
  2172                           ; 1 bytes @ 0x4B
  2173                           
  2174                           
  2175                           ; 1 bytes @ 0x4B
  2176     006B                     	ds	4
  2177     006F                     main@cmd:
  2178                           
  2179                           ; 1 bytes @ 0x4F
  2180     006F                     	ds	1
  2181                           
  2182                           	psect	maintext
  2183     04EE                     __pmaintext:	
  2184 ;;
  2185 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2186 ;;
  2187 ;; *************** function _main *****************
  2188 ;; Defined at:
  2189 ;;		line 515 in file "main.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;		None
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  cmd             1   79[BANK0 ] unsigned char 
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  1    wreg      void 
  2196 ;; Registers used:
  2197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2198 ;; Tracked objects:
  2199 ;;		On entry : B1F/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2204 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2205 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2206 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2207 ;;Total ram usage:        3 bytes
  2208 ;; Hardware stack levels required when called: 12
  2209 ;; This function calls:
  2210 ;;		_clear
  2211 ;;		_do_blank
  2212 ;;		_do_init
  2213 ;;		_do_read
  2214 ;;		_do_write
  2215 ;;		_pop
  2216 ;;		_ports_init
  2217 ;;		_uart_init
  2218 ;; This function is called by:
  2219 ;;		Startup code after reset
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223     04EE                     _main:	
  2224                           ;psect for function _main
  2225                           
  2226     04EE                     l2667:	
  2227                           ;incstack = 0
  2228                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2229                           
  2230                           
  2231                           ;main.c: 518:     uart_init(0);
  2232     04EE  3000               	movlw	0
  2233     04EF  0020               	movlb	0	; select bank0
  2234     04F0  00BD               	movwf	uart_init@baud_rate+3
  2235     04F1  3000               	movlw	0
  2236     04F2  00BC               	movwf	uart_init@baud_rate+2
  2237     04F3  3000               	movlw	0
  2238     04F4  00BB               	movwf	uart_init@baud_rate+1
  2239     04F5  3000               	movlw	0
  2240     04F6  00BA               	movwf	uart_init@baud_rate
  2241     04F7  3182  221B  3184   	fcall	_uart_init
  2242                           
  2243                           ;main.c: 521:     ports_init();
  2244     04FA  318D  25BE  3184   	fcall	_ports_init
  2245     04FD                     l2669:
  2246                           
  2247                           ;main.c: 524:     do_init();
  2248     04FD  318E  26B5  3184   	fcall	_do_init
  2249     0500                     l2671:
  2250                           
  2251                           ;main.c: 529:         PORTEbits.RE0 = 1;
  2252     0500  0020               	movlb	0	; select bank0
  2253     0501  1410               	bsf	16,0	;volatile
  2254     0502                     l2673:
  2255                           
  2256                           ;main.c: 530:         _delay((unsigned long)((250)*(20000000/4000.0)));
  2257     0502  3007               	movlw	7
  2258     0503  0021               	movlb	1	; select bank1
  2259     0504  00DA               	movwf	(??_main^(0+128)+1)
  2260     0505  3058               	movlw	88
  2261     0506  00D9               	movwf	??_main^(0+128)
  2262     0507  3059               	movlw	89
  2263     0508                     u2397:
  2264     0508  0B89               	decfsz	9,f
  2265     0509  2D08               	goto	u2397
  2266     050A  0BD9               	decfsz	??_main^(0+128),f
  2267     050B  2D08               	goto	u2397
  2268     050C  0BDA               	decfsz	(??_main^(0+128)+1),f
  2269     050D  2D08               	goto	u2397
  2270     050E  3200               	nop2
  2271     050F                     l2675:
  2272                           
  2273                           ;main.c: 531:         PORTEbits.RE0 = 0;
  2274     050F  0020               	movlb	0	; select bank0
  2275     0510  1010               	bcf	16,0	;volatile
  2276     0511                     l2677:
  2277                           
  2278                           ;main.c: 532:         PORTEbits.RE1 = 0;
  2279     0511  1090               	bcf	16,1	;volatile
  2280     0512                     l2679:
  2281                           
  2282                           ;main.c: 533:         PORTEbits.RE2 = 0;
  2283     0512  1110               	bcf	16,2	;volatile
  2284     0513                     l2681:
  2285                           
  2286                           ;main.c: 534:         _delay((unsigned long)((250)*(20000000/4000.0)));
  2287     0513  3007               	movlw	7
  2288     0514  0021               	movlb	1	; select bank1
  2289     0515  00DA               	movwf	(??_main^(0+128)+1)
  2290     0516  3058               	movlw	88
  2291     0517  00D9               	movwf	??_main^(0+128)
  2292     0518  3059               	movlw	89
  2293     0519                     u2407:
  2294     0519  0B89               	decfsz	9,f
  2295     051A  2D19               	goto	u2407
  2296     051B  0BD9               	decfsz	??_main^(0+128),f
  2297     051C  2D19               	goto	u2407
  2298     051D  0BDA               	decfsz	(??_main^(0+128)+1),f
  2299     051E  2D19               	goto	u2407
  2300     051F  3200               	nop2
  2301     0520                     l2683:
  2302                           
  2303                           ;main.c: 536:         if (cmd_active) {
  2304     0520  0021               	movlb	1	; select bank1
  2305     0521  0867               	movf	_cmd_active^(0+128),w
  2306     0522  1903               	btfsc	3,2
  2307     0523  2D25               	goto	u2351
  2308     0524  2D26               	goto	u2350
  2309     0525                     u2351:
  2310     0525  2D00               	goto	l2671
  2311     0526                     u2350:
  2312     0526                     l2685:
  2313                           
  2314                           ;main.c: 538:             PORTEbits.RE1 = 1;
  2315     0526  0020               	movlb	0	; select bank0
  2316     0527  1490               	bsf	16,1	;volatile
  2317     0528                     l2687:
  2318                           
  2319                           ;main.c: 541:             pop();
  2320     0528  318F  27C5  3184   	fcall	_pop
  2321                           
  2322                           ;main.c: 543:             char cmd = pop();
  2323     052B  318F  27C5  3184   	fcall	_pop
  2324     052E  0020               	movlb	0	; select bank0
  2325     052F  00EF               	movwf	main@cmd
  2326     0530                     l2689:
  2327                           
  2328                           ;main.c: 546:             if (cmd == '1') {
  2329     0530  3031               	movlw	49
  2330     0531  066F               	xorwf	main@cmd,w
  2331     0532  1D03               	btfss	3,2
  2332     0533  2D35               	goto	u2361
  2333     0534  2D36               	goto	u2360
  2334     0535                     u2361:
  2335     0535  2D3A               	goto	l2693
  2336     0536                     u2360:
  2337     0536                     l2691:
  2338                           
  2339                           ;main.c: 547:                 do_read();
  2340     0536  3183  235F  3184   	fcall	_do_read
  2341                           
  2342                           ;main.c: 548:             }
  2343     0539  2D4D               	goto	l2701
  2344     053A                     l2693:
  2345     053A  3032               	movlw	50
  2346     053B  066F               	xorwf	main@cmd,w
  2347     053C  1D03               	btfss	3,2
  2348     053D  2D3F               	goto	u2371
  2349     053E  2D40               	goto	u2370
  2350     053F                     u2371:
  2351     053F  2D44               	goto	l2697
  2352     0540                     u2370:
  2353     0540                     l2695:
  2354                           
  2355                           ;main.c: 550:                 do_write();
  2356     0540  3182  22C8  3184   	fcall	_do_write
  2357                           
  2358                           ;main.c: 551:             }
  2359     0543  2D4D               	goto	l2701
  2360     0544                     l2697:
  2361     0544  3033               	movlw	51
  2362     0545  066F               	xorwf	main@cmd,w
  2363     0546  1D03               	btfss	3,2
  2364     0547  2D49               	goto	u2381
  2365     0548  2D4A               	goto	u2380
  2366     0549                     u2381:
  2367     0549  2D4D               	goto	l2701
  2368     054A                     u2380:
  2369     054A                     l2699:
  2370                           
  2371                           ;main.c: 553:                 do_blank();
  2372     054A  3183  23EB  3184   	fcall	_do_blank
  2373     054D                     l2701:
  2374                           
  2375                           ;main.c: 557:             clear();
  2376     054D  3187  27E6  3184   	fcall	_clear
  2377     0550  2D00               	goto	l2671
  2378     0551  3180  283C         	ljmp	start
  2379     0553                     __end_of_main:
  2380                           
  2381                           	psect	text1
  2382     021B                     __ptext1:	
  2383 ;; *************** function _uart_init *****************
  2384 ;; Defined at:
  2385 ;;		line 28 in file "uart.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;  baud_rate       4   26[BANK0 ] const unsigned long 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;  n               4   34[BANK0 ] unsigned long 
  2390 ;;  factor          1   38[BANK0 ] unsigned char 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg, status,2, status,0, pclath, cstack
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2400 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2401 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2402 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2403 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2404 ;;Total ram usage:       13 bytes
  2405 ;; Hardware stack levels used: 1
  2406 ;; Hardware stack levels required when called: 4
  2407 ;; This function calls:
  2408 ;;		___lldiv
  2409 ;;		___lmul
  2410 ;; This function is called by:
  2411 ;;		_main
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415     021B                     _uart_init:	
  2416                           ;psect for function _uart_init
  2417                           
  2418     021B                     l2607:	
  2419                           ;incstack = 0
  2420                           ; Regs used in _uart_init: [wreg+status,2+status,0+pclath+cstack]
  2421                           
  2422                           
  2423                           ;uart.c: 28: void uart_init(const uint32_t baud_rate);uart.c: 29: {;uart.c: 31:     INTC
      +                          ONbits.GIE = 0;
  2424     021B  138B               	bcf	11,7	;volatile
  2425                           
  2426                           ;uart.c: 33:     PIE1bits.TXIE = 1;
  2427     021C  0021               	movlb	1	; select bank1
  2428     021D  1611               	bsf	17,4	;volatile
  2429                           
  2430                           ;uart.c: 34:     PIE1bits.RCIE = 1;
  2431     021E  1691               	bsf	17,5	;volatile
  2432                           
  2433                           ;uart.c: 37:     TRISCbits.TRISC6=1;
  2434     021F  170E               	bsf	14,6	;volatile
  2435                           
  2436                           ;uart.c: 38:     TRISCbits.TRISC7=1;
  2437     0220  178E               	bsf	14,7	;volatile
  2438                           
  2439                           ;uart.c: 40:     BAUDCONbits.BRG16 = 1;
  2440     0221  0023               	movlb	3	; select bank3
  2441     0222  159F               	bsf	31,3	;volatile
  2442                           
  2443                           ;uart.c: 41:     BAUDCONbits.WUE = 0;
  2444     0223  109F               	bcf	31,1	;volatile
  2445                           
  2446                           ;uart.c: 43:     RCSTAbits.CREN = 1;
  2447     0224  161D               	bsf	29,4	;volatile
  2448                           
  2449                           ;uart.c: 44:     RCSTAbits.SPEN = 1;
  2450     0225  179D               	bsf	29,7	;volatile
  2451                           
  2452                           ;uart.c: 46:     TXSTAbits.SYNC = 0;
  2453     0226  121E               	bcf	30,4	;volatile
  2454                           
  2455                           ;uart.c: 47:     TXSTAbits.BRGH = 1;
  2456     0227  151E               	bsf	30,2	;volatile
  2457                           
  2458                           ;uart.c: 48:     TXSTAbits.TXEN = 1;
  2459     0228  169E               	bsf	30,5	;volatile
  2460     0229                     l2609:
  2461                           
  2462                           ;uart.c: 51:     if (baud_rate != 0) {
  2463     0229  0020               	movlb	0	; select bank0
  2464     022A  083D               	movf	uart_init@baud_rate+3,w
  2465     022B  043C               	iorwf	uart_init@baud_rate+2,w
  2466     022C  043B               	iorwf	uart_init@baud_rate+1,w
  2467     022D  043A               	iorwf	uart_init@baud_rate,w
  2468     022E  1903               	skipnz
  2469     022F  2A31               	goto	u2211
  2470     0230  2A32               	goto	u2210
  2471     0231                     u2211:
  2472     0231  2AC2               	goto	l2639
  2473     0232                     u2210:
  2474     0232                     l2611:
  2475                           
  2476                           ;uart.c: 53:         uint8_t factor;;uart.c: 54:         if (BAUDCONbits.BRG16 && TXSTAb
      +                          its.BRGH)
  2477     0232  0023               	movlb	3	; select bank3
  2478     0233  1D9F               	btfss	31,3	;volatile
  2479     0234  2A36               	goto	u2221
  2480     0235  2A37               	goto	u2220
  2481     0236                     u2221:
  2482     0236  2A3F               	goto	l195
  2483     0237                     u2220:
  2484     0237                     l2613:
  2485     0237  1D1E               	btfss	30,2	;volatile
  2486     0238  2A3A               	goto	u2231
  2487     0239  2A3B               	goto	u2230
  2488     023A                     u2231:
  2489     023A  2A3F               	goto	l195
  2490     023B                     u2230:
  2491     023B                     l2615:
  2492                           
  2493                           ;uart.c: 55:             factor = 4;
  2494     023B  3004               	movlw	4
  2495     023C  0020               	movlb	0	; select bank0
  2496     023D  00C6               	movwf	uart_init@factor
  2497     023E  2A60               	goto	l2629
  2498     023F                     l195:	
  2499                           ;uart.c: 56:         else if (BAUDCONbits.BRG16 && !TXSTAbits.BRGH)
  2500                           
  2501     023F  1D9F               	btfss	31,3	;volatile
  2502     0240  2A42               	goto	u2241
  2503     0241  2A43               	goto	u2240
  2504     0242                     u2241:
  2505     0242  2A4B               	goto	l197
  2506     0243                     u2240:
  2507     0243                     l2617:
  2508     0243  191E               	btfsc	30,2	;volatile
  2509     0244  2A46               	goto	u2251
  2510     0245  2A47               	goto	u2250
  2511     0246                     u2251:
  2512     0246  2A4B               	goto	l197
  2513     0247                     u2250:
  2514     0247                     l2619:
  2515                           
  2516                           ;uart.c: 57:             factor = 16;
  2517     0247  3010               	movlw	16
  2518     0248  0020               	movlb	0	; select bank0
  2519     0249  00C6               	movwf	uart_init@factor
  2520     024A  2A60               	goto	l2629
  2521     024B                     l197:	
  2522                           ;uart.c: 58:         else if (!BAUDCONbits.BRG16 && TXSTAbits.BRGH)
  2523                           
  2524     024B  199F               	btfsc	31,3	;volatile
  2525     024C  2A4E               	goto	u2261
  2526     024D  2A4F               	goto	u2260
  2527     024E                     u2261:
  2528     024E  2A54               	goto	l199
  2529     024F                     u2260:
  2530     024F                     l2621:
  2531     024F  1D1E               	btfss	30,2	;volatile
  2532     0250  2A52               	goto	u2271
  2533     0251  2A53               	goto	u2270
  2534     0252                     u2271:
  2535     0252  2A54               	goto	l199
  2536     0253                     u2270:
  2537     0253  2A47               	goto	l2619
  2538     0254                     l199:	
  2539                           ;uart.c: 60:         else if (!BAUDCONbits.BRG16 && !TXSTAbits.BRGH)
  2540                           
  2541     0254  199F               	btfsc	31,3	;volatile
  2542     0255  2A57               	goto	u2281
  2543     0256  2A58               	goto	u2280
  2544     0257                     u2281:
  2545     0257  2A60               	goto	l198
  2546     0258                     u2280:
  2547     0258                     l2625:
  2548     0258  191E               	btfsc	30,2	;volatile
  2549     0259  2A5B               	goto	u2291
  2550     025A  2A5C               	goto	u2290
  2551     025B                     u2291:
  2552     025B  2A60               	goto	l198
  2553     025C                     u2290:
  2554     025C                     l2627:
  2555                           
  2556                           ;uart.c: 61:             factor = 64;
  2557     025C  3040               	movlw	64
  2558     025D  0020               	movlb	0	; select bank0
  2559     025E  00C6               	movwf	uart_init@factor
  2560     025F  2A60               	goto	l2629
  2561     0260                     l198:
  2562     0260                     l2629:
  2563                           
  2564                           ;uart.c: 62:         if (TXSTAbits.SYNC)
  2565     0260  0023               	movlb	3	; select bank3
  2566     0261  1E1E               	btfss	30,4	;volatile
  2567     0262  2A64               	goto	u2301
  2568     0263  2A65               	goto	u2300
  2569     0264                     u2301:
  2570     0264  2A68               	goto	l2633
  2571     0265                     u2300:
  2572     0265                     l2631:
  2573                           
  2574                           ;uart.c: 63:             factor = 64;
  2575     0265  3040               	movlw	64
  2576     0266  0020               	movlb	0	; select bank0
  2577     0267  00C6               	movwf	uart_init@factor
  2578     0268                     l2633:
  2579                           
  2580                           ;uart.c: 66:         uint32_t n = (int32_t) 20000000 / (factor * baud_rate) - 1u ;
  2581     0268  0020               	movlb	0	; select bank0
  2582     0269  0846               	movf	uart_init@factor,w
  2583     026A  00BE               	movwf	??_uart_init
  2584     026B  01BF               	clrf	??_uart_init+1
  2585     026C  01C0               	clrf	??_uart_init+2
  2586     026D  01C1               	clrf	??_uart_init+3
  2587     026E  0841               	movf	??_uart_init+3,w
  2588     026F  00A3               	movwf	___lmul@multiplier+3
  2589     0270  0840               	movf	??_uart_init+2,w
  2590     0271  00A2               	movwf	___lmul@multiplier+2
  2591     0272  083F               	movf	??_uart_init+1,w
  2592     0273  00A1               	movwf	___lmul@multiplier+1
  2593     0274  083E               	movf	??_uart_init,w
  2594     0275  00A0               	movwf	___lmul@multiplier
  2595     0276  083D               	movf	uart_init@baud_rate+3,w
  2596     0277  00A7               	movwf	___lmul@multiplicand+3
  2597     0278  083C               	movf	uart_init@baud_rate+2,w
  2598     0279  00A6               	movwf	___lmul@multiplicand+2
  2599     027A  083B               	movf	uart_init@baud_rate+1,w
  2600     027B  00A5               	movwf	___lmul@multiplicand+1
  2601     027C  083A               	movf	uart_init@baud_rate,w
  2602     027D  00A4               	movwf	___lmul@multiplicand
  2603     027E  318F  275A  3182   	fcall	___lmul
  2604     0281  0020               	movlb	0	; select bank0
  2605     0282  0823               	movf	?___lmul+3,w
  2606     0283  00AF               	movwf	___lldiv@divisor+3
  2607     0284  0822               	movf	?___lmul+2,w
  2608     0285  00AE               	movwf	___lldiv@divisor+2
  2609     0286  0821               	movf	?___lmul+1,w
  2610     0287  00AD               	movwf	___lldiv@divisor+1
  2611     0288  0820               	movf	?___lmul,w
  2612     0289  00AC               	movwf	___lldiv@divisor
  2613     028A  3001               	movlw	1
  2614     028B  00B3               	movwf	___lldiv@dividend+3
  2615     028C  3031               	movlw	49
  2616     028D  00B2               	movwf	___lldiv@dividend+2
  2617     028E  302D               	movlw	45
  2618     028F  00B1               	movwf	___lldiv@dividend+1
  2619     0290  3000               	movlw	0
  2620     0291  00B0               	movwf	___lldiv@dividend
  2621     0292  3186  2613  3182   	fcall	___lldiv
  2622     0295  30FF               	movlw	255
  2623     0296  0020               	movlb	0	; select bank0
  2624     0297  072C               	addwf	?___lldiv,w
  2625     0298  00C2               	movwf	uart_init@n
  2626     0299  30FF               	movlw	255
  2627     029A  3D2D               	addwfc	?___lldiv+1,w
  2628     029B  00C3               	movwf	uart_init@n+1
  2629     029C  30FF               	movlw	255
  2630     029D  3D2E               	addwfc	?___lldiv+2,w
  2631     029E  00C4               	movwf	uart_init@n+2
  2632     029F  30FF               	movlw	255
  2633     02A0  3D2F               	addwfc	?___lldiv+3,w
  2634     02A1  00C5               	movwf	uart_init@n+3
  2635     02A2                     l2635:
  2636                           
  2637                           ;uart.c: 67:         SPBRGH = (n & 0xFF00) >> 8;
  2638     02A2  0842               	movf	uart_init@n,w
  2639     02A3  00BE               	movwf	??_uart_init
  2640     02A4  0843               	movf	uart_init@n+1,w
  2641     02A5  00BF               	movwf	??_uart_init+1
  2642     02A6  0844               	movf	uart_init@n+2,w
  2643     02A7  00C0               	movwf	??_uart_init+2
  2644     02A8  0845               	movf	uart_init@n+3,w
  2645     02A9  00C1               	movwf	??_uart_init+3
  2646     02AA  3008               	movlw	8
  2647     02AB                     u2315:
  2648     02AB  36C1               	lsrf	??_uart_init+3,f
  2649     02AC  0CC0               	rrf	??_uart_init+2,f
  2650     02AD  0CBF               	rrf	??_uart_init+1,f
  2651     02AE  0CBE               	rrf	??_uart_init,f
  2652     02AF                     u2310:
  2653     02AF  0B89               	decfsz	9,f
  2654     02B0  2AAB               	goto	u2315
  2655     02B1  083E               	movf	??_uart_init,w
  2656     02B2  0023               	movlb	3	; select bank3
  2657     02B3  009C               	movwf	28	;volatile
  2658     02B4                     l2637:
  2659                           
  2660                           ;uart.c: 68:         SPBRG = n & 0x00FF;
  2661     02B4  30FF               	movlw	255
  2662     02B5  0020               	movlb	0	; select bank0
  2663     02B6  0542               	andwf	uart_init@n,w
  2664     02B7  00BE               	movwf	??_uart_init
  2665     02B8  3000               	movlw	0
  2666     02B9  0543               	andwf	uart_init@n+1,w
  2667     02BA  00BF               	movwf	??_uart_init+1
  2668     02BB  083E               	movf	??_uart_init,w
  2669     02BC  0023               	movlb	3	; select bank3
  2670     02BD  009B               	movwf	27	;volatile
  2671     02BE  0020               	movlb	0	; select bank0
  2672     02BF  083F               	movf	??_uart_init+1,w
  2673     02C0  0023               	movlb	3	; select bank3
  2674     02C1  009C               	movwf	28	;volatile
  2675     02C2                     l2639:
  2676                           
  2677                           ;uart.c: 72:     INTCONbits.PEIE = 1;
  2678     02C2  170B               	bsf	11,6	;volatile
  2679     02C3                     l2641:
  2680                           
  2681                           ;uart.c: 76:     PIE1bits.RCIE=1;
  2682     02C3  0021               	movlb	1	; select bank1
  2683     02C4  1691               	bsf	17,5	;volatile
  2684     02C5                     l2643:
  2685                           
  2686                           ;uart.c: 79:     PIE1bits.TXIE=0;
  2687     02C5  1211               	bcf	17,4	;volatile
  2688     02C6                     l2645:
  2689                           
  2690                           ;uart.c: 82:     INTCONbits.GIE = 1;
  2691     02C6  178B               	bsf	11,7	;volatile
  2692     02C7                     l203:
  2693     02C7  0008               	return
  2694     02C8                     __end_of_uart_init:
  2695                           
  2696                           	psect	text2
  2697     0F5A                     __ptext2:	
  2698 ;; *************** function ___lmul *****************
  2699 ;; Defined at:
  2700 ;;		line 15 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/Umul32.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2703 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  product         4    8[BANK0 ] unsigned long 
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  4    0[BANK0 ] unsigned long 
  2708 ;; Registers used:
  2709 ;;		wreg, status,2, status,0
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2715 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2716 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2718 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2719 ;;Total ram usage:       12 bytes
  2720 ;; Hardware stack levels used: 1
  2721 ;; Hardware stack levels required when called: 3
  2722 ;; This function calls:
  2723 ;;		Nothing
  2724 ;; This function is called by:
  2725 ;;		_uart_init
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729     0F5A                     ___lmul:	
  2730                           ;psect for function ___lmul
  2731                           
  2732     0F5A                     l2333:	
  2733                           ;incstack = 0
  2734                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2735                           
  2736     0F5A  3000               	movlw	0
  2737     0F5B  0020               	movlb	0	; select bank0
  2738     0F5C  00AB               	movwf	___lmul@product+3
  2739     0F5D  3000               	movlw	0
  2740     0F5E  00AA               	movwf	___lmul@product+2
  2741     0F5F  3000               	movlw	0
  2742     0F60  00A9               	movwf	___lmul@product+1
  2743     0F61  3000               	movlw	0
  2744     0F62  00A8               	movwf	___lmul@product
  2745     0F63                     l2335:
  2746     0F63  1C20               	btfss	___lmul@multiplier,0
  2747     0F64  2F66               	goto	u1921
  2748     0F65  2F67               	goto	u1920
  2749     0F66                     u1921:
  2750     0F66  2F6F               	goto	l2339
  2751     0F67                     u1920:
  2752     0F67                     l2337:
  2753     0F67  0824               	movf	___lmul@multiplicand,w
  2754     0F68  07A8               	addwf	___lmul@product,f
  2755     0F69  0825               	movf	___lmul@multiplicand+1,w
  2756     0F6A  3DA9               	addwfc	___lmul@product+1,f
  2757     0F6B  0826               	movf	___lmul@multiplicand+2,w
  2758     0F6C  3DAA               	addwfc	___lmul@product+2,f
  2759     0F6D  0827               	movf	___lmul@multiplicand+3,w
  2760     0F6E  3DAB               	addwfc	___lmul@product+3,f
  2761     0F6F                     l2339:
  2762     0F6F  3001               	movlw	1
  2763     0F70                     u1935:
  2764     0F70  35A4               	lslf	___lmul@multiplicand,f
  2765     0F71  0DA5               	rlf	___lmul@multiplicand+1,f
  2766     0F72  0DA6               	rlf	___lmul@multiplicand+2,f
  2767     0F73  0DA7               	rlf	___lmul@multiplicand+3,f
  2768     0F74  0B89               	decfsz	9,f
  2769     0F75  2F70               	goto	u1935
  2770     0F76                     l2341:
  2771     0F76  3001               	movlw	1
  2772     0F77                     u1945:
  2773     0F77  36A3               	lsrf	___lmul@multiplier+3,f
  2774     0F78  0CA2               	rrf	___lmul@multiplier+2,f
  2775     0F79  0CA1               	rrf	___lmul@multiplier+1,f
  2776     0F7A  0CA0               	rrf	___lmul@multiplier,f
  2777     0F7B  0B89               	decfsz	9,f
  2778     0F7C  2F77               	goto	u1945
  2779     0F7D  0823               	movf	___lmul@multiplier+3,w
  2780     0F7E  0422               	iorwf	___lmul@multiplier+2,w
  2781     0F7F  0421               	iorwf	___lmul@multiplier+1,w
  2782     0F80  0420               	iorwf	___lmul@multiplier,w
  2783     0F81  1D03               	skipz
  2784     0F82  2F84               	goto	u1951
  2785     0F83  2F85               	goto	u1950
  2786     0F84                     u1951:
  2787     0F84  2F63               	goto	l2335
  2788     0F85                     u1950:
  2789     0F85                     l2343:
  2790     0F85  082B               	movf	___lmul@product+3,w
  2791     0F86  00A3               	movwf	?___lmul+3
  2792     0F87  082A               	movf	___lmul@product+2,w
  2793     0F88  00A2               	movwf	?___lmul+2
  2794     0F89  0829               	movf	___lmul@product+1,w
  2795     0F8A  00A1               	movwf	?___lmul+1
  2796     0F8B  0828               	movf	___lmul@product,w
  2797     0F8C  00A0               	movwf	?___lmul
  2798     0F8D                     l404:
  2799     0F8D  0008               	return
  2800     0F8E                     __end_of___lmul:
  2801                           
  2802                           	psect	text3
  2803     0613                     __ptext3:	
  2804 ;; *************** function ___lldiv *****************
  2805 ;; Defined at:
  2806 ;;		line 5 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/__lldiv.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;  divisor         4   12[BANK0 ] unsigned long 
  2809 ;;  dividend        4   16[BANK0 ] unsigned long 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;  quotient        4   21[BANK0 ] unsigned long 
  2812 ;;  counter         1   25[BANK0 ] unsigned char 
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  4   12[BANK0 ] unsigned long 
  2815 ;; Registers used:
  2816 ;;		wreg, status,2, status,0
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2822 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2823 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2824 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2825 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2826 ;;Total ram usage:       14 bytes
  2827 ;; Hardware stack levels used: 1
  2828 ;; Hardware stack levels required when called: 3
  2829 ;; This function calls:
  2830 ;;		Nothing
  2831 ;; This function is called by:
  2832 ;;		_uart_init
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836     0613                     ___lldiv:	
  2837                           ;psect for function ___lldiv
  2838                           
  2839     0613                     l2347:	
  2840                           ;incstack = 0
  2841                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2842                           
  2843     0613  3000               	movlw	0
  2844     0614  0020               	movlb	0	; select bank0
  2845     0615  00B8               	movwf	___lldiv@quotient+3
  2846     0616  3000               	movlw	0
  2847     0617  00B7               	movwf	___lldiv@quotient+2
  2848     0618  3000               	movlw	0
  2849     0619  00B6               	movwf	___lldiv@quotient+1
  2850     061A  3000               	movlw	0
  2851     061B  00B5               	movwf	___lldiv@quotient
  2852     061C  082F               	movf	___lldiv@divisor+3,w
  2853     061D  042E               	iorwf	___lldiv@divisor+2,w
  2854     061E  042D               	iorwf	___lldiv@divisor+1,w
  2855     061F  042C               	iorwf	___lldiv@divisor,w
  2856     0620  1903               	skipnz
  2857     0621  2E23               	goto	u1961
  2858     0622  2E24               	goto	u1960
  2859     0623                     u1961:
  2860     0623  2E65               	goto	l2367
  2861     0624                     u1960:
  2862     0624                     l2349:
  2863     0624  01B9               	clrf	___lldiv@counter
  2864     0625  0AB9               	incf	___lldiv@counter,f
  2865     0626  2E32               	goto	l2353
  2866     0627                     l2351:
  2867     0627  3001               	movlw	1
  2868     0628                     u1975:
  2869     0628  35AC               	lslf	___lldiv@divisor,f
  2870     0629  0DAD               	rlf	___lldiv@divisor+1,f
  2871     062A  0DAE               	rlf	___lldiv@divisor+2,f
  2872     062B  0DAF               	rlf	___lldiv@divisor+3,f
  2873     062C  0B89               	decfsz	9,f
  2874     062D  2E28               	goto	u1975
  2875     062E  3001               	movlw	1
  2876     062F  00B4               	movwf	??___lldiv
  2877     0630  0834               	movf	??___lldiv,w
  2878     0631  07B9               	addwf	___lldiv@counter,f
  2879     0632                     l2353:
  2880     0632  1FAF               	btfss	___lldiv@divisor+3,7
  2881     0633  2E35               	goto	u1981
  2882     0634  2E36               	goto	u1980
  2883     0635                     u1981:
  2884     0635  2E27               	goto	l2351
  2885     0636                     u1980:
  2886     0636                     l2355:
  2887     0636  3001               	movlw	1
  2888     0637                     u1995:
  2889     0637  35B5               	lslf	___lldiv@quotient,f
  2890     0638  0DB6               	rlf	___lldiv@quotient+1,f
  2891     0639  0DB7               	rlf	___lldiv@quotient+2,f
  2892     063A  0DB8               	rlf	___lldiv@quotient+3,f
  2893     063B  0B89               	decfsz	9,f
  2894     063C  2E37               	goto	u1995
  2895     063D                     l2357:
  2896     063D  082F               	movf	___lldiv@divisor+3,w
  2897     063E  0233               	subwf	___lldiv@dividend+3,w
  2898     063F  1D03               	skipz
  2899     0640  2E4B               	goto	u2005
  2900     0641  082E               	movf	___lldiv@divisor+2,w
  2901     0642  0232               	subwf	___lldiv@dividend+2,w
  2902     0643  1D03               	skipz
  2903     0644  2E4B               	goto	u2005
  2904     0645  082D               	movf	___lldiv@divisor+1,w
  2905     0646  0231               	subwf	___lldiv@dividend+1,w
  2906     0647  1D03               	skipz
  2907     0648  2E4B               	goto	u2005
  2908     0649  082C               	movf	___lldiv@divisor,w
  2909     064A  0230               	subwf	___lldiv@dividend,w
  2910     064B                     u2005:
  2911     064B  1C03               	skipc
  2912     064C  2E4E               	goto	u2001
  2913     064D  2E4F               	goto	u2000
  2914     064E                     u2001:
  2915     064E  2E58               	goto	l2363
  2916     064F                     u2000:
  2917     064F                     l2359:
  2918     064F  082C               	movf	___lldiv@divisor,w
  2919     0650  02B0               	subwf	___lldiv@dividend,f
  2920     0651  082D               	movf	___lldiv@divisor+1,w
  2921     0652  3BB1               	subwfb	___lldiv@dividend+1,f
  2922     0653  082E               	movf	___lldiv@divisor+2,w
  2923     0654  3BB2               	subwfb	___lldiv@dividend+2,f
  2924     0655  082F               	movf	___lldiv@divisor+3,w
  2925     0656  3BB3               	subwfb	___lldiv@dividend+3,f
  2926     0657                     l2361:
  2927     0657  1435               	bsf	___lldiv@quotient,0
  2928     0658                     l2363:
  2929     0658  3001               	movlw	1
  2930     0659                     u2015:
  2931     0659  36AF               	lsrf	___lldiv@divisor+3,f
  2932     065A  0CAE               	rrf	___lldiv@divisor+2,f
  2933     065B  0CAD               	rrf	___lldiv@divisor+1,f
  2934     065C  0CAC               	rrf	___lldiv@divisor,f
  2935     065D  0B89               	decfsz	9,f
  2936     065E  2E59               	goto	u2015
  2937     065F                     l2365:
  2938     065F  3001               	movlw	1
  2939     0660  02B9               	subwf	___lldiv@counter,f
  2940     0661  1D03               	btfss	3,2
  2941     0662  2E64               	goto	u2021
  2942     0663  2E65               	goto	u2020
  2943     0664                     u2021:
  2944     0664  2E36               	goto	l2355
  2945     0665                     u2020:
  2946     0665                     l2367:
  2947     0665  0838               	movf	___lldiv@quotient+3,w
  2948     0666  00AF               	movwf	?___lldiv+3
  2949     0667  0837               	movf	___lldiv@quotient+2,w
  2950     0668  00AE               	movwf	?___lldiv+2
  2951     0669  0836               	movf	___lldiv@quotient+1,w
  2952     066A  00AD               	movwf	?___lldiv+1
  2953     066B  0835               	movf	___lldiv@quotient,w
  2954     066C  00AC               	movwf	?___lldiv
  2955     066D                     l426:
  2956     066D  0008               	return
  2957     066E                     __end_of___lldiv:
  2958                           
  2959                           	psect	text4
  2960     0DBE                     __ptext4:	
  2961 ;; *************** function _ports_init *****************
  2962 ;; Defined at:
  2963 ;;		line 183 in file "main.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;		None
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;		None
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  1    wreg      void 
  2970 ;; Registers used:
  2971 ;;		wreg, status,2
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2981 ;;Total ram usage:        0 bytes
  2982 ;; Hardware stack levels used: 1
  2983 ;; Hardware stack levels required when called: 3
  2984 ;; This function calls:
  2985 ;;		Nothing
  2986 ;; This function is called by:
  2987 ;;		_main
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991     0DBE                     _ports_init:	
  2992                           ;psect for function _ports_init
  2993                           
  2994     0DBE                     l2413:	
  2995                           ;incstack = 0
  2996                           ; Regs used in _ports_init: [wreg+status,2]
  2997                           
  2998                           
  2999                           ;main.c: 186:     ADCON0bits.ADON = 0;
  3000     0DBE  0021               	movlb	1	; select bank1
  3001     0DBF  101D               	bcf	29,0	;volatile
  3002     0DC0                     l2415:
  3003                           
  3004                           ;main.c: 187:     ADCON1 = 0x0F;
  3005     0DC0  300F               	movlw	15
  3006     0DC1  009E               	movwf	30	;volatile
  3007     0DC2                     l2417:
  3008                           
  3009                           ;main.c: 190:     TRISEbits.TRISE0 = 0;
  3010     0DC2  1010               	bcf	16,0	;volatile
  3011     0DC3                     l2419:
  3012                           
  3013                           ;main.c: 191:     TRISEbits.TRISE1 = 0;
  3014     0DC3  1090               	bcf	16,1	;volatile
  3015     0DC4                     l2421:
  3016                           
  3017                           ;main.c: 192:     TRISEbits.TRISE2 = 0;
  3018     0DC4  1110               	bcf	16,2	;volatile
  3019     0DC5                     l2423:
  3020                           
  3021                           ;main.c: 193:     PORTEbits.RE0 = 0;
  3022     0DC5  0020               	movlb	0	; select bank0
  3023     0DC6  1010               	bcf	16,0	;volatile
  3024     0DC7                     l2425:
  3025                           
  3026                           ;main.c: 194:     PORTEbits.RE1 = 0;
  3027     0DC7  1090               	bcf	16,1	;volatile
  3028     0DC8                     l2427:
  3029                           
  3030                           ;main.c: 195:     PORTEbits.RE2 = 0;
  3031     0DC8  1110               	bcf	16,2	;volatile
  3032     0DC9                     l2429:
  3033                           
  3034                           ;main.c: 198:     TRISAbits.TRISA2 = 0;
  3035     0DC9  0021               	movlb	1	; select bank1
  3036     0DCA  110C               	bcf	12,2	;volatile
  3037     0DCB                     l2431:
  3038                           
  3039                           ;main.c: 199:     TRISAbits.TRISA3 = 1;
  3040     0DCB  158C               	bsf	12,3	;volatile
  3041     0DCC                     l2433:
  3042                           
  3043                           ;main.c: 200:     PORTAbits.RA2 = 0;
  3044     0DCC  0020               	movlb	0	; select bank0
  3045     0DCD  110C               	bcf	12,2	;volatile
  3046     0DCE                     l2435:
  3047                           
  3048                           ;main.c: 203:     TRISD = 0x00;
  3049     0DCE  0021               	movlb	1	; select bank1
  3050     0DCF  018F               	clrf	15	;volatile
  3051     0DD0                     l2437:
  3052                           
  3053                           ;main.c: 207:     TRISC = 0b11000000;
  3054     0DD0  30C0               	movlw	192
  3055     0DD1  008E               	movwf	14	;volatile
  3056                           
  3057                           ;main.c: 210:     TRISB = 0x00;
  3058     0DD2  018D               	clrf	13	;volatile
  3059     0DD3                     l2439:
  3060                           
  3061                           ;main.c: 216:     PORTBbits.RB0 = 0;
  3062     0DD3  0020               	movlb	0	; select bank0
  3063     0DD4  100D               	bcf	13,0	;volatile
  3064     0DD5                     l2441:
  3065                           
  3066                           ;main.c: 217:     PORTBbits.RB1 = 0;
  3067     0DD5  108D               	bcf	13,1	;volatile
  3068     0DD6                     l2443:
  3069                           
  3070                           ;main.c: 218:     PORTBbits.RB2 = 1;
  3071     0DD6  150D               	bsf	13,2	;volatile
  3072     0DD7                     l2445:
  3073                           
  3074                           ;main.c: 219:     PORTBbits.RB3 = 0;
  3075     0DD7  118D               	bcf	13,3	;volatile
  3076     0DD8                     l2447:
  3077                           
  3078                           ;main.c: 220:     PORTBbits.RB4 = 0;
  3079     0DD8  120D               	bcf	13,4	;volatile
  3080     0DD9                     l104:
  3081     0DD9  0008               	return
  3082     0DDA                     __end_of_ports_init:
  3083                           
  3084                           	psect	text5
  3085     02C8                     __ptext5:	
  3086 ;; *************** function _do_write *****************
  3087 ;; Defined at:
  3088 ;;		line 456 in file "main.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;		None
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  s               2   48[BANK1 ] PTR unsigned char 
  3093 ;;		 -> STR_10(15), 
  3094 ;;  data            1   56[BANK1 ] unsigned char 
  3095 ;;  read            1   52[BANK1 ] unsigned char 
  3096 ;;  hi              1   51[BANK1 ] unsigned char 
  3097 ;;  lo              1   50[BANK1 ] unsigned char 
  3098 ;;  ads            48    0[BANK1 ] unsigned char [48]
  3099 ;;  addr            2   54[BANK1 ] unsigned short 
  3100 ;;  c               1   53[BANK1 ] unsigned char 
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      void 
  3103 ;; Registers used:
  3104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3111 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3112 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3113 ;;      Totals:         0       4      57       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3114 ;;Total ram usage:       61 bytes
  3115 ;; Hardware stack levels used: 1
  3116 ;; Hardware stack levels required when called: 11
  3117 ;; This function calls:
  3118 ;;		_charToHexDigit
  3119 ;;		_pop
  3120 ;;		_read_port
  3121 ;;		_setup_address
  3122 ;;		_sprintf
  3123 ;;		_uart_puts
  3124 ;;		_write_port
  3125 ;; This function is called by:
  3126 ;;		_main
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130     02C8                     _do_write:	
  3131                           ;psect for function _do_write
  3132                           
  3133     02C8                     l2557:	
  3134                           ;incstack = 0
  3135                           ; Regs used in _do_write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3136                           
  3137                           
  3138                           ;main.c: 458:     uint16_t addr;;main.c: 459:     char ads[48];;main.c: 460:     char c;
      +                          ;main.c: 463:     TRISD = 0x00;
  3139     02C8  0021               	movlb	1	; select bank1
  3140     02C9  018F               	clrf	15	;volatile
  3141     02CA                     l2559:
  3142                           
  3143                           ;main.c: 466:     PORTBbits.RB1 = 1;
  3144     02CA  0020               	movlb	0	; select bank0
  3145     02CB  148D               	bsf	13,1	;volatile
  3146     02CC                     l2561:
  3147                           
  3148                           ;main.c: 468:     PORTBbits.RB2 = 1;
  3149     02CC  150D               	bsf	13,2	;volatile
  3150     02CD                     l2563:
  3151                           
  3152                           ;main.c: 470:     PORTBbits.RB3 = 0;
  3153     02CD  118D               	bcf	13,3	;volatile
  3154                           
  3155                           ;main.c: 472:     for (addr = 0; addr < 2048; addr++) {
  3156     02CE  0021               	movlb	1	; select bank1
  3157     02CF  01D6               	clrf	do_write@addr^(0+128)
  3158     02D0  01D7               	clrf	(do_write@addr+1)^(0+128)
  3159     02D1                     l2569:
  3160                           
  3161                           ;main.c: 473:         if (cmd_active == 0) {
  3162     02D1  0867               	movf	_cmd_active^(0+128),w
  3163     02D2  1D03               	btfss	3,2
  3164     02D3  2AD5               	goto	u2171
  3165     02D4  2AD6               	goto	u2170
  3166     02D5                     u2171:
  3167     02D5  2AE5               	goto	l2577
  3168     02D6                     u2170:
  3169     02D6                     l2571:
  3170                           
  3171                           ;main.c: 474:             char *s = "Write aborted\n";
  3172     02D6  3077               	movlw	low (STR_10| (0+32768))
  3173     02D7  00D0               	movwf	do_write@s^(0+128)
  3174     02D8  3090               	movlw	high (STR_10| (0+32768))
  3175     02D9  00D1               	movwf	(do_write@s^(0+128)+1)
  3176     02DA                     l2573:
  3177                           
  3178                           ;main.c: 475:             uart_puts(s);
  3179     02DA  0851               	movf	(do_write@s+1)^(0+128),w
  3180     02DB  0020               	movlb	0	; select bank0
  3181     02DC  00A1               	movwf	uart_puts@s+1
  3182     02DD  0021               	movlb	1	; select bank1
  3183     02DE  0850               	movf	do_write@s^(0+128),w
  3184     02DF  0020               	movlb	0	; select bank0
  3185     02E0  00A0               	movwf	uart_puts@s
  3186     02E1  318F  2704  3182   	fcall	_uart_puts
  3187     02E4  2B5E               	goto	l146
  3188     02E5                     l2577:
  3189                           
  3190                           ;main.c: 480:         c = pop();
  3191     02E5  318F  27C5  3182   	fcall	_pop
  3192     02E8  0021               	movlb	1	; select bank1
  3193     02E9  00D5               	movwf	do_write@c^(0+128)
  3194     02EA                     l2579:
  3195                           
  3196                           ;main.c: 481:         uint8_t lo = charToHexDigit(c);
  3197     02EA  0855               	movf	do_write@c^(0+128),w
  3198     02EB  318D  258B  3182   	fcall	_charToHexDigit
  3199     02EE  0021               	movlb	1	; select bank1
  3200     02EF  00D2               	movwf	do_write@lo^(0+128)
  3201     02F0                     l2581:
  3202                           
  3203                           ;main.c: 482:         c = pop();
  3204     02F0  318F  27C5  3182   	fcall	_pop
  3205     02F3  0021               	movlb	1	; select bank1
  3206     02F4  00D5               	movwf	do_write@c^(0+128)
  3207                           
  3208                           ;main.c: 483:         uint8_t hi = charToHexDigit(c);
  3209     02F5  0855               	movf	do_write@c^(0+128),w
  3210     02F6  318D  258B  3182   	fcall	_charToHexDigit
  3211     02F9  0021               	movlb	1	; select bank1
  3212     02FA  00D3               	movwf	do_write@hi^(0+128)
  3213     02FB                     l2583:
  3214                           
  3215                           ;main.c: 484:         uint8_t data = hi*16+lo;
  3216     02FB  0853               	movf	do_write@hi^(0+128),w
  3217     02FC  0020               	movlb	0	; select bank0
  3218     02FD  00EB               	movwf	??_do_write
  3219     02FE  3003               	movlw	3
  3220     02FF                     u2185:
  3221     02FF  35EB               	lslf	??_do_write,f
  3222     0300  3EFF               	addlw	-1
  3223     0301  1D03               	skipz
  3224     0302  2AFF               	goto	u2185
  3225     0303  356B               	lslf	??_do_write,w
  3226     0304  0021               	movlb	1	; select bank1
  3227     0305  0752               	addwf	do_write@lo^(0+128),w
  3228     0306  00D8               	movwf	do_write@data^(0+128)
  3229     0307                     l2585:
  3230                           
  3231                           ;main.c: 487:         setup_address(addr);
  3232     0307  0857               	movf	(do_write@addr+1)^(0+128),w
  3233     0308  0020               	movlb	0	; select bank0
  3234     0309  00A1               	movwf	setup_address@addr+1
  3235     030A  0021               	movlb	1	; select bank1
  3236     030B  0856               	movf	do_write@addr^(0+128),w
  3237     030C  0020               	movlb	0	; select bank0
  3238     030D  00A0               	movwf	setup_address@addr
  3239     030E  318F  278E  3182   	fcall	_setup_address
  3240     0311                     l2587:
  3241                           
  3242                           ;main.c: 490:         write_port(data);
  3243     0311  0021               	movlb	1	; select bank1
  3244     0312  0858               	movf	do_write@data^(0+128),w
  3245     0313  318F  272E  3182   	fcall	_write_port
  3246     0316                     l2589:
  3247                           
  3248                           ;main.c: 494:             uint8_t read = read_port();
  3249     0316  318E  2631  3182   	fcall	_read_port
  3250     0319  0021               	movlb	1	; select bank1
  3251     031A  00D4               	movwf	do_write@read^(0+128)
  3252     031B                     l2591:
  3253                           
  3254                           ;main.c: 496:             if (read != data) {
  3255     031B  0854               	movf	do_write@read^(0+128),w
  3256     031C  0658               	xorwf	do_write@data^(0+128),w
  3257     031D  1903               	skipnz
  3258     031E  2B20               	goto	u2191
  3259     031F  2B21               	goto	u2190
  3260     0320                     u2191:
  3261     0320  2B46               	goto	l2601
  3262     0321                     u2190:
  3263     0321                     l2593:
  3264                           
  3265                           ;main.c: 498:                 PORTBbits.RB1 = 0;
  3266     0321  0020               	movlb	0	; select bank0
  3267     0322  108D               	bcf	13,1	;volatile
  3268     0323                     l2595:
  3269                           
  3270                           ;main.c: 499:                 sprintf(ads, "write verify fail, write=%02x, read=%02x\n",
      +                           data, read);
  3271     0323  3000               	movlw	low (STR_11| (0+32768))
  3272     0324  00D7               	movwf	sprintf@fmt
  3273     0325  3090               	movlw	high (STR_11| (0+32768))
  3274     0326  00D8               	movwf	sprintf@fmt+1
  3275     0327  0021               	movlb	1	; select bank1
  3276     0328  0858               	movf	do_write@data^(0+128),w
  3277     0329  0020               	movlb	0	; select bank0
  3278     032A  00EB               	movwf	??_do_write
  3279     032B  01EC               	clrf	??_do_write+1
  3280     032C  086B               	movf	??_do_write,w
  3281     032D  00D9               	movwf	?_sprintf+2
  3282     032E  086C               	movf	??_do_write+1,w
  3283     032F  00DA               	movwf	?_sprintf+3
  3284     0330  0021               	movlb	1	; select bank1
  3285     0331  0854               	movf	do_write@read^(0+128),w
  3286     0332  0020               	movlb	0	; select bank0
  3287     0333  00ED               	movwf	??_do_write+2
  3288     0334  01EE               	clrf	??_do_write+3
  3289     0335  086D               	movf	??_do_write+2,w
  3290     0336  00DB               	movwf	?_sprintf+4
  3291     0337  086E               	movf	??_do_write+3,w
  3292     0338  00DC               	movwf	?_sprintf+5
  3293     0339  30A0               	movlw	(low (do_write@ads| 0))& (0+255)
  3294     033A  318D  25F7  3182   	fcall	_sprintf
  3295     033D                     l2597:
  3296                           
  3297                           ;main.c: 500:                 uart_puts(ads);
  3298     033D  30A0               	movlw	low do_write@ads
  3299     033E  0020               	movlb	0	; select bank0
  3300     033F  00A0               	movwf	uart_puts@s
  3301     0340  3000               	movlw	high do_write@ads
  3302     0341  00A1               	movwf	uart_puts@s+1
  3303     0342  318F  2704  3182   	fcall	_uart_puts
  3304     0345  2B5E               	goto	l146
  3305     0346                     l2601:
  3306                           
  3307                           ;main.c: 504:     }
  3308     0346  3001               	movlw	1
  3309     0347  07D6               	addwf	do_write@addr^(0+128),f
  3310     0348  3000               	movlw	0
  3311     0349  3DD7               	addwfc	(do_write@addr+1)^(0+128),f
  3312     034A  3008               	movlw	8
  3313     034B  0257               	subwf	(do_write@addr+1)^(0+128),w
  3314     034C  3000               	movlw	0
  3315     034D  1903               	skipnz
  3316     034E  0256               	subwf	do_write@addr^(0+128),w
  3317     034F  1C03               	skipc
  3318     0350  2B52               	goto	u2201
  3319     0351  2B53               	goto	u2200
  3320     0352                     u2201:
  3321     0352  2AD1               	goto	l2569
  3322     0353                     u2200:
  3323     0353                     l144:
  3324                           
  3325                           ;main.c: 507:     PORTBbits.RB1 = 0;
  3326     0353  0020               	movlb	0	; select bank0
  3327     0354  108D               	bcf	13,1	;volatile
  3328     0355                     l2603:
  3329                           
  3330                           ;main.c: 509:     sprintf(ads, "write completed & verified\n");
  3331     0355  3047               	movlw	low (STR_12| (0+32768))
  3332     0356  00D7               	movwf	sprintf@fmt
  3333     0357  3090               	movlw	high (STR_12| (0+32768))
  3334     0358  00D8               	movwf	sprintf@fmt+1
  3335     0359  30A0               	movlw	(low (do_write@ads| 0))& (0+255)
  3336     035A  318D  25F7  3182   	fcall	_sprintf
  3337     035D  2B3D               	goto	l2597
  3338     035E                     l146:
  3339     035E  0008               	return
  3340     035F                     __end_of_do_write:
  3341                           
  3342                           	psect	text6
  3343     0F2E                     __ptext6:	
  3344 ;; *************** function _write_port *****************
  3345 ;; Defined at:
  3346 ;;		line 427 in file "main.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;  data            1    wreg     unsigned char 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  data            1    2[BANK0 ] unsigned char 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      void 
  3353 ;; Registers used:
  3354 ;;		wreg
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3361 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3362 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3363 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3364 ;;Total ram usage:        3 bytes
  3365 ;; Hardware stack levels used: 1
  3366 ;; Hardware stack levels required when called: 3
  3367 ;; This function calls:
  3368 ;;		Nothing
  3369 ;; This function is called by:
  3370 ;;		_do_write
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374     0F2E                     _write_port:	
  3375                           ;psect for function _write_port
  3376                           
  3377                           
  3378                           ;incstack = 0
  3379                           ; Regs used in _write_port: [wreg]
  3380                           ;write_port@data stored from wreg
  3381     0F2E  0020               	movlb	0	; select bank0
  3382     0F2F  00A2               	movwf	write_port@data
  3383     0F30                     l2317:
  3384                           
  3385                           ;main.c: 427: void write_port(uint8_t data);main.c: 428: {;main.c: 430:      _delay((uns
      +                          igned long)((10)*(20000000/4000000.0)));
  3386     0F30  3010               	movlw	16
  3387     0F31                     u2417:
  3388     0F31  0B89               	decfsz	9,f
  3389     0F32  2F31               	goto	u2417
  3390     0F33  3200               	nop2
  3391                           
  3392                           ;main.c: 431:     PORTD = data;
  3393     0F34  0020               	movlb	0	; select bank0
  3394     0F35  0822               	movf	write_port@data,w
  3395     0F36  008F               	movwf	15	;volatile
  3396                           
  3397                           ;main.c: 434:     _delay((unsigned long)((10)*(20000000/4000000.0)));
  3398     0F37  3010               	movlw	16
  3399     0F38                     u2427:
  3400     0F38  0B89               	decfsz	9,f
  3401     0F39  2F38               	goto	u2427
  3402     0F3A  3200               	nop2
  3403     0F3B                     l2319:
  3404                           
  3405                           ;main.c: 435:     PORTBbits.RB4 = 1;
  3406     0F3B  0020               	movlb	0	; select bank0
  3407     0F3C  160D               	bsf	13,4	;volatile
  3408     0F3D                     l2321:
  3409                           
  3410                           ;main.c: 438:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  3411     0F3D  3200               	nop2	;2 cycle nop
  3412     0F3E  3200               	nop2	;2 cycle nop
  3413     0F3F  0000               	nop
  3414     0F40                     l2323:
  3415                           
  3416                           ;main.c: 439:     PORTBbits.RB3 = 1;
  3417     0F40  0020               	movlb	0	; select bank0
  3418     0F41  158D               	bsf	13,3	;volatile
  3419                           
  3420                           ;main.c: 441:     _delay((unsigned long)((50)*(20000000/4000.0)));
  3421     0F42  3002               	movlw	2
  3422     0F43  0020               	movlb	0	; select bank0
  3423     0F44  00A1               	movwf	??_write_port+1
  3424     0F45  3045               	movlw	69
  3425     0F46  00A0               	movwf	??_write_port
  3426     0F47  30A9               	movlw	169
  3427     0F48                     u2437:
  3428     0F48  0B89               	decfsz	9,f
  3429     0F49  2F48               	goto	u2437
  3430     0F4A  0BA0               	decfsz	??_write_port,f
  3431     0F4B  2F48               	goto	u2437
  3432     0F4C  0BA1               	decfsz	??_write_port+1,f
  3433     0F4D  2F48               	goto	u2437
  3434     0F4E  3200               	nop2
  3435     0F4F                     l2325:
  3436                           
  3437                           ;main.c: 444:     PORTBbits.RB3 = 0;
  3438     0F4F  0020               	movlb	0	; select bank0
  3439     0F50  118D               	bcf	13,3	;volatile
  3440     0F51                     l2327:
  3441                           
  3442                           ;main.c: 445:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  3443     0F51  3200               	nop2	;2 cycle nop
  3444     0F52  3200               	nop2	;2 cycle nop
  3445     0F53  0000               	nop
  3446     0F54                     l2329:
  3447                           
  3448                           ;main.c: 448:     PORTBbits.RB4 = 0;
  3449     0F54  0020               	movlb	0	; select bank0
  3450     0F55  120D               	bcf	13,4	;volatile
  3451     0F56                     l2331:
  3452                           
  3453                           ;main.c: 449:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  3454     0F56  3200               	nop2	;2 cycle nop
  3455     0F57  3200               	nop2	;2 cycle nop
  3456     0F58  0000               	nop
  3457     0F59                     l140:
  3458     0F59  0008               	return
  3459     0F5A                     __end_of_write_port:
  3460                           
  3461                           	psect	text7
  3462     0FC5                     __ptext7:	
  3463 ;; *************** function _pop *****************
  3464 ;; Defined at:
  3465 ;;		line 133 in file "main.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;		None
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;  c               1    4[BANK0 ] unsigned char 
  3470 ;; Return value:  Size  Location     Type
  3471 ;;                  1    wreg      unsigned char 
  3472 ;; Registers used:
  3473 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3480 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3481 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3482 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3483 ;;Total ram usage:        3 bytes
  3484 ;; Hardware stack levels used: 1
  3485 ;; Hardware stack levels required when called: 5
  3486 ;; This function calls:
  3487 ;;		_addone
  3488 ;;		_empty
  3489 ;; This function is called by:
  3490 ;;		_do_write
  3491 ;;		_main
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495     0FC5                     _pop:	
  3496                           ;psect for function _pop
  3497                           
  3498     0FC5                     l2191:	
  3499                           ;incstack = 0
  3500                           ; Regs used in _pop: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3501                           
  3502                           
  3503                           ;main.c: 137:     INTCONbits.GIE = 0;
  3504     0FC5  138B               	bcf	11,7	;volatile
  3505                           
  3506                           ;main.c: 138:     PIE1bits.RCIE=0;
  3507     0FC6  0021               	movlb	1	; select bank1
  3508     0FC7  1291               	bcf	17,5	;volatile
  3509     0FC8                     l2193:
  3510     0FC8                     l2195:
  3511                           
  3512                           ;main.c: 142:     if (empty()) {
  3513     0FC8  318E  2614  318F   	fcall	_empty
  3514     0FCB  3A00               	xorlw	0
  3515     0FCC  1903               	skipnz
  3516     0FCD  2FCF               	goto	u1811
  3517     0FCE  2FD0               	goto	u1810
  3518     0FCF                     u1811:
  3519     0FCF  2FD3               	goto	l2197
  3520     0FD0                     u1810:
  3521     0FD0                     l87:	
  3522                           ;main.c: 145:         while (1)
  3523                           
  3524                           
  3525                           ;main.c: 146:             TRISEbits.TRISE2 = 1;
  3526     0FD0  0021               	movlb	1	; select bank1
  3527     0FD1  1510               	bsf	16,2	;volatile
  3528     0FD2  2FD0               	goto	l87
  3529     0FD3                     l2197:
  3530                           
  3531                           ;main.c: 149:         c = queue[head];
  3532     0FD3  30F0               	movlw	240
  3533     0FD4  0020               	movlb	0	; select bank0
  3534     0FD5  00A2               	movwf	??_pop
  3535     0FD6  3023               	movlw	35
  3536     0FD7  00A3               	movwf	??_pop+1
  3537     0FD8  0021               	movlb	1	; select bank1
  3538     0FD9  0863               	movf	_head^(0+128),w
  3539     0FDA  0020               	movlb	0	; select bank0
  3540     0FDB  0722               	addwf	??_pop,w
  3541     0FDC  0086               	movwf	6
  3542     0FDD  0021               	movlb	1	; select bank1
  3543     0FDE  0864               	movf	(_head+1)^(0+128),w
  3544     0FDF  0020               	movlb	0	; select bank0
  3545     0FE0  3D23               	addwfc	??_pop+1,w
  3546     0FE1  0087               	movwf	7
  3547     0FE2  0801               	movf	1,w
  3548     0FE3  00A4               	movwf	pop@c
  3549     0FE4                     l2199:
  3550                           
  3551                           ;main.c: 150:         head = addone(head);
  3552     0FE4  0021               	movlb	1	; select bank1
  3553     0FE5  0864               	movf	(_head+1)^(0+128),w
  3554     0FE6  0020               	movlb	0	; select bank0
  3555     0FE7  00A1               	movwf	addone@i+1
  3556     0FE8  0021               	movlb	1	; select bank1
  3557     0FE9  0863               	movf	_head^(0+128),w
  3558     0FEA  0020               	movlb	0	; select bank0
  3559     0FEB  00A0               	movwf	addone@i
  3560     0FEC  318D  2564  318F   	fcall	_addone
  3561     0FEF  0020               	movlb	0	; select bank0
  3562     0FF0  0821               	movf	?_addone+1,w
  3563     0FF1  0021               	movlb	1	; select bank1
  3564     0FF2  00E4               	movwf	(_head+1)^(0+128)
  3565     0FF3  0020               	movlb	0	; select bank0
  3566     0FF4  0820               	movf	?_addone,w
  3567     0FF5  0021               	movlb	1	; select bank1
  3568     0FF6  00E3               	movwf	_head^(0+128)
  3569     0FF7                     l2201:
  3570                           
  3571                           ;main.c: 151:         bytes_popped++;
  3572     0FF7  3001               	movlw	1
  3573     0FF8  07DF               	addwf	_bytes_popped^(0+128),f
  3574     0FF9  3000               	movlw	0
  3575     0FFA  3DE0               	addwfc	(_bytes_popped+1)^(0+128),f
  3576     0FFB                     l2203:
  3577                           
  3578                           ;main.c: 155:     INTCONbits.GIE = 1;
  3579     0FFB  178B               	bsf	11,7	;volatile
  3580     0FFC                     l2205:
  3581                           
  3582                           ;main.c: 156:     PIE1bits.RCIE = 1;
  3583     0FFC  1691               	bsf	17,5	;volatile
  3584     0FFD                     l2207:
  3585                           
  3586                           ;main.c: 157:     return c;
  3587     0FFD  0020               	movlb	0	; select bank0
  3588     0FFE  0824               	movf	pop@c,w
  3589     0FFF                     l91:
  3590     0FFF  0008               	return
  3591     1000                     __end_of_pop:
  3592                           
  3593                           	psect	text8
  3594     0E14                     __ptext8:	
  3595 ;; *************** function _empty *****************
  3596 ;; Defined at:
  3597 ;;		line 96 in file "main.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;		None
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;		None
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  1    wreg      _Bool 
  3604 ;; Registers used:
  3605 ;;		wreg, status,2, status,0, pclath, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3615 ;;Total ram usage:        0 bytes
  3616 ;; Hardware stack levels used: 1
  3617 ;; Hardware stack levels required when called: 4
  3618 ;; This function calls:
  3619 ;;		_addone
  3620 ;; This function is called by:
  3621 ;;		_pop
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625     0E14                     _empty:	
  3626                           ;psect for function _empty
  3627                           
  3628     0E14                     l2161:	
  3629                           ;incstack = 0
  3630                           ; Regs used in _empty: [wreg+status,2+status,0+pclath+cstack]
  3631                           
  3632                           
  3633                           ;main.c: 98:     if (addone(tail) == head)
  3634     0E14  0021               	movlb	1	; select bank1
  3635     0E15  0869               	movf	(_tail+1)^(0+128),w
  3636     0E16  0020               	movlb	0	; select bank0
  3637     0E17  00A1               	movwf	addone@i+1
  3638     0E18  0021               	movlb	1	; select bank1
  3639     0E19  0868               	movf	_tail^(0+128),w
  3640     0E1A  0020               	movlb	0	; select bank0
  3641     0E1B  00A0               	movwf	addone@i
  3642     0E1C  318D  2564  318E   	fcall	_addone
  3643     0E1F  0021               	movlb	1	; select bank1
  3644     0E20  0864               	movf	(_head+1)^(0+128),w
  3645     0E21  0020               	movlb	0	; select bank0
  3646     0E22  0621               	xorwf	?_addone+1,w
  3647     0E23  1D03               	skipz
  3648     0E24  2E29               	goto	u1785
  3649     0E25  0021               	movlb	1	; select bank1
  3650     0E26  0863               	movf	_head^(0+128),w
  3651     0E27  0020               	movlb	0	; select bank0
  3652     0E28  0620               	xorwf	?_addone,w
  3653     0E29                     u1785:
  3654     0E29  1D03               	skipz
  3655     0E2A  2E2C               	goto	u1781
  3656     0E2B  2E2D               	goto	u1780
  3657     0E2C                     u1781:
  3658     0E2C  2E2F               	goto	l2167
  3659     0E2D                     u1780:
  3660     0E2D                     l2163:
  3661                           
  3662                           ;main.c: 99:         return 1;
  3663     0E2D  3001               	movlw	1
  3664     0E2E  2E30               	goto	l75
  3665     0E2F                     l2167:
  3666                           
  3667                           ;main.c: 100:     return 0;
  3668     0E2F  3000               	movlw	0
  3669     0E30                     l75:
  3670     0E30  0008               	return
  3671     0E31                     __end_of_empty:
  3672                           
  3673                           	psect	text9
  3674     0D64                     __ptext9:	
  3675 ;; *************** function _addone *****************
  3676 ;; Defined at:
  3677 ;;		line 70 in file "main.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  i               2    0[BANK0 ] short 
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;		None
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  2    0[BANK0 ] short 
  3684 ;; Registers used:
  3685 ;;		wreg, status,2, status,0
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/0
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3691 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3694 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3695 ;;Total ram usage:        2 bytes
  3696 ;; Hardware stack levels used: 1
  3697 ;; Hardware stack levels required when called: 3
  3698 ;; This function calls:
  3699 ;;		Nothing
  3700 ;; This function is called by:
  3701 ;;		_empty
  3702 ;;		_pop
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706     0D64                     _addone:	
  3707                           ;psect for function _addone
  3708                           
  3709     0D64                     l2087:	
  3710                           ;incstack = 0
  3711                           ; Regs used in _addone: [wreg+status,2+status,0]
  3712                           
  3713                           
  3714                           ;main.c: 70: int16_t addone(int16_t i);main.c: 71: {;main.c: 72:     if (i == 1024 -1)
  3715     0D64  0020               	movlb	0	; select bank0
  3716     0D65  0A20               	incf	addone@i,w
  3717     0D66  3003               	movlw	3
  3718     0D67  1903               	skipnz
  3719     0D68  0621               	xorwf	addone@i+1,w
  3720     0D69  1D03               	btfss	3,2
  3721     0D6A  2D6C               	goto	u1711
  3722     0D6B  2D6D               	goto	u1710
  3723     0D6C                     u1711:
  3724     0D6C  2D70               	goto	l2093
  3725     0D6D                     u1710:
  3726     0D6D                     l2089:
  3727                           
  3728                           ;main.c: 73:         return 0;
  3729     0D6D  01A0               	clrf	?_addone
  3730     0D6E  01A1               	clrf	?_addone+1
  3731     0D6F  2D76               	goto	l66
  3732     0D70                     l2093:
  3733                           
  3734                           ;main.c: 74:     return i+1;
  3735     0D70  0820               	movf	addone@i,w
  3736     0D71  3E01               	addlw	1
  3737     0D72  00A0               	movwf	?_addone
  3738     0D73  3000               	movlw	0
  3739     0D74  3D21               	addwfc	addone@i+1,w
  3740     0D75  00A1               	movwf	?_addone+1
  3741     0D76                     l66:
  3742     0D76  0008               	return
  3743     0D77                     __end_of_addone:
  3744                           
  3745                           	psect	text10
  3746     0D8B                     __ptext10:	
  3747 ;; *************** function _charToHexDigit *****************
  3748 ;; Defined at:
  3749 ;;		line 170 in file "main.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  c               1    wreg     unsigned char 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;  c               1    0[BANK0 ] unsigned char 
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  1    wreg      unsigned char 
  3756 ;; Registers used:
  3757 ;;		wreg, status,2, status,0
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3764 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3766 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3767 ;;Total ram usage:        1 bytes
  3768 ;; Hardware stack levels used: 1
  3769 ;; Hardware stack levels required when called: 3
  3770 ;; This function calls:
  3771 ;;		Nothing
  3772 ;; This function is called by:
  3773 ;;		_do_write
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777     0D8B                     _charToHexDigit:	
  3778                           ;psect for function _charToHexDigit
  3779                           
  3780                           
  3781                           ;incstack = 0
  3782                           ; Regs used in _charToHexDigit: [wreg+status,2+status,0]
  3783                           ;charToHexDigit@c stored from wreg
  3784     0D8B  0020               	movlb	0	; select bank0
  3785     0D8C  00A0               	movwf	charToHexDigit@c
  3786     0D8D                     l2211:
  3787                           
  3788                           ;main.c: 170: uint8_t charToHexDigit(char c);main.c: 171: {;main.c: 172:   if (c >= 'a')
  3789     0D8D  3061               	movlw	97
  3790     0D8E  0220               	subwf	charToHexDigit@c,w
  3791     0D8F  1C03               	skipc
  3792     0D90  2D92               	goto	u1821
  3793     0D91  2D93               	goto	u1820
  3794     0D92                     u1821:
  3795     0D92  2D96               	goto	l2219
  3796     0D93                     u1820:
  3797     0D93                     l2213:
  3798                           
  3799                           ;main.c: 173:     return c - 'a' + 10;
  3800     0D93  0820               	movf	charToHexDigit@c,w
  3801     0D94  3EA9               	addlw	169
  3802     0D95  2DA1               	goto	l98
  3803     0D96                     l2219:
  3804     0D96  3041               	movlw	65
  3805     0D97  0220               	subwf	charToHexDigit@c,w
  3806     0D98  1C03               	skipc
  3807     0D99  2D9B               	goto	u1831
  3808     0D9A  2D9C               	goto	u1830
  3809     0D9B                     u1831:
  3810     0D9B  2D9F               	goto	l2227
  3811     0D9C                     u1830:
  3812     0D9C                     l2221:
  3813                           
  3814                           ;main.c: 175:     return c - 'A' + 10;
  3815     0D9C  0820               	movf	charToHexDigit@c,w
  3816     0D9D  3EC9               	addlw	201
  3817     0D9E  2DA1               	goto	l98
  3818     0D9F                     l2227:
  3819                           
  3820                           ;main.c: 177:     return c - '0';
  3821     0D9F  0820               	movf	charToHexDigit@c,w
  3822     0DA0  3ED0               	addlw	208
  3823     0DA1                     l98:
  3824     0DA1  0008               	return
  3825     0DA2                     __end_of_charToHexDigit:
  3826                           
  3827                           	psect	text11
  3828     035F                     __ptext11:	
  3829 ;; *************** function _do_read *****************
  3830 ;; Defined at:
  3831 ;;		line 376 in file "main.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;		None
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;  s               2   16[BANK1 ] PTR unsigned char 
  3836 ;;		 -> STR_7(14), 
  3837 ;;  data            1   18[BANK1 ] unsigned char 
  3838 ;;  ads            16    0[BANK1 ] unsigned char [16]
  3839 ;;  addr            2   20[BANK1 ] unsigned short 
  3840 ;;  col             1   19[BANK1 ] unsigned char 
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3851 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3852 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3853 ;;      Totals:         0       2      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3854 ;;Total ram usage:       24 bytes
  3855 ;; Hardware stack levels used: 1
  3856 ;; Hardware stack levels required when called: 11
  3857 ;; This function calls:
  3858 ;;		_read_port
  3859 ;;		_setup_address
  3860 ;;		_sprintf
  3861 ;;		_uart_putc
  3862 ;;		_uart_puts
  3863 ;; This function is called by:
  3864 ;;		_main
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868     035F                     _do_read:	
  3869                           ;psect for function _do_read
  3870                           
  3871     035F                     l2511:	
  3872                           ;incstack = 0
  3873                           ; Regs used in _do_read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3874                           
  3875                           
  3876                           ;main.c: 378:     uint16_t addr;;main.c: 379:     char ads[16];;main.c: 380:     uint8_t
      +                           col=0;
  3877     035F  0021               	movlb	1	; select bank1
  3878     0360  01B3               	clrf	do_read@col^(0+128)
  3879     0361                     l2513:
  3880                           
  3881                           ;main.c: 383:     PORTBbits.RB4 = 0;
  3882     0361  0020               	movlb	0	; select bank0
  3883     0362  120D               	bcf	13,4	;volatile
  3884     0363                     l2515:
  3885                           
  3886                           ;main.c: 385:     PORTBbits.RB1 = 1;
  3887     0363  148D               	bsf	13,1	;volatile
  3888     0364                     l2517:
  3889                           
  3890                           ;main.c: 387:     PORTBbits.RB3 = 0;
  3891     0364  118D               	bcf	13,3	;volatile
  3892                           
  3893                           ;main.c: 390:     for (addr = 0; addr < 2048; ++addr) {
  3894     0365  0021               	movlb	1	; select bank1
  3895     0366  01B4               	clrf	do_read@addr^(0+128)
  3896     0367  01B5               	clrf	(do_read@addr+1)^(0+128)
  3897     0368                     l2523:
  3898                           
  3899                           ;main.c: 391:         if (cmd_active == 0) {
  3900     0368  0867               	movf	_cmd_active^(0+128),w
  3901     0369  1D03               	btfss	3,2
  3902     036A  2B6C               	goto	u2131
  3903     036B  2B6D               	goto	u2130
  3904     036C                     u2131:
  3905     036C  2B7C               	goto	l2531
  3906     036D                     u2130:
  3907     036D                     l2525:
  3908                           
  3909                           ;main.c: 392:             char *s = "Read aborted\n";
  3910     036D  3095               	movlw	low (STR_7| (0+32768))
  3911     036E  00B0               	movwf	do_read@s^(0+128)
  3912     036F  3090               	movlw	high (STR_7| (0+32768))
  3913     0370  00B1               	movwf	(do_read@s^(0+128)+1)
  3914     0371                     l2527:
  3915                           
  3916                           ;main.c: 393:             uart_puts(s);
  3917     0371  0831               	movf	(do_read@s+1)^(0+128),w
  3918     0372  0020               	movlb	0	; select bank0
  3919     0373  00A1               	movwf	uart_puts@s+1
  3920     0374  0021               	movlb	1	; select bank1
  3921     0375  0830               	movf	do_read@s^(0+128),w
  3922     0376  0020               	movlb	0	; select bank0
  3923     0377  00A0               	movwf	uart_puts@s
  3924     0378  318F  2704  3183   	fcall	_uart_puts
  3925     037B  2BEA               	goto	l134
  3926     037C                     l2531:
  3927                           
  3928                           ;main.c: 398:         setup_address(addr);
  3929     037C  0835               	movf	(do_read@addr+1)^(0+128),w
  3930     037D  0020               	movlb	0	; select bank0
  3931     037E  00A1               	movwf	setup_address@addr+1
  3932     037F  0021               	movlb	1	; select bank1
  3933     0380  0834               	movf	do_read@addr^(0+128),w
  3934     0381  0020               	movlb	0	; select bank0
  3935     0382  00A0               	movwf	setup_address@addr
  3936     0383  318F  278E  3183   	fcall	_setup_address
  3937     0386                     l2533:
  3938                           
  3939                           ;main.c: 401:         uint8_t data = read_port();
  3940     0386  318E  2631  3183   	fcall	_read_port
  3941     0389  0021               	movlb	1	; select bank1
  3942     038A  00B2               	movwf	do_read@data^(0+128)
  3943     038B                     l2535:
  3944                           
  3945                           ;main.c: 404:         if (col == 0) {
  3946     038B  0833               	movf	do_read@col^(0+128),w
  3947     038C  1D03               	btfss	3,2
  3948     038D  2B8F               	goto	u2141
  3949     038E  2B90               	goto	u2140
  3950     038F                     u2141:
  3951     038F  2BA9               	goto	l2541
  3952     0390                     u2140:
  3953     0390                     l2537:
  3954                           
  3955                           ;main.c: 405:             sprintf(ads, "%04x: ", addr);
  3956     0390  30B5               	movlw	low (STR_8| (0+32768))
  3957     0391  0020               	movlb	0	; select bank0
  3958     0392  00D7               	movwf	sprintf@fmt
  3959     0393  3090               	movlw	high (STR_8| (0+32768))
  3960     0394  00D8               	movwf	sprintf@fmt+1
  3961     0395  0021               	movlb	1	; select bank1
  3962     0396  0835               	movf	(do_read@addr+1)^(0+128),w
  3963     0397  0020               	movlb	0	; select bank0
  3964     0398  00DA               	movwf	?_sprintf+3
  3965     0399  0021               	movlb	1	; select bank1
  3966     039A  0834               	movf	do_read@addr^(0+128),w
  3967     039B  0020               	movlb	0	; select bank0
  3968     039C  00D9               	movwf	?_sprintf+2
  3969     039D  30A0               	movlw	(low (do_read@ads| 0))& (0+255)
  3970     039E  318D  25F7  3183   	fcall	_sprintf
  3971     03A1                     l2539:
  3972                           
  3973                           ;main.c: 406:             uart_puts(ads);
  3974     03A1  30A0               	movlw	low do_read@ads
  3975     03A2  0020               	movlb	0	; select bank0
  3976     03A3  00A0               	movwf	uart_puts@s
  3977     03A4  3000               	movlw	high do_read@ads
  3978     03A5  00A1               	movwf	uart_puts@s+1
  3979     03A6  318F  2704  3183   	fcall	_uart_puts
  3980     03A9                     l2541:
  3981                           
  3982                           ;main.c: 409:         sprintf(ads, "%02x", data);
  3983     03A9  30BC               	movlw	low (STR_9| (0+32768))
  3984     03AA  0020               	movlb	0	; select bank0
  3985     03AB  00D7               	movwf	sprintf@fmt
  3986     03AC  3090               	movlw	high (STR_9| (0+32768))
  3987     03AD  00D8               	movwf	sprintf@fmt+1
  3988     03AE  0021               	movlb	1	; select bank1
  3989     03AF  0832               	movf	do_read@data^(0+128),w
  3990     03B0  0020               	movlb	0	; select bank0
  3991     03B1  00EB               	movwf	??_do_read
  3992     03B2  01EC               	clrf	??_do_read+1
  3993     03B3  086B               	movf	??_do_read,w
  3994     03B4  00D9               	movwf	?_sprintf+2
  3995     03B5  086C               	movf	??_do_read+1,w
  3996     03B6  00DA               	movwf	?_sprintf+3
  3997     03B7  30A0               	movlw	(low (do_read@ads| 0))& (0+255)
  3998     03B8  318D  25F7  3183   	fcall	_sprintf
  3999                           
  4000                           ;main.c: 410:         uart_puts(ads);
  4001     03BB  30A0               	movlw	low do_read@ads
  4002     03BC  0020               	movlb	0	; select bank0
  4003     03BD  00A0               	movwf	uart_puts@s
  4004     03BE  3000               	movlw	high do_read@ads
  4005     03BF  00A1               	movwf	uart_puts@s+1
  4006     03C0  318F  2704  3183   	fcall	_uart_puts
  4007     03C3                     l2543:
  4008                           
  4009                           ;main.c: 411:         if (col == 15) {
  4010     03C3  300F               	movlw	15
  4011     03C4  0021               	movlb	1	; select bank1
  4012     03C5  0633               	xorwf	do_read@col^(0+128),w
  4013     03C6  1D03               	btfss	3,2
  4014     03C7  2BC9               	goto	u2151
  4015     03C8  2BCA               	goto	u2150
  4016     03C9                     u2151:
  4017     03C9  2BD0               	goto	l2549
  4018     03CA                     u2150:
  4019     03CA                     l2545:
  4020                           
  4021                           ;main.c: 412:             col = 0;
  4022     03CA  01B3               	clrf	do_read@col^(0+128)
  4023     03CB                     l2547:
  4024                           
  4025                           ;main.c: 413:             uart_putc('\n');
  4026     03CB  300A               	movlw	10
  4027     03CC  318D  2577  3183   	fcall	_uart_putc
  4028                           
  4029                           ;main.c: 414:         } else {
  4030     03CF  2BDA               	goto	l2553
  4031     03D0                     l2549:
  4032                           
  4033                           ;main.c: 415:             uart_putc(' ');
  4034     03D0  3020               	movlw	32
  4035     03D1  318D  2577  3183   	fcall	_uart_putc
  4036     03D4                     l2551:
  4037                           
  4038                           ;main.c: 416:             col++;
  4039     03D4  3001               	movlw	1
  4040     03D5  0020               	movlb	0	; select bank0
  4041     03D6  00EB               	movwf	??_do_read
  4042     03D7  086B               	movf	??_do_read,w
  4043     03D8  0021               	movlb	1	; select bank1
  4044     03D9  07B3               	addwf	do_read@col^(0+128),f
  4045     03DA                     l2553:
  4046                           
  4047                           ;main.c: 418:     }
  4048     03DA  3001               	movlw	1
  4049     03DB  0021               	movlb	1	; select bank1
  4050     03DC  07B4               	addwf	do_read@addr^(0+128),f
  4051     03DD  3000               	movlw	0
  4052     03DE  3DB5               	addwfc	(do_read@addr+1)^(0+128),f
  4053     03DF                     l2555:
  4054     03DF  3008               	movlw	8
  4055     03E0  0235               	subwf	(do_read@addr+1)^(0+128),w
  4056     03E1  3000               	movlw	0
  4057     03E2  1903               	skipnz
  4058     03E3  0234               	subwf	do_read@addr^(0+128),w
  4059     03E4  1C03               	skipc
  4060     03E5  2BE7               	goto	u2161
  4061     03E6  2BE8               	goto	u2160
  4062     03E7                     u2161:
  4063     03E7  2B68               	goto	l2523
  4064     03E8                     u2160:
  4065     03E8                     l132:
  4066                           
  4067                           ;main.c: 421:     PORTBbits.RB1 = 0;
  4068     03E8  0020               	movlb	0	; select bank0
  4069     03E9  108D               	bcf	13,1	;volatile
  4070     03EA                     l134:
  4071     03EA  0008               	return
  4072     03EB                     __end_of_do_read:
  4073                           
  4074                           	psect	text12
  4075     0D77                     __ptext12:	
  4076 ;; *************** function _uart_putc *****************
  4077 ;; Defined at:
  4078 ;;		line 160 in file "uart.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;  c               1    wreg     unsigned char 
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;  c               1    0[BANK0 ] unsigned char 
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      void 
  4085 ;; Registers used:
  4086 ;;		wreg
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4093 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4095 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4096 ;;Total ram usage:        1 bytes
  4097 ;; Hardware stack levels used: 1
  4098 ;; Hardware stack levels required when called: 3
  4099 ;; This function calls:
  4100 ;;		Nothing
  4101 ;; This function is called by:
  4102 ;;		_do_read
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106     0D77                     _uart_putc:	
  4107                           ;psect for function _uart_putc
  4108                           
  4109                           
  4110                           ;incstack = 0
  4111                           ; Regs used in _uart_putc: [wreg]
  4112                           ;uart_putc@c stored from wreg
  4113     0D77  0020               	movlb	0	; select bank0
  4114     0D78  00A0               	movwf	uart_putc@c
  4115     0D79                     l2313:
  4116                           
  4117                           ;uart.c: 160: void uart_putc(char c);uart.c: 161: {;uart.c: 163:     while (PIR1bits.TXI
      +                          F == 0) {
  4118     0D79  2D7B               	goto	l222
  4119     0D7A                     l223:
  4120                           
  4121                           ;uart.c: 164:         __nop();
  4122     0D7A  0000               	nop
  4123     0D7B                     l222:	
  4124                           ;uart.c: 165:     }
  4125                           
  4126                           
  4127                           ;uart.c: 163:     while (PIR1bits.TXIF == 0) {
  4128     0D7B  0020               	movlb	0	; select bank0
  4129     0D7C  1E11               	btfss	17,4	;volatile
  4130     0D7D  2D7F               	goto	u1901
  4131     0D7E  2D80               	goto	u1900
  4132     0D7F                     u1901:
  4133     0D7F  2D7A               	goto	l223
  4134     0D80                     u1900:
  4135     0D80                     l2315:
  4136                           
  4137                           ;uart.c: 168:     TXREG = c;
  4138     0D80  0820               	movf	uart_putc@c,w
  4139     0D81  0023               	movlb	3	; select bank3
  4140     0D82  009A               	movwf	26	;volatile
  4141                           
  4142                           ;uart.c: 171:     while(TXSTAbits.TRMT == 0) {
  4143     0D83  2D85               	goto	l225
  4144     0D84                     l226:
  4145                           
  4146                           ;uart.c: 172:         __nop();
  4147     0D84  0000               	nop
  4148     0D85                     l225:	
  4149                           ;uart.c: 173:     }
  4150                           
  4151                           
  4152                           ;uart.c: 171:     while(TXSTAbits.TRMT == 0) {
  4153     0D85  0023               	movlb	3	; select bank3
  4154     0D86  1C9E               	btfss	30,1	;volatile
  4155     0D87  2D89               	goto	u1911
  4156     0D88  2D8A               	goto	u1910
  4157     0D89                     u1911:
  4158     0D89  2D84               	goto	l226
  4159     0D8A                     u1910:
  4160     0D8A                     l228:
  4161     0D8A  0008               	return
  4162     0D8B                     __end_of_uart_putc:
  4163                           
  4164                           	psect	text13
  4165     0EB5                     __ptext13:	
  4166 ;; *************** function _do_init *****************
  4167 ;; Defined at:
  4168 ;;		line 310 in file "main.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;		None
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;  s               8    0[BANK1 ] unsigned char [8]
  4173 ;;  rate            2    8[BANK1 ] unsigned short 
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      void 
  4176 ;; Registers used:
  4177 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4184 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4186 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4187 ;;Total ram usage:       10 bytes
  4188 ;; Hardware stack levels used: 1
  4189 ;; Hardware stack levels required when called: 11
  4190 ;; This function calls:
  4191 ;;		_sprintf
  4192 ;;		_uart_init_brg
  4193 ;;		_uart_puts
  4194 ;; This function is called by:
  4195 ;;		_main
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199     0EB5                     _do_init:	
  4200                           ;psect for function _do_init
  4201                           
  4202     0EB5                     l2465:	
  4203                           ;incstack = 0
  4204                           ; Regs used in _do_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4205                           
  4206                           
  4207                           ;main.c: 312:     uint16_t rate;;main.c: 313:     char s[8];;main.c: 315:     rate = uar
      +                          t_init_brg();
  4208     0EB5  3187  2714  318E   	fcall	_uart_init_brg
  4209     0EB8  0020               	movlb	0	; select bank0
  4210     0EB9  0821               	movf	?_uart_init_brg+1,w
  4211     0EBA  0021               	movlb	1	; select bank1
  4212     0EBB  00A9               	movwf	(do_init@rate+1)^(0+128)
  4213     0EBC  0020               	movlb	0	; select bank0
  4214     0EBD  0820               	movf	?_uart_init_brg,w
  4215     0EBE  0021               	movlb	1	; select bank1
  4216     0EBF  00A8               	movwf	do_init@rate^(0+128)
  4217     0EC0                     l2467:
  4218                           
  4219                           ;main.c: 317:     sprintf(s, "%d\n", rate);
  4220     0EC0  30C1               	movlw	low (STR_1| (0+32768))
  4221     0EC1  0020               	movlb	0	; select bank0
  4222     0EC2  00D7               	movwf	sprintf@fmt
  4223     0EC3  3090               	movlw	high (STR_1| (0+32768))
  4224     0EC4  00D8               	movwf	sprintf@fmt+1
  4225     0EC5  0021               	movlb	1	; select bank1
  4226     0EC6  0829               	movf	(do_init@rate+1)^(0+128),w
  4227     0EC7  0020               	movlb	0	; select bank0
  4228     0EC8  00DA               	movwf	?_sprintf+3
  4229     0EC9  0021               	movlb	1	; select bank1
  4230     0ECA  0828               	movf	do_init@rate^(0+128),w
  4231     0ECB  0020               	movlb	0	; select bank0
  4232     0ECC  00D9               	movwf	?_sprintf+2
  4233     0ECD  30A0               	movlw	(low (do_init@s| 0))& (0+255)
  4234     0ECE  318D  25F7  318E   	fcall	_sprintf
  4235     0ED1                     l2469:
  4236                           
  4237                           ;main.c: 318:     uart_puts(s);
  4238     0ED1  30A0               	movlw	low do_init@s
  4239     0ED2  0020               	movlb	0	; select bank0
  4240     0ED3  00A0               	movwf	uart_puts@s
  4241     0ED4  3000               	movlw	high do_init@s
  4242     0ED5  00A1               	movwf	uart_puts@s+1
  4243     0ED6  318F  2704  318E   	fcall	_uart_puts
  4244     0ED9                     l120:
  4245     0ED9  0008               	return
  4246     0EDA                     __end_of_do_init:
  4247                           
  4248                           	psect	text14
  4249     0714                     __ptext14:	
  4250 ;; *************** function _uart_init_brg *****************
  4251 ;; Defined at:
  4252 ;;		line 89 in file "uart.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;		None
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;  c               1    0        unsigned char 
  4257 ;;  rate            2    7[BANK0 ] unsigned short 
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  2    0[BANK0 ] unsigned short 
  4260 ;; Registers used:
  4261 ;;		wreg, status,2
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4267 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4268 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4269 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4270 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4271 ;;Total ram usage:        9 bytes
  4272 ;; Hardware stack levels used: 1
  4273 ;; Hardware stack levels required when called: 3
  4274 ;; This function calls:
  4275 ;;		Nothing
  4276 ;; This function is called by:
  4277 ;;		_do_init
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281     0714                     _uart_init_brg:	
  4282                           ;psect for function _uart_init_brg
  4283                           
  4284     0714                     l2265:	
  4285                           ;incstack = 0
  4286                           ; Regs used in _uart_init_brg: [wreg+status,2]
  4287                           
  4288     0714                     l2267:
  4289                           
  4290                           ;uart.c: 93:     PIE1bits.RCIE=0;
  4291     0714  0021               	movlb	1	; select bank1
  4292     0715  1291               	bcf	17,5	;volatile
  4293     0716                     l2269:
  4294                           
  4295                           ;uart.c: 96:     BAUDCONbits.ABDEN = 1;
  4296     0716  0023               	movlb	3	; select bank3
  4297     0717  141F               	bsf	31,0	;volatile
  4298     0718                     l2271:
  4299                           
  4300                           ;uart.c: 102:         if (PIR1bits.RCIF) {
  4301     0718  0020               	movlb	0	; select bank0
  4302     0719  1E91               	btfss	17,5	;volatile
  4303     071A  2F1C               	goto	u1851
  4304     071B  2F1D               	goto	u1850
  4305     071C                     u1851:
  4306     071C  2F20               	goto	l207
  4307     071D                     u1850:
  4308     071D                     l2273:
  4309     071D  0023               	movlb	3	; select bank3
  4310     071E  0819               	movf	25,w	;volatile
  4311                           
  4312                           ;uart.c: 104:             break;
  4313     071F  2F44               	goto	l2283
  4314     0720                     l207:	
  4315                           ;uart.c: 105:         }
  4316                           
  4317                           
  4318                           ;uart.c: 108:         PORTEbits.RE1 = 1;
  4319     0720  1490               	bsf	16,1	;volatile
  4320     0721                     l2275:
  4321                           
  4322                           ;uart.c: 109:         _delay((unsigned long)((250)*(20000000/4000.0)));
  4323     0721  3007               	movlw	7
  4324     0722  0020               	movlb	0	; select bank0
  4325     0723  00A3               	movwf	??_uart_init_brg+1
  4326     0724  3058               	movlw	88
  4327     0725  00A2               	movwf	??_uart_init_brg
  4328     0726  3059               	movlw	89
  4329     0727                     u2447:
  4330     0727  0B89               	decfsz	9,f
  4331     0728  2F27               	goto	u2447
  4332     0729  0BA2               	decfsz	??_uart_init_brg,f
  4333     072A  2F27               	goto	u2447
  4334     072B  0BA3               	decfsz	??_uart_init_brg+1,f
  4335     072C  2F27               	goto	u2447
  4336     072D  3200               	nop2
  4337     072E                     l2277:
  4338                           
  4339                           ;uart.c: 110:         PORTEbits.RE1 = 0;
  4340     072E  0020               	movlb	0	; select bank0
  4341     072F  1090               	bcf	16,1	;volatile
  4342                           
  4343                           ;uart.c: 111:         _delay((unsigned long)((250)*(20000000/4000.0)));
  4344     0730  3007               	movlw	7
  4345     0731  0020               	movlb	0	; select bank0
  4346     0732  00A3               	movwf	??_uart_init_brg+1
  4347     0733  3058               	movlw	88
  4348     0734  00A2               	movwf	??_uart_init_brg
  4349     0735  3059               	movlw	89
  4350     0736                     u2457:
  4351     0736  0B89               	decfsz	9,f
  4352     0737  2F36               	goto	u2457
  4353     0738  0BA2               	decfsz	??_uart_init_brg,f
  4354     0739  2F36               	goto	u2457
  4355     073A  0BA3               	decfsz	??_uart_init_brg+1,f
  4356     073B  2F36               	goto	u2457
  4357     073C  3200               	nop2
  4358     073D                     l2279:
  4359                           
  4360                           ;uart.c: 113:         if ( BAUDCONbits.ABDOVF ) {
  4361     073D  0023               	movlb	3	; select bank3
  4362     073E  1F9F               	btfss	31,7	;volatile
  4363     073F  2F41               	goto	u1861
  4364     0740  2F42               	goto	u1860
  4365     0741                     u1861:
  4366     0741  2F18               	goto	l2271
  4367     0742                     u1860:
  4368     0742                     l2281:
  4369                           
  4370                           ;uart.c: 114:             BAUDCONbits.ABDOVF = 0;
  4371     0742  139F               	bcf	31,7	;volatile
  4372     0743  2F18               	goto	l2271
  4373     0744                     l2283:
  4374                           
  4375                           ;uart.c: 119:     rate = (SPBRGH << 8) | SPBRG;
  4376     0744  081C               	movf	28,w	;volatile
  4377     0745  0020               	movlb	0	; select bank0
  4378     0746  00A2               	movwf	??_uart_init_brg
  4379     0747  01A3               	clrf	??_uart_init_brg+1
  4380     0748  0822               	movf	??_uart_init_brg,w
  4381     0749  00A3               	movwf	??_uart_init_brg+1
  4382     074A  01A2               	clrf	??_uart_init_brg
  4383     074B  0023               	movlb	3	; select bank3
  4384     074C  081B               	movf	27,w	;volatile
  4385     074D  0020               	movlb	0	; select bank0
  4386     074E  0422               	iorwf	??_uart_init_brg,w
  4387     074F  00A5               	movwf	??_uart_init_brg+3
  4388     0750  0023               	movlb	3	; select bank3
  4389     0751  081C               	movf	28,w	;volatile
  4390     0752  0020               	movlb	0	; select bank0
  4391     0753  0423               	iorwf	??_uart_init_brg+1,w
  4392     0754  00A6               	movwf	??_uart_init_brg+4
  4393     0755  0825               	movf	??_uart_init_brg+3,w
  4394     0756  00A7               	movwf	uart_init_brg@rate
  4395     0757  0826               	movf	??_uart_init_brg+4,w
  4396     0758  00A8               	movwf	uart_init_brg@rate+1
  4397     0759                     l2285:
  4398                           
  4399                           ;uart.c: 122:     PORTEbits.RE1 = 0;
  4400     0759  1090               	bcf	16,1	;volatile
  4401     075A                     l2287:
  4402                           
  4403                           ;uart.c: 125:     PIE1bits.RCIE=1;
  4404     075A  0021               	movlb	1	; select bank1
  4405     075B  1691               	bsf	17,5	;volatile
  4406                           
  4407                           ;uart.c: 127:     return rate;
  4408     075C  0020               	movlb	0	; select bank0
  4409     075D  0828               	movf	uart_init_brg@rate+1,w
  4410     075E  00A1               	movwf	?_uart_init_brg+1
  4411     075F  0827               	movf	uart_init_brg@rate,w
  4412     0760  00A0               	movwf	?_uart_init_brg
  4413     0761                     l211:
  4414     0761  0008               	return
  4415     0762                     __end_of_uart_init_brg:
  4416                           
  4417                           	psect	text15
  4418     03EB                     __ptext15:	
  4419 ;; *************** function _do_blank *****************
  4420 ;; Defined at:
  4421 ;;		line 325 in file "main.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;		None
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;  data            1   35[BANK1 ] unsigned char 
  4426 ;;  ads            32    0[BANK1 ] unsigned char [32]
  4427 ;;  addr            2   36[BANK1 ] unsigned short 
  4428 ;;  s               2   33[BANK1 ] PTR unsigned char 
  4429 ;;		 -> STR_6(20), STR_2(15), 
  4430 ;;  ok              1   32[BANK1 ] _Bool 
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  1    wreg      void 
  4433 ;; Registers used:
  4434 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4441 ;;      Locals:         0       0      38       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4442 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4443 ;;      Totals:         0       2      38       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4444 ;;Total ram usage:       40 bytes
  4445 ;; Hardware stack levels used: 1
  4446 ;; Hardware stack levels required when called: 11
  4447 ;; This function calls:
  4448 ;;		_read_port
  4449 ;;		_setup_address
  4450 ;;		_sprintf
  4451 ;;		_uart_puts
  4452 ;; This function is called by:
  4453 ;;		_main
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457     03EB                     _do_blank:	
  4458                           ;psect for function _do_blank
  4459                           
  4460     03EB                     l2471:	
  4461                           ;incstack = 0
  4462                           ; Regs used in _do_blank: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4463                           
  4464                           
  4465                           ;main.c: 327:     uint16_t addr;;main.c: 328:     char ads[32];;main.c: 329:     _Bool o
      +                          k = 1;
  4466     03EB  0021               	movlb	1	; select bank1
  4467     03EC  01C0               	clrf	do_blank@ok^(0+128)
  4468     03ED  0AC0               	incf	do_blank@ok^(0+128),f
  4469                           
  4470                           ;main.c: 330:     char *s;;main.c: 333:     PORTBbits.RB1 = 1;
  4471     03EE  0020               	movlb	0	; select bank0
  4472     03EF  148D               	bsf	13,1	;volatile
  4473                           
  4474                           ;main.c: 335:     PORTBbits.RB3 = 0;
  4475     03F0  118D               	bcf	13,3	;volatile
  4476                           
  4477                           ;main.c: 337:     PORTBbits.RB4 = 0;
  4478     03F1  120D               	bcf	13,4	;volatile
  4479     03F2                     l2473:
  4480                           
  4481                           ;main.c: 339:     for (addr = 0; addr < 2048; ++addr) {
  4482     03F2  0021               	movlb	1	; select bank1
  4483     03F3  01C4               	clrf	do_blank@addr^(0+128)
  4484     03F4  01C5               	clrf	(do_blank@addr+1)^(0+128)
  4485     03F5                     l2479:
  4486                           
  4487                           ;main.c: 340:         if (cmd_active == 0) {
  4488     03F5  0867               	movf	_cmd_active^(0+128),w
  4489     03F6  1D03               	btfss	3,2
  4490     03F7  2BF9               	goto	u2091
  4491     03F8  2BFA               	goto	u2090
  4492     03F9                     u2091:
  4493     03F9  2C09               	goto	l2487
  4494     03FA                     u2090:
  4495     03FA                     l2481:
  4496                           
  4497                           ;main.c: 341:             s = "Check aborted\n";
  4498     03FA  3086               	movlw	low (STR_2| (0+32768))
  4499     03FB  00C1               	movwf	do_blank@s^(0+128)
  4500     03FC  3090               	movlw	high (STR_2| (0+32768))
  4501     03FD  00C2               	movwf	(do_blank@s^(0+128)+1)
  4502     03FE                     l2483:
  4503                           
  4504                           ;main.c: 342:             uart_puts(s);
  4505     03FE  0842               	movf	(do_blank@s+1)^(0+128),w
  4506     03FF  0020               	movlb	0	; select bank0
  4507     0400  00A1               	movwf	uart_puts@s+1
  4508     0401  0021               	movlb	1	; select bank1
  4509     0402  0841               	movf	do_blank@s^(0+128),w
  4510     0403  0020               	movlb	0	; select bank0
  4511     0404  00A0               	movwf	uart_puts@s
  4512     0405  318F  2704  3183   	fcall	_uart_puts
  4513     0408  2C75               	goto	l126
  4514     0409                     l2487:
  4515                           
  4516                           ;main.c: 347:         setup_address(addr);
  4517     0409  0845               	movf	(do_blank@addr+1)^(0+128),w
  4518     040A  0020               	movlb	0	; select bank0
  4519     040B  00A1               	movwf	setup_address@addr+1
  4520     040C  0021               	movlb	1	; select bank1
  4521     040D  0844               	movf	do_blank@addr^(0+128),w
  4522     040E  0020               	movlb	0	; select bank0
  4523     040F  00A0               	movwf	setup_address@addr
  4524     0410  318F  278E  3183   	fcall	_setup_address
  4525     0413                     l2489:
  4526                           
  4527                           ;main.c: 350:         uint8_t data = read_port();
  4528     0413  318E  2631  3183   	fcall	_read_port
  4529     0416  0021               	movlb	1	; select bank1
  4530     0417  00C3               	movwf	do_blank@data^(0+128)
  4531     0418                     l2491:
  4532                           
  4533                           ;main.c: 352:         if (data != 0xff) {
  4534     0418  0A43               	incf	do_blank@data^(0+128),w
  4535     0419  1903               	btfsc	3,2
  4536     041A  2C1C               	goto	u2101
  4537     041B  2C1D               	goto	u2100
  4538     041C                     u2101:
  4539     041C  2C5B               	goto	l2503
  4540     041D                     u2100:
  4541     041D                     l2493:
  4542                           
  4543                           ;main.c: 353:             uart_puts("Blank check fail at address ");
  4544     041D  302A               	movlw	low (STR_3| (0+32768))
  4545     041E  0020               	movlb	0	; select bank0
  4546     041F  00A0               	movwf	uart_puts@s
  4547     0420  3090               	movlw	high (STR_3| (0+32768))
  4548     0421  00A1               	movwf	uart_puts@s+1
  4549     0422  318F  2704  3183   	fcall	_uart_puts
  4550     0425                     l2495:
  4551                           
  4552                           ;main.c: 354:             sprintf(ads, "0x%04x = ", addr);
  4553     0425  30A3               	movlw	low (STR_4| (0+32768))
  4554     0426  0020               	movlb	0	; select bank0
  4555     0427  00D7               	movwf	sprintf@fmt
  4556     0428  3090               	movlw	high (STR_4| (0+32768))
  4557     0429  00D8               	movwf	sprintf@fmt+1
  4558     042A  0021               	movlb	1	; select bank1
  4559     042B  0845               	movf	(do_blank@addr+1)^(0+128),w
  4560     042C  0020               	movlb	0	; select bank0
  4561     042D  00DA               	movwf	?_sprintf+3
  4562     042E  0021               	movlb	1	; select bank1
  4563     042F  0844               	movf	do_blank@addr^(0+128),w
  4564     0430  0020               	movlb	0	; select bank0
  4565     0431  00D9               	movwf	?_sprintf+2
  4566     0432  30A0               	movlw	(low (do_blank@ads| 0))& (0+255)
  4567     0433  318D  25F7  3183   	fcall	_sprintf
  4568     0436                     l2497:
  4569                           
  4570                           ;main.c: 355:             uart_puts(ads);
  4571     0436  30A0               	movlw	low do_blank@ads
  4572     0437  0020               	movlb	0	; select bank0
  4573     0438  00A0               	movwf	uart_puts@s
  4574     0439  3000               	movlw	high do_blank@ads
  4575     043A  00A1               	movwf	uart_puts@s+1
  4576     043B  318F  2704  3183   	fcall	_uart_puts
  4577                           
  4578                           ;main.c: 356:             sprintf(ads, "0x%02x\n", data);
  4579     043E  30AD               	movlw	low (STR_5| (0+32768))
  4580     043F  0020               	movlb	0	; select bank0
  4581     0440  00D7               	movwf	sprintf@fmt
  4582     0441  3090               	movlw	high (STR_5| (0+32768))
  4583     0442  00D8               	movwf	sprintf@fmt+1
  4584     0443  0021               	movlb	1	; select bank1
  4585     0444  0843               	movf	do_blank@data^(0+128),w
  4586     0445  0020               	movlb	0	; select bank0
  4587     0446  00EB               	movwf	??_do_blank
  4588     0447  01EC               	clrf	??_do_blank+1
  4589     0448  086B               	movf	??_do_blank,w
  4590     0449  00D9               	movwf	?_sprintf+2
  4591     044A  086C               	movf	??_do_blank+1,w
  4592     044B  00DA               	movwf	?_sprintf+3
  4593     044C  30A0               	movlw	(low (do_blank@ads| 0))& (0+255)
  4594     044D  318D  25F7  3183   	fcall	_sprintf
  4595     0450                     l2499:
  4596                           
  4597                           ;main.c: 357:             uart_puts(ads);
  4598     0450  30A0               	movlw	low do_blank@ads
  4599     0451  0020               	movlb	0	; select bank0
  4600     0452  00A0               	movwf	uart_puts@s
  4601     0453  3000               	movlw	high do_blank@ads
  4602     0454  00A1               	movwf	uart_puts@s+1
  4603     0455  318F  2704  3183   	fcall	_uart_puts
  4604     0458                     l2501:
  4605                           
  4606                           ;main.c: 358:             ok = 0;
  4607     0458  0021               	movlb	1	; select bank1
  4608     0459  01C0               	clrf	do_blank@ok^(0+128)
  4609                           
  4610                           ;main.c: 359:             break;
  4611     045A  2C68               	goto	l124
  4612     045B                     l2503:
  4613                           
  4614                           ;main.c: 361:     }
  4615     045B  3001               	movlw	1
  4616     045C  07C4               	addwf	do_blank@addr^(0+128),f
  4617     045D  3000               	movlw	0
  4618     045E  3DC5               	addwfc	(do_blank@addr+1)^(0+128),f
  4619     045F  3008               	movlw	8
  4620     0460  0245               	subwf	(do_blank@addr+1)^(0+128),w
  4621     0461  3000               	movlw	0
  4622     0462  1903               	skipnz
  4623     0463  0244               	subwf	do_blank@addr^(0+128),w
  4624     0464  1C03               	skipc
  4625     0465  2C67               	goto	u2111
  4626     0466  2C68               	goto	u2110
  4627     0467                     u2111:
  4628     0467  2BF5               	goto	l2479
  4629     0468                     u2110:
  4630     0468                     l124:
  4631                           
  4632                           ;main.c: 364:     PORTBbits.RB1 = 0;
  4633     0468  0020               	movlb	0	; select bank0
  4634     0469  108D               	bcf	13,1	;volatile
  4635     046A                     l2505:
  4636                           
  4637                           ;main.c: 366:     if (ok) {
  4638     046A  0021               	movlb	1	; select bank1
  4639     046B  0840               	movf	do_blank@ok^(0+128),w
  4640     046C  1903               	btfsc	3,2
  4641     046D  2C6F               	goto	u2121
  4642     046E  2C70               	goto	u2120
  4643     046F                     u2121:
  4644     046F  2C75               	goto	l126
  4645     0470                     u2120:
  4646     0470                     l2507:
  4647                           
  4648                           ;main.c: 367:         s = "Passed blank check\n";
  4649     0470  3063               	movlw	low (STR_6| (0+32768))
  4650     0471  00C1               	movwf	do_blank@s^(0+128)
  4651     0472  3090               	movlw	high (STR_6| (0+32768))
  4652     0473  00C2               	movwf	(do_blank@s^(0+128)+1)
  4653     0474  2BFE               	goto	l2483
  4654     0475                     l126:
  4655     0475  0008               	return
  4656     0476                     __end_of_do_blank:
  4657                           
  4658                           	psect	text16
  4659     0F04                     __ptext16:	
  4660 ;; *************** function _uart_puts *****************
  4661 ;; Defined at:
  4662 ;;		line 180 in file "uart.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;  s               2    0[BANK0 ] PTR unsigned char 
  4665 ;;		 -> do_write@ads(48), STR_10(15), do_read@ads(16), STR_7(14), 
  4666 ;;		 -> STR_6(20), do_blank@ads(32), STR_3(29), STR_2(15), 
  4667 ;;		 -> do_init@s(8), 
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;  p               2    3[BANK0 ] PTR unsigned char 
  4670 ;;		 -> do_write@ads(48), STR_10(15), do_read@ads(16), STR_7(14), 
  4671 ;;		 -> STR_6(20), do_blank@ads(32), STR_3(29), STR_2(15), 
  4672 ;;		 -> do_init@s(8), 
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  1    wreg      void 
  4675 ;; Registers used:
  4676 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4682 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4683 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4684 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4685 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4686 ;;Total ram usage:        5 bytes
  4687 ;; Hardware stack levels used: 1
  4688 ;; Hardware stack levels required when called: 3
  4689 ;; This function calls:
  4690 ;;		Nothing
  4691 ;; This function is called by:
  4692 ;;		_do_init
  4693 ;;		_do_blank
  4694 ;;		_do_read
  4695 ;;		_do_write
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699     0F04                     _uart_puts:	
  4700                           ;psect for function _uart_puts
  4701                           
  4702     0F04                     l2303:	
  4703                           ;incstack = 0
  4704                           ; Regs used in _uart_puts: [wreg-fsr0h+status,2+status,0+pclath]
  4705                           
  4706                           
  4707                           ;uart.c: 180: void uart_puts(char *s);uart.c: 181: {;uart.c: 183:     while (PIR1bits.TX
      +                          IF == 0) {
  4708     0F04  2F06               	goto	l231
  4709     0F05                     l232:
  4710                           
  4711                           ;uart.c: 184:         __nop();
  4712     0F05  0000               	nop
  4713     0F06                     l231:	
  4714                           ;uart.c: 185:     }
  4715                           
  4716                           
  4717                           ;uart.c: 183:     while (PIR1bits.TXIF == 0) {
  4718     0F06  0020               	movlb	0	; select bank0
  4719     0F07  1E11               	btfss	17,4	;volatile
  4720     0F08  2F0A               	goto	u1871
  4721     0F09  2F0B               	goto	u1870
  4722     0F0A                     u1871:
  4723     0F0A  2F05               	goto	l232
  4724     0F0B                     u1870:
  4725     0F0B                     l2305:
  4726                           
  4727                           ;uart.c: 188:     char *p = s;
  4728     0F0B  0821               	movf	uart_puts@s+1,w
  4729     0F0C  00A4               	movwf	uart_puts@p+1
  4730     0F0D  0820               	movf	uart_puts@s,w
  4731     0F0E  00A3               	movwf	uart_puts@p
  4732                           
  4733                           ;uart.c: 189:     while (*p) {
  4734     0F0F  2F23               	goto	l2311
  4735     0F10                     l2307:
  4736                           
  4737                           ;uart.c: 190:         TXREG = *p++;
  4738     0F10  0823               	movf	uart_puts@p,w
  4739     0F11  0084               	movwf	4
  4740     0F12  0824               	movf	uart_puts@p+1,w
  4741     0F13  0085               	movwf	5
  4742     0F14  0800               	movf	0,w	;code access
  4743     0F15  0023               	movlb	3	; select bank3
  4744     0F16  009A               	movwf	26	;volatile
  4745     0F17                     l2309:
  4746     0F17  3001               	movlw	1
  4747     0F18  0020               	movlb	0	; select bank0
  4748     0F19  07A3               	addwf	uart_puts@p,f
  4749     0F1A  3000               	movlw	0
  4750     0F1B  3DA4               	addwfc	uart_puts@p+1,f
  4751                           
  4752                           ;uart.c: 191:         while(TXSTAbits.TRMT == 0) {
  4753     0F1C  2F1E               	goto	l236
  4754     0F1D                     l237:
  4755                           
  4756                           ;uart.c: 192:             __nop();
  4757     0F1D  0000               	nop
  4758     0F1E                     l236:	
  4759                           ;uart.c: 193:         }
  4760                           
  4761                           
  4762                           ;uart.c: 191:         while(TXSTAbits.TRMT == 0) {
  4763     0F1E  0023               	movlb	3	; select bank3
  4764     0F1F  1C9E               	btfss	30,1	;volatile
  4765     0F20  2F22               	goto	u1881
  4766     0F21  2F23               	goto	u1880
  4767     0F22                     u1881:
  4768     0F22  2F1D               	goto	l237
  4769     0F23                     u1880:
  4770     0F23                     l2311:
  4771                           
  4772                           ;uart.c: 189:     while (*p) {
  4773     0F23  0020               	movlb	0	; select bank0
  4774     0F24  0823               	movf	uart_puts@p,w
  4775     0F25  0084               	movwf	4
  4776     0F26  0824               	movf	uart_puts@p+1,w
  4777     0F27  0085               	movwf	5
  4778     0F28  0012               	moviw fsr0++
  4779     0F29  1D03               	btfss	3,2
  4780     0F2A  2F2C               	goto	u1891
  4781     0F2B  2F2D               	goto	u1890
  4782     0F2C                     u1891:
  4783     0F2C  2F10               	goto	l2307
  4784     0F2D                     u1890:
  4785     0F2D                     l240:
  4786     0F2D  0008               	return
  4787     0F2E                     __end_of_uart_puts:
  4788                           
  4789                           	psect	text17
  4790     0DF7                     __ptext17:	
  4791 ;; *************** function _sprintf *****************
  4792 ;; Defined at:
  4793 ;;		line 9 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/nf_sprintf.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;  s               1    wreg     PTR unsigned char 
  4796 ;;		 -> do_write@ads(48), do_read@ads(16), do_blank@ads(32), do_init@s(8), 
  4797 ;;  fmt             2   55[BANK0 ] PTR const unsigned char 
  4798 ;;		 -> STR_12(28), STR_11(42), STR_9(5), STR_8(7), 
  4799 ;;		 -> STR_5(8), STR_4(10), STR_1(4), 
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;  s               1   63[BANK0 ] PTR unsigned char 
  4802 ;;		 -> do_write@ads(48), do_read@ads(16), do_blank@ads(32), do_init@s(8), 
  4803 ;;  f              11   64[BANK0 ] struct _IO_FILE
  4804 ;;  ret             2    0        int 
  4805 ;;  ap              1   62[BANK0 ] PTR void [1]
  4806 ;;		 -> ?_sprintf(2), 
  4807 ;; Return value:  Size  Location     Type
  4808 ;;                  2   55[BANK0 ] int 
  4809 ;; Registers used:
  4810 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4811 ;; Tracked objects:
  4812 ;;		On entry : 0/0
  4813 ;;		On exit  : 0/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4816 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4817 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4818 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4819 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4820 ;;Total ram usage:       20 bytes
  4821 ;; Hardware stack levels used: 1
  4822 ;; Hardware stack levels required when called: 10
  4823 ;; This function calls:
  4824 ;;		_vfprintf
  4825 ;; This function is called by:
  4826 ;;		_do_init
  4827 ;;		_do_blank
  4828 ;;		_do_read
  4829 ;;		_do_write
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833     0DF7                     _sprintf:	
  4834                           ;psect for function _sprintf
  4835                           
  4836                           
  4837                           ;incstack = 0
  4838                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4839                           ;sprintf@s stored from wreg
  4840     0DF7  0020               	movlb	0	; select bank0
  4841     0DF8  00DF               	movwf	sprintf@s
  4842     0DF9                     l2291:
  4843     0DF9  3059               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  4844     0DFA  00DE               	movwf	sprintf@ap
  4845     0DFB  085F               	movf	sprintf@s,w
  4846     0DFC  00E0               	movwf	sprintf@f
  4847     0DFD                     l2293:
  4848     0DFD  01E2               	clrf	sprintf@f+2
  4849     0DFE  01E3               	clrf	sprintf@f+3
  4850     0DFF                     l2295:
  4851     0DFF  01E9               	clrf	sprintf@f+9
  4852     0E00  01EA               	clrf	sprintf@f+10
  4853     0E01                     l2297:
  4854     0E01  0858               	movf	sprintf@fmt+1,w
  4855     0E02  00D1               	movwf	vfprintf@fmt+1
  4856     0E03  0857               	movf	sprintf@fmt,w
  4857     0E04  00D0               	movwf	vfprintf@fmt
  4858     0E05  305E               	movlw	(low (sprintf@ap| 0))& (0+255)
  4859     0E06  00D2               	movwf	vfprintf@ap
  4860     0E07  3060               	movlw	(low (sprintf@f| 0))& (0+255)
  4861     0E08  318D  25A2  318D   	fcall	_vfprintf
  4862     0E0B                     l2299:
  4863     0E0B  0020               	movlb	0	; select bank0
  4864     0E0C  0862               	movf	sprintf@f+2,w
  4865     0E0D  075F               	addwf	sprintf@s,w
  4866     0E0E  00DD               	movwf	??_sprintf
  4867     0E0F  085D               	movf	??_sprintf,w
  4868     0E10  0086               	movwf	6
  4869     0E11  0187               	clrf	7
  4870     0E12  0181               	clrf	1
  4871     0E13                     l859:
  4872     0E13  0008               	return
  4873     0E14                     __end_of_sprintf:
  4874                           
  4875                           	psect	text18
  4876     0DA2                     __ptext18:	
  4877 ;; *************** function _vfprintf *****************
  4878 ;; Defined at:
  4879 ;;		line 1817 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;  fp              1    wreg     PTR struct _IO_FILE
  4882 ;;		 -> sprintf@f(11), 
  4883 ;;  fmt             2   48[BANK0 ] PTR const unsigned char 
  4884 ;;		 -> STR_12(28), STR_11(42), STR_9(5), STR_8(7), 
  4885 ;;		 -> STR_5(8), STR_4(10), STR_1(4), 
  4886 ;;  ap              1   50[BANK0 ] PTR PTR void 
  4887 ;;		 -> sprintf@ap(1), 
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;  fp              1   52[BANK0 ] PTR struct _IO_FILE
  4890 ;;		 -> sprintf@f(11), 
  4891 ;;  cfmt            2   53[BANK0 ] PTR unsigned char 
  4892 ;;		 -> STR_12(28), STR_11(42), STR_9(5), STR_8(7), 
  4893 ;;		 -> STR_5(8), STR_4(10), STR_1(4), 
  4894 ;; Return value:  Size  Location     Type
  4895 ;;                  2   48[BANK0 ] int 
  4896 ;; Registers used:
  4897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4898 ;; Tracked objects:
  4899 ;;		On entry : 0/0
  4900 ;;		On exit  : 0/0
  4901 ;;		Unchanged: 0/0
  4902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4903 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4904 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4905 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4906 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4907 ;;Total ram usage:        7 bytes
  4908 ;; Hardware stack levels used: 1
  4909 ;; Hardware stack levels required when called: 9
  4910 ;; This function calls:
  4911 ;;		_vfpfcnvrt
  4912 ;; This function is called by:
  4913 ;;		_sprintf
  4914 ;; This function uses a non-reentrant model
  4915 ;;
  4916                           
  4917     0DA2                     _vfprintf:	
  4918                           ;psect for function _vfprintf
  4919                           
  4920                           
  4921                           ;incstack = 0
  4922                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4923                           ;vfprintf@fp stored from wreg
  4924     0DA2  0020               	movlb	0	; select bank0
  4925     0DA3  00D4               	movwf	vfprintf@fp
  4926     0DA4                     l2171:
  4927                           
  4928                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.46/pic/sources/c99/
      +                          common/doprnt.c: 1818: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt
      +                          .c: 1820:     char *cfmt;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprn
      +                          t.c: 1822:     cfmt = (char *)fmt;
  4929     0DA4  0851               	movf	vfprintf@fmt+1,w
  4930     0DA5  00D6               	movwf	vfprintf@cfmt+1
  4931     0DA6  0850               	movf	vfprintf@fmt,w
  4932     0DA7  00D5               	movwf	vfprintf@cfmt
  4933                           
  4934                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
  4935     0DA8  2DB1               	goto	l2175
  4936     0DA9                     l2173:
  4937                           
  4938                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1830:    vfpfcnvrt(f
      +                          p, &cfmt, ap);
  4939     0DA9  3055               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4940     0DAA  00C2               	movwf	vfpfcnvrt@fmt
  4941     0DAB  0852               	movf	vfprintf@ap,w
  4942     0DAC  00C3               	movwf	vfpfcnvrt@ap
  4943     0DAD  0854               	movf	vfprintf@fp,w
  4944     0DAE  3180  206C  318D   	fcall	_vfpfcnvrt
  4945     0DB1                     l2175:
  4946                           
  4947                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
  4948     0DB1  0020               	movlb	0	; select bank0
  4949     0DB2  0855               	movf	vfprintf@cfmt,w
  4950     0DB3  0084               	movwf	4
  4951     0DB4  0856               	movf	vfprintf@cfmt+1,w
  4952     0DB5  0085               	movwf	5
  4953     0DB6  0012               	moviw fsr0++
  4954     0DB7  1D03               	btfss	3,2
  4955     0DB8  2DBA               	goto	u1791
  4956     0DB9  2DBB               	goto	u1790
  4957     0DBA                     u1791:
  4958     0DBA  2DA9               	goto	l2173
  4959     0DBB                     u1790:
  4960     0DBB                     l2177:
  4961                           
  4962                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1835:  return 0;
  4963     0DBB  01D0               	clrf	?_vfprintf
  4964     0DBC  01D1               	clrf	?_vfprintf+1
  4965     0DBD                     l947:
  4966     0DBD  0008               	return
  4967     0DBE                     __end_of_vfprintf:
  4968                           
  4969                           	psect	text19
  4970     006C                     __ptext19:	
  4971 ;; *************** function _vfpfcnvrt *****************
  4972 ;; Defined at:
  4973 ;;		line 1177 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;  fp              1    wreg     PTR struct _IO_FILE
  4976 ;;		 -> sprintf@f(11), 
  4977 ;;  fmt             1   34[BANK0 ] PTR PTR unsigned char 
  4978 ;;		 -> vfprintf@cfmt(2), 
  4979 ;;  ap              1   35[BANK0 ] PTR PTR void 
  4980 ;;		 -> sprintf@ap(1), 
  4981 ;; Auto vars:     Size  Location     Type
  4982 ;;  fp              1   45[BANK0 ] PTR struct _IO_FILE
  4983 ;;		 -> sprintf@f(11), 
  4984 ;;  convarg         4   41[BANK0 ] struct .
  4985 ;;  cp              2   46[BANK0 ] PTR unsigned char 
  4986 ;;		 -> STR_12(28), STR_11(42), STR_9(5), STR_8(7), 
  4987 ;;		 -> STR_5(8), STR_4(10), STR_1(4), 
  4988 ;;  done            1   40[BANK0 ] _Bool 
  4989 ;;  c               1    0        unsigned char 
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  1    wreg      void 
  4992 ;; Registers used:
  4993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4999 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5000 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5001 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5002 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5003 ;;Total ram usage:       14 bytes
  5004 ;; Hardware stack levels used: 1
  5005 ;; Hardware stack levels required when called: 8
  5006 ;; This function calls:
  5007 ;;		_dtoa
  5008 ;;		_fputc
  5009 ;;		_read_prec_or_width
  5010 ;;		_xtoa
  5011 ;; This function is called by:
  5012 ;;		_vfprintf
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016     006C                     _vfpfcnvrt:	
  5017                           ;psect for function _vfpfcnvrt
  5018                           
  5019                           
  5020                           ;incstack = 0
  5021                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5022                           ;vfpfcnvrt@fp stored from wreg
  5023     006C  0020               	movlb	0	; select bank0
  5024     006D  00CD               	movwf	vfpfcnvrt@fp
  5025     006E                     l2097:
  5026                           
  5027                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE
      +                           *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.46/pic/sources/c99/common/
      +                          doprnt.c: 1178: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 117
      +                          9:     char c, *cp;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1
      +                          180:     _Bool done;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 
      +                          1188:  } convarg;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 120
      +                          1:     if ((*fmt)[0] == '%') {
  5028     006E  0842               	movf	vfpfcnvrt@fmt,w
  5029     006F  0086               	movwf	6
  5030     0070  0187               	clrf	7
  5031     0071  3F40               	moviw [0]fsr1
  5032     0072  00C4               	movwf	??_vfpfcnvrt
  5033     0073  3F41               	moviw [1]fsr1
  5034     0074  00C5               	movwf	??_vfpfcnvrt+1
  5035     0075  0844               	movf	??_vfpfcnvrt,w
  5036     0076  0084               	movwf	4
  5037     0077  0845               	movf	??_vfpfcnvrt+1,w
  5038     0078  0085               	movwf	5
  5039     0079  0012               	moviw fsr0++
  5040     007A  3A25               	xorlw	37
  5041     007B  1D03               	btfss	3,2
  5042     007C  287E               	goto	u1721
  5043     007D  287F               	goto	u1720
  5044     007E                     u1721:
  5045     007E  2950               	goto	l2155
  5046     007F                     u1720:
  5047     007F                     l2099:
  5048                           
  5049                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt
      +                          ;
  5050     007F  0842               	movf	vfpfcnvrt@fmt,w
  5051     0080  0086               	movwf	6
  5052     0081  0187               	clrf	7
  5053     0082  3001               	movlw	1
  5054     0083  0781               	addwf	1,f
  5055     0084  3141               	addfsr 1,1
  5056     0085  1803               	skipnc
  5057     0086  0A81               	incf	1,f
  5058     0087                     l2101:
  5059                           
  5060                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1204:         flags 
      +                          = width = 0;
  5061     0087  0021               	movlb	1	; select bank1
  5062     0088  01DB               	clrf	_width^(0+128)
  5063     0089  01DC               	clrf	(_width+1)^(0+128)
  5064     008A  1003               	clrc
  5065     008B  3000               	movlw	0
  5066     008C  1803               	btfsc	3,0
  5067     008D  3001               	movlw	1
  5068     008E  00E5               	movwf	_flags^(0+128)
  5069     008F                     l2103:
  5070                           
  5071                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1205:         prec =
      +                           -1;
  5072     008F  30FF               	movlw	255
  5073     0090  00DD               	movwf	_prec^(0+128)
  5074     0091  30FF               	movlw	255
  5075     0092  00DE               	movwf	(_prec^(0+128)+1)
  5076     0093                     l2105:
  5077                           
  5078                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1209:         done =
      +                           0;
  5079     0093  0020               	movlb	0	; select bank0
  5080     0094  01C8               	clrf	vfpfcnvrt@done
  5081                           
  5082                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1210:         while 
      +                          (!done) {
  5083     0095  28B5               	goto	l2113
  5084     0096                     l927:	
  5085                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1219:               
      +                            case '0' :
  5086                           
  5087                           
  5088                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1220:               
      +                                flags |= (1 << 1);
  5089     0096  0021               	movlb	1	; select bank1
  5090     0097  14E5               	bsf	_flags^(0+128),1
  5091     0098                     l2107:
  5092                           
  5093                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1221:               
      +                                ++*fmt;
  5094     0098  0020               	movlb	0	; select bank0
  5095     0099  0842               	movf	vfpfcnvrt@fmt,w
  5096     009A  0086               	movwf	6
  5097     009B  0187               	clrf	7
  5098     009C  3001               	movlw	1
  5099     009D  0781               	addwf	1,f
  5100     009E  3141               	addfsr 1,1
  5101     009F  1803               	skipnc
  5102     00A0  0A81               	incf	1,f
  5103                           
  5104                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1222:               
      +                                break;
  5105     00A1  28B5               	goto	l2113
  5106     00A2                     l929:	
  5107                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1242:               
      +                            default:
  5108                           
  5109                           
  5110                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1243:               
      +                                done = 1;
  5111     00A2  01C8               	clrf	vfpfcnvrt@done
  5112     00A3  0AC8               	incf	vfpfcnvrt@done,f
  5113                           
  5114                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1244:               
      +                                break;
  5115     00A4  28B5               	goto	l2113
  5116     00A5                     l2111:
  5117     00A5  0842               	movf	vfpfcnvrt@fmt,w
  5118     00A6  0086               	movwf	6
  5119     00A7  0187               	clrf	7
  5120     00A8  3F40               	moviw [0]fsr1
  5121     00A9  00C4               	movwf	??_vfpfcnvrt
  5122     00AA  3F41               	moviw [1]fsr1
  5123     00AB  00C5               	movwf	??_vfpfcnvrt+1
  5124     00AC  0844               	movf	??_vfpfcnvrt,w
  5125     00AD  0084               	movwf	4
  5126     00AE  0845               	movf	??_vfpfcnvrt+1,w
  5127     00AF  0085               	movwf	5
  5128     00B0  0800               	movf	0,w	;code access
  5129                           
  5130                           ; Switch size 1, requested type "simple"
  5131                           ; Number of cases is 1, Range of values is 48 to 48
  5132                           ; switch strategies available:
  5133                           ; Name         Instructions Cycles
  5134                           ; simple_byte            4     3 (average)
  5135                           ; direct_byte           11     9 (fixed)
  5136                           ; jumptable            263     9 (fixed)
  5137                           ;	Chosen strategy is simple_byte
  5138     00B1  3A30               	xorlw	48	; case 48
  5139     00B2  1903               	skipnz
  5140     00B3  2896               	goto	l927
  5141     00B4  28A2               	goto	l929
  5142     00B5                     l2113:
  5143                           
  5144                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1210:         while 
      +                          (!done) {
  5145     00B5  0848               	movf	vfpfcnvrt@done,w
  5146     00B6  1903               	btfsc	3,2
  5147     00B7  28B9               	goto	u1731
  5148     00B8  28BA               	goto	u1730
  5149     00B9                     u1731:
  5150     00B9  28A5               	goto	l2111
  5151     00BA                     u1730:
  5152     00BA                     l2115:
  5153                           
  5154                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1256:   width = read
      +                          _prec_or_width(fmt, ap);
  5155     00BA  0843               	movf	vfpfcnvrt@ap,w
  5156     00BB  00A6               	movwf	read_prec_or_width@ap
  5157     00BC  0842               	movf	vfpfcnvrt@fmt,w
  5158     00BD  3185  2553  3180   	fcall	_read_prec_or_width
  5159     00C0  0020               	movlb	0	; select bank0
  5160     00C1  0827               	movf	?_read_prec_or_width+1,w
  5161     00C2  0021               	movlb	1	; select bank1
  5162     00C3  00DC               	movwf	(_width+1)^(0+128)
  5163     00C4  0020               	movlb	0	; select bank0
  5164     00C5  0826               	movf	?_read_prec_or_width,w
  5165     00C6  0021               	movlb	1	; select bank1
  5166     00C7  00DB               	movwf	_width^(0+128)
  5167     00C8                     l2117:
  5168                           
  5169                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1257:   if (width < 
      +                          0) {
  5170     00C8  1FDC               	btfss	(_width+1)^(0+128),7
  5171     00C9  28CB               	goto	u1741
  5172     00CA  28CC               	goto	u1740
  5173     00CB                     u1741:
  5174     00CB  28D2               	goto	l2123
  5175     00CC                     u1740:
  5176     00CC                     l2119:
  5177                           
  5178                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1258:    flags |= (1
      +                           << 0);
  5179     00CC  1465               	bsf	_flags^(0+128),0
  5180     00CD                     l2121:
  5181                           
  5182                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1259:    width = -wi
      +                          dth;
  5183     00CD  09DB               	comf	_width^(0+128),f
  5184     00CE  09DC               	comf	(_width+1)^(0+128),f
  5185     00CF  0ADB               	incf	_width^(0+128),f
  5186     00D0  1903               	skipnz
  5187     00D1  0ADC               	incf	(_width+1)^(0+128),f
  5188     00D2                     l2123:
  5189                           
  5190                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1291:   cp = *fmt;
  5191     00D2  0020               	movlb	0	; select bank0
  5192     00D3  0842               	movf	vfpfcnvrt@fmt,w
  5193     00D4  0086               	movwf	6
  5194     00D5  0187               	clrf	7
  5195     00D6  3F40               	moviw [0]fsr1
  5196     00D7  00CE               	movwf	vfpfcnvrt@cp
  5197     00D8  3F41               	moviw [1]fsr1
  5198     00D9  00CF               	movwf	vfpfcnvrt@cp+1
  5199     00DA                     l2125:
  5200                           
  5201                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1361:   if (*cp == '
      +                          d' || *cp == 'i') {
  5202     00DA  084E               	movf	vfpfcnvrt@cp,w
  5203     00DB  0084               	movwf	4
  5204     00DC  084F               	movf	vfpfcnvrt@cp+1,w
  5205     00DD  0085               	movwf	5
  5206     00DE  0012               	moviw fsr0++
  5207     00DF  3A64               	xorlw	100
  5208     00E0  1903               	btfsc	3,2
  5209     00E1  28E3               	goto	u1751
  5210     00E2  28E4               	goto	u1750
  5211     00E3                     u1751:
  5212     00E3  28EE               	goto	l2129
  5213     00E4                     u1750:
  5214     00E4                     l2127:
  5215     00E4  084E               	movf	vfpfcnvrt@cp,w
  5216     00E5  0084               	movwf	4
  5217     00E6  084F               	movf	vfpfcnvrt@cp+1,w
  5218     00E7  0085               	movwf	5
  5219     00E8  0012               	moviw fsr0++
  5220     00E9  3A69               	xorlw	105
  5221     00EA  1D03               	btfss	3,2
  5222     00EB  28ED               	goto	u1761
  5223     00EC  28EE               	goto	u1760
  5224     00ED                     u1761:
  5225     00ED  2910               	goto	l2137
  5226     00EE                     u1760:
  5227     00EE                     l2129:
  5228                           
  5229                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1404:    convarg.sin
      +                          t = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  5230     00EE  0843               	movf	vfpfcnvrt@ap,w
  5231     00EF  0086               	movwf	6
  5232     00F0  0187               	clrf	7
  5233     00F1  0801               	movf	1,w
  5234     00F2  0084               	movwf	4
  5235     00F3  0185               	clrf	5
  5236     00F4  3002               	movlw	2
  5237     00F5  0781               	addwf	1,f
  5238     00F6  3F00               	moviw [0]fsr0
  5239     00F7  00C9               	movwf	vfpfcnvrt@convarg
  5240     00F8  3F01               	moviw [1]fsr0
  5241     00F9  00CA               	movwf	vfpfcnvrt@convarg+1
  5242     00FA                     l2131:
  5243                           
  5244                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1406:    *fmt = cp+1
      +                          ;
  5245     00FA  084E               	movf	vfpfcnvrt@cp,w
  5246     00FB  3E01               	addlw	1
  5247     00FC  00C4               	movwf	??_vfpfcnvrt
  5248     00FD  3000               	movlw	0
  5249     00FE  3D4F               	addwfc	vfpfcnvrt@cp+1,w
  5250     00FF  00C5               	movwf	??_vfpfcnvrt+1
  5251     0100  0842               	movf	vfpfcnvrt@fmt,w
  5252     0101  0086               	movwf	6
  5253     0102  0187               	clrf	7
  5254     0103  0844               	movf	??_vfpfcnvrt,w
  5255     0104  3FC0               	movwi [0]fsr1
  5256     0105  0845               	movf	??_vfpfcnvrt+1,w
  5257     0106  3FC1               	movwi [1]fsr1
  5258     0107                     l2133:
  5259                           
  5260                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1432:    return (voi
      +                          d) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  5261     0107  084A               	movf	vfpfcnvrt@convarg+1,w
  5262     0108  00B7               	movwf	dtoa@d+1
  5263     0109  0849               	movf	vfpfcnvrt@convarg,w
  5264     010A  00B6               	movwf	dtoa@d
  5265     010B  084D               	movf	vfpfcnvrt@fp,w
  5266     010C  3181  2169  3180   	fcall	_dtoa
  5267     010F  2968               	goto	l935
  5268     0110                     l2137:
  5269     0110  084E               	movf	vfpfcnvrt@cp,w
  5270     0111  0084               	movwf	4
  5271     0112  084F               	movf	vfpfcnvrt@cp+1,w
  5272     0113  0085               	movwf	5
  5273     0114  0012               	moviw fsr0++
  5274     0115  3A78               	xorlw	120
  5275     0116  1D03               	btfss	3,2
  5276     0117  2919               	goto	u1771
  5277     0118  291A               	goto	u1770
  5278     0119                     u1771:
  5279     0119  2946               	goto	l2151
  5280     011A                     u1770:
  5281     011A                     l2139:
  5282                           
  5283                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1452:     ) {;/Appli
      +                          cations/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1495:    convarg.uint = (vf
      +                          pf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
      +                          ));
  5284     011A  0843               	movf	vfpfcnvrt@ap,w
  5285     011B  0086               	movwf	6
  5286     011C  0187               	clrf	7
  5287     011D  0801               	movf	1,w
  5288     011E  0084               	movwf	4
  5289     011F  0185               	clrf	5
  5290     0120  3002               	movlw	2
  5291     0121  0781               	addwf	1,f
  5292     0122  3F00               	moviw [0]fsr0
  5293     0123  00C9               	movwf	vfpfcnvrt@convarg
  5294     0124  3F01               	moviw [1]fsr0
  5295     0125  00CA               	movwf	vfpfcnvrt@convarg+1
  5296     0126                     l2141:
  5297                           
  5298                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1497:    *fmt = cp+1
      +                          ;
  5299     0126  084E               	movf	vfpfcnvrt@cp,w
  5300     0127  3E01               	addlw	1
  5301     0128  00C4               	movwf	??_vfpfcnvrt
  5302     0129  3000               	movlw	0
  5303     012A  3D4F               	addwfc	vfpfcnvrt@cp+1,w
  5304     012B  00C5               	movwf	??_vfpfcnvrt+1
  5305     012C  0842               	movf	vfpfcnvrt@fmt,w
  5306     012D  0086               	movwf	6
  5307     012E  0187               	clrf	7
  5308     012F  0844               	movf	??_vfpfcnvrt,w
  5309     0130  3FC0               	movwi [0]fsr1
  5310     0131  0845               	movf	??_vfpfcnvrt+1,w
  5311     0132  3FC1               	movwi [1]fsr1
  5312                           
  5313                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1498:    switch (*cp
      +                          ) {
  5314     0133  293D               	goto	l2149
  5315     0134                     l2143:
  5316                           
  5317                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1586:      return (v
      +                          oid) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
  5318     0134  084A               	movf	vfpfcnvrt@convarg+1,w
  5319     0135  00B7               	movwf	xtoa@d+1
  5320     0136  0849               	movf	vfpfcnvrt@convarg,w
  5321     0137  00B6               	movwf	xtoa@d
  5322     0138  084D               	movf	vfpfcnvrt@fp,w
  5323     0139  3184  2476  3180   	fcall	_xtoa
  5324     013C  2968               	goto	l935
  5325     013D                     l2149:
  5326     013D  084E               	movf	vfpfcnvrt@cp,w
  5327     013E  0084               	movwf	4
  5328     013F  084F               	movf	vfpfcnvrt@cp+1,w
  5329     0140  0085               	movwf	5
  5330     0141  0800               	movf	0,w	;code access
  5331                           
  5332                           ; Switch size 1, requested type "simple"
  5333                           ; Number of cases is 1, Range of values is 120 to 120
  5334                           ; switch strategies available:
  5335                           ; Name         Instructions Cycles
  5336                           ; simple_byte            4     3 (average)
  5337                           ; direct_byte           11     9 (fixed)
  5338                           ; jumptable            263     9 (fixed)
  5339                           ;	Chosen strategy is simple_byte
  5340     0142  3A78               	xorlw	120	; case 120
  5341     0143  1903               	skipnz
  5342     0144  2934               	goto	l2143
  5343     0145  2946               	goto	l2151
  5344     0146                     l2151:
  5345                           
  5346                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt
      +                          ;
  5347     0146  0020               	movlb	0	; select bank0
  5348     0147  0842               	movf	vfpfcnvrt@fmt,w
  5349     0148  0086               	movwf	6
  5350     0149  0187               	clrf	7
  5351     014A  3001               	movlw	1
  5352     014B  0781               	addwf	1,f
  5353     014C  3141               	addfsr 1,1
  5354     014D  1803               	skipnc
  5355     014E  0A81               	incf	1,f
  5356     014F  2968               	goto	l935
  5357     0150                     l2155:
  5358                           
  5359                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1811:     fputc((int
      +                          )(*fmt)[0], fp);
  5360     0150  0842               	movf	vfpfcnvrt@fmt,w
  5361     0151  0086               	movwf	6
  5362     0152  0187               	clrf	7
  5363     0153  3F40               	moviw [0]fsr1
  5364     0154  00C4               	movwf	??_vfpfcnvrt
  5365     0155  3F41               	moviw [1]fsr1
  5366     0156  00C5               	movwf	??_vfpfcnvrt+1
  5367     0157  0844               	movf	??_vfpfcnvrt,w
  5368     0158  0084               	movwf	4
  5369     0159  0845               	movf	??_vfpfcnvrt+1,w
  5370     015A  0085               	movwf	5
  5371     015B  0800               	movf	0,w	;code access
  5372     015C  00C6               	movwf	??_vfpfcnvrt+2
  5373     015D  01C7               	clrf	??_vfpfcnvrt+3
  5374     015E  0846               	movf	??_vfpfcnvrt+2,w
  5375     015F  00A0               	movwf	fputc@c
  5376     0160  0847               	movf	??_vfpfcnvrt+3,w
  5377     0161  00A1               	movwf	fputc@c+1
  5378     0162  084D               	movf	vfpfcnvrt@fp,w
  5379     0163  00A2               	movwf	fputc@fp
  5380     0164  3186  26C2  3180   	fcall	_fputc
  5381     0167  2946               	goto	l2151
  5382     0168                     l935:
  5383     0168  0008               	return
  5384     0169                     __end_of_vfpfcnvrt:
  5385                           
  5386                           	psect	text20
  5387     0476                     __ptext20:	
  5388 ;; *************** function _xtoa *****************
  5389 ;; Defined at:
  5390 ;;		line 1055 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;  fp              1    wreg     PTR struct _IO_FILE
  5393 ;;		 -> sprintf@f(11), 
  5394 ;;  d               2   22[BANK0 ] unsigned int 
  5395 ;; Auto vars:     Size  Location     Type
  5396 ;;  fp              1   25[BANK0 ] PTR struct _IO_FILE
  5397 ;;		 -> sprintf@f(11), 
  5398 ;;  i               2   30[BANK0 ] int 
  5399 ;;  w               2   27[BANK0 ] int 
  5400 ;;  c               1   29[BANK0 ] unsigned char 
  5401 ;;  p               1   26[BANK0 ] _Bool 
  5402 ;; Return value:  Size  Location     Type
  5403 ;;                  1    wreg      void 
  5404 ;; Registers used:
  5405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5406 ;; Tracked objects:
  5407 ;;		On entry : 0/0
  5408 ;;		On exit  : 0/0
  5409 ;;		Unchanged: 0/0
  5410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5411 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5412 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5413 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5414 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5415 ;;Total ram usage:       10 bytes
  5416 ;; Hardware stack levels used: 1
  5417 ;; Hardware stack levels required when called: 7
  5418 ;; This function calls:
  5419 ;;		_pad
  5420 ;; This function is called by:
  5421 ;;		_vfpfcnvrt
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425     0476                     _xtoa:	
  5426                           ;psect for function _xtoa
  5427                           
  5428                           
  5429                           ;incstack = 0
  5430                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5431                           ;xtoa@fp stored from wreg
  5432     0476  0020               	movlb	0	; select bank0
  5433     0477  00B9               	movwf	xtoa@fp
  5434     0478                     l2031:
  5435                           
  5436                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1055: static void xt
      +                          oa(FILE *fp, vfpf_uint_t d);/Applications/microchip/xc8/v2.46/pic/sources/c99/common/dop
      +                          rnt.c: 1058: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1059: 
      +                           char c;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1063:     in
      +                          t i, w;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1067:  _Bool 
      +                          p = 1;
  5437     0478  01BA               	clrf	xtoa@p
  5438     0479  0ABA               	incf	xtoa@p,f
  5439     047A                     l2033:
  5440                           
  5441                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1082:     w = width;
  5442     047A  0021               	movlb	1	; select bank1
  5443     047B  085C               	movf	(_width+1)^(0+128),w
  5444     047C  0020               	movlb	0	; select bank0
  5445     047D  00BC               	movwf	xtoa@w+1
  5446     047E  0021               	movlb	1	; select bank1
  5447     047F  085B               	movf	_width^(0+128),w
  5448     0480  0020               	movlb	0	; select bank0
  5449     0481  00BB               	movwf	xtoa@w
  5450                           
  5451                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1095:     i = sizeof
      +                          (dbuf) - 1;
  5452     0482  301F               	movlw	31
  5453     0483  00BE               	movwf	xtoa@i
  5454     0484  3000               	movlw	0
  5455     0485  00BF               	movwf	xtoa@i+1
  5456     0486                     l2035:
  5457                           
  5458                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1096:     dbuf[i] = 
      +                          '\0';
  5459     0486  0022               	movlb	2	; select bank2
  5460     0487  01BF               	clrf	(_dbuf^(0+256)+31)
  5461                           
  5462                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1097:     while (!(i
      +                           < 2) && (d != 0
  5463     0488  2CB5               	goto	l2055
  5464     0489                     l2037:
  5465                           
  5466                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1106:     )) {;/Appl
      +                          ications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1107:         --i;
  5467     0489  30FF               	movlw	255
  5468     048A  0020               	movlb	0	; select bank0
  5469     048B  07BE               	addwf	xtoa@i,f
  5470     048C  30FF               	movlw	255
  5471     048D  3DBF               	addwfc	xtoa@i+1,f
  5472     048E                     l2039:
  5473                           
  5474                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1108:         c = d 
      +                          & 0x0f;
  5475     048E  0836               	movf	xtoa@d,w
  5476     048F  390F               	andlw	15
  5477     0490  00BD               	movwf	xtoa@c
  5478     0491                     l2041:
  5479                           
  5480                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1109:   if (c < 10) 
      +                          {
  5481     0491  300A               	movlw	10
  5482     0492  023D               	subwf	xtoa@c,w
  5483     0493  1803               	skipnc
  5484     0494  2C96               	goto	u1631
  5485     0495  2C97               	goto	u1630
  5486     0496                     u1631:
  5487     0496  2C9C               	goto	l2045
  5488     0497                     u1630:
  5489     0497                     l2043:
  5490                           
  5491                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1110:    c += '0';
  5492     0497  3030               	movlw	48
  5493     0498  00B8               	movwf	??_xtoa
  5494     0499  0838               	movf	??_xtoa,w
  5495     049A  07BD               	addwf	xtoa@c,f
  5496                           
  5497                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1111:   }
  5498     049B  2CA0               	goto	l2047
  5499     049C                     l2045:
  5500                           
  5501                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1116:    c += 'a' - 
      +                          10;
  5502     049C  3057               	movlw	87
  5503     049D  00B8               	movwf	??_xtoa
  5504     049E  0838               	movf	??_xtoa,w
  5505     049F  07BD               	addwf	xtoa@c,f
  5506     04A0                     l2047:
  5507                           
  5508                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1121:   dbuf[i] = c;
  5509     04A0  083E               	movf	xtoa@i,w
  5510     04A1  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5511     04A2  0086               	movwf	6
  5512     04A3  3001               	movlw	1	; select bank2/3
  5513     04A4  0087               	movwf	7
  5514     04A5  083D               	movf	xtoa@c,w
  5515     04A6  0081               	movwf	1
  5516     04A7                     l2049:
  5517                           
  5518                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1125:   p = 0;
  5519     04A7  01BA               	clrf	xtoa@p
  5520     04A8                     l2051:
  5521                           
  5522                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1127:         --w;
  5523     04A8  30FF               	movlw	255
  5524     04A9  07BB               	addwf	xtoa@w,f
  5525     04AA  30FF               	movlw	255
  5526     04AB  3DBC               	addwfc	xtoa@w+1,f
  5527     04AC                     l2053:
  5528                           
  5529                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1128:         d = d 
      +                          >> 4;
  5530     04AC  0E36               	swapf	xtoa@d,w
  5531     04AD  390F               	andlw	15
  5532     04AE  00B6               	movwf	xtoa@d
  5533     04AF  0E37               	swapf	xtoa@d+1,w
  5534     04B0  39F0               	andlw	240
  5535     04B1  04B6               	iorwf	xtoa@d,f
  5536     04B2  0E37               	swapf	xtoa@d+1,w
  5537     04B3  390F               	andlw	15
  5538     04B4  00B7               	movwf	xtoa@d+1
  5539     04B5                     l2055:
  5540                           
  5541                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1097:     while (!(i
      +                           < 2) && (d != 0
  5542     04B5  0020               	movlb	0	; select bank0
  5543     04B6  083F               	movf	xtoa@i+1,w
  5544     04B7  3A80               	xorlw	128
  5545     04B8  00B8               	movwf	??_xtoa
  5546     04B9  3080               	movlw	128
  5547     04BA  0238               	subwf	??_xtoa,w
  5548     04BB  1D03               	skipz
  5549     04BC  2CBF               	goto	u1645
  5550     04BD  3002               	movlw	2
  5551     04BE  023E               	subwf	xtoa@i,w
  5552     04BF                     u1645:
  5553     04BF  1C03               	skipc
  5554     04C0  2CC2               	goto	u1641
  5555     04C1  2CC3               	goto	u1640
  5556     04C2                     u1641:
  5557     04C2  2CE1               	goto	l2065
  5558     04C3                     u1640:
  5559     04C3                     l2057:
  5560     04C3  0020               	movlb	0	; select bank0
  5561     04C4  0836               	movf	xtoa@d,w
  5562     04C5  0437               	iorwf	xtoa@d+1,w
  5563     04C6  1D03               	btfss	3,2
  5564     04C7  2CC9               	goto	u1651
  5565     04C8  2CCA               	goto	u1650
  5566     04C9                     u1651:
  5567     04C9  2C89               	goto	l2037
  5568     04CA                     u1650:
  5569     04CA                     l2059:
  5570     04CA  083A               	movf	xtoa@p,w
  5571     04CB  1D03               	btfss	3,2
  5572     04CC  2CCE               	goto	u1661
  5573     04CD  2CCF               	goto	u1660
  5574     04CE                     u1661:
  5575     04CE  2C89               	goto	l2037
  5576     04CF                     u1660:
  5577     04CF                     l2061:
  5578     04CF  083C               	movf	xtoa@w+1,w
  5579     04D0  3A80               	xorlw	128
  5580     04D1  00B8               	movwf	??_xtoa
  5581     04D2  3080               	movlw	128
  5582     04D3  0238               	subwf	??_xtoa,w
  5583     04D4  1D03               	skipz
  5584     04D5  2CD8               	goto	u1675
  5585     04D6  3001               	movlw	1
  5586     04D7  023B               	subwf	xtoa@w,w
  5587     04D8                     u1675:
  5588     04D8  1C03               	skipc
  5589     04D9  2CDB               	goto	u1671
  5590     04DA  2CDC               	goto	u1670
  5591     04DB                     u1671:
  5592     04DB  2CE1               	goto	l2065
  5593     04DC                     u1670:
  5594     04DC                     l2063:
  5595     04DC  0021               	movlb	1	; select bank1
  5596     04DD  18E5               	btfsc	_flags^(0+128),1
  5597     04DE  2CE0               	goto	u1681
  5598     04DF  2CE1               	goto	u1680
  5599     04E0                     u1681:
  5600     04E0  2C89               	goto	l2037
  5601     04E1                     u1680:
  5602     04E1                     l2065:
  5603                           
  5604                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1152:     return (vo
      +                          id) pad(fp, &dbuf[i], w);
  5605     04E1  0020               	movlb	0	; select bank0
  5606     04E2  083E               	movf	xtoa@i,w
  5607     04E3  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5608     04E4  00AF               	movwf	pad@buf
  5609     04E5  083C               	movf	xtoa@w+1,w
  5610     04E6  00B1               	movwf	pad@p+1
  5611     04E7  083B               	movf	xtoa@w,w
  5612     04E8  00B0               	movwf	pad@p
  5613     04E9  0839               	movf	xtoa@fp,w
  5614     04EA  3187  2762  3184   	fcall	_pad
  5615     04ED                     l912:
  5616     04ED  0008               	return
  5617     04EE                     __end_of_xtoa:
  5618                           
  5619                           	psect	text21
  5620     0553                     __ptext21:	
  5621 ;; *************** function _read_prec_or_width *****************
  5622 ;; Defined at:
  5623 ;;		line 1158 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  fmt             1    wreg     PTR PTR const unsigned c
  5626 ;;		 -> vfprintf@cfmt(2), 
  5627 ;;  ap              1    6[BANK0 ] PTR PTR void [1]
  5628 ;;		 -> sprintf@ap(1), 
  5629 ;; Auto vars:     Size  Location     Type
  5630 ;;  fmt             1   14[BANK0 ] PTR PTR const unsigned c
  5631 ;;		 -> vfprintf@cfmt(2), 
  5632 ;;  c               1   11[BANK0 ] unsigned char 
  5633 ;;  n               2   12[BANK0 ] int 
  5634 ;; Return value:  Size  Location     Type
  5635 ;;                  2    6[BANK0 ] int 
  5636 ;; Registers used:
  5637 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5638 ;; Tracked objects:
  5639 ;;		On entry : 0/0
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5643 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5644 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5645 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5646 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5647 ;;Total ram usage:        9 bytes
  5648 ;; Hardware stack levels used: 1
  5649 ;; Hardware stack levels required when called: 4
  5650 ;; This function calls:
  5651 ;;		___wmul
  5652 ;; This function is called by:
  5653 ;;		_vfpfcnvrt
  5654 ;; This function uses a non-reentrant model
  5655 ;;
  5656                           
  5657     0553                     _read_prec_or_width:	
  5658                           ;psect for function _read_prec_or_width
  5659                           
  5660                           
  5661                           ;incstack = 0
  5662                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5663                           ;read_prec_or_width@fmt stored from wreg
  5664     0553  0020               	movlb	0	; select bank0
  5665     0554  00AE               	movwf	read_prec_or_width@fmt
  5666     0555                     l2069:
  5667                           
  5668                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1159:     int n = 0;
  5669     0555  01AC               	clrf	read_prec_or_width@n
  5670     0556  01AD               	clrf	read_prec_or_width@n+1
  5671     0557                     l2071:
  5672                           
  5673                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1160:     if ((*fmt)
      +                          [0] == '*') {
  5674     0557  082E               	movf	read_prec_or_width@fmt,w
  5675     0558  0086               	movwf	6
  5676     0559  0187               	clrf	7
  5677     055A  3F40               	moviw [0]fsr1
  5678     055B  00A8               	movwf	??_read_prec_or_width
  5679     055C  3F41               	moviw [1]fsr1
  5680     055D  00A9               	movwf	??_read_prec_or_width+1
  5681     055E  0828               	movf	??_read_prec_or_width,w
  5682     055F  0084               	movwf	4
  5683     0560  0829               	movf	??_read_prec_or_width+1,w
  5684     0561  0085               	movwf	5
  5685     0562  0012               	moviw fsr0++
  5686     0563  3A2A               	xorlw	42
  5687     0564  1D03               	btfss	3,2
  5688     0565  2D67               	goto	u1691
  5689     0566  2D68               	goto	u1690
  5690     0567                     u1691:
  5691     0567  2D9A               	goto	l2081
  5692     0568                     u1690:
  5693     0568                     l2073:
  5694                           
  5695                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1161:         ++*fmt
      +                          ;
  5696     0568  082E               	movf	read_prec_or_width@fmt,w
  5697     0569  0086               	movwf	6
  5698     056A  0187               	clrf	7
  5699     056B  3001               	movlw	1
  5700     056C  0781               	addwf	1,f
  5701     056D  3141               	addfsr 1,1
  5702     056E  1803               	skipnc
  5703     056F  0A81               	incf	1,f
  5704     0570                     l2075:
  5705                           
  5706                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1162:         n = (*
      +                          (int *)__va_arg(*(int **)*ap, (int)0));
  5707     0570  0826               	movf	read_prec_or_width@ap,w
  5708     0571  0086               	movwf	6
  5709     0572  0187               	clrf	7
  5710     0573  0801               	movf	1,w
  5711     0574  0084               	movwf	4
  5712     0575  0185               	clrf	5
  5713     0576  3002               	movlw	2
  5714     0577  0781               	addwf	1,f
  5715     0578  3F00               	moviw [0]fsr0
  5716     0579  00AC               	movwf	read_prec_or_width@n
  5717     057A  3F01               	moviw [1]fsr0
  5718     057B  00AD               	movwf	read_prec_or_width@n+1
  5719                           
  5720                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1163:     } else {
  5721     057C  2DAE               	goto	l2083
  5722     057D                     l2077:
  5723                           
  5724                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1166:             n 
      +                          = n * 10 + c;
  5725     057D  082B               	movf	read_prec_or_width@c,w
  5726     057E  00A8               	movwf	??_read_prec_or_width
  5727     057F  01A9               	clrf	??_read_prec_or_width+1
  5728     0580  082D               	movf	read_prec_or_width@n+1,w
  5729     0581  00A1               	movwf	___wmul@multiplier+1
  5730     0582  082C               	movf	read_prec_or_width@n,w
  5731     0583  00A0               	movwf	___wmul@multiplier
  5732     0584  300A               	movlw	10
  5733     0585  00A2               	movwf	___wmul@multiplicand
  5734     0586  3000               	movlw	0
  5735     0587  00A3               	movwf	___wmul@multiplicand+1
  5736     0588  318E  2670  3185   	fcall	___wmul
  5737     058B  0020               	movlb	0	; select bank0
  5738     058C  0828               	movf	??_read_prec_or_width,w
  5739     058D  0720               	addwf	?___wmul,w
  5740     058E  00AC               	movwf	read_prec_or_width@n
  5741     058F  0829               	movf	??_read_prec_or_width+1,w
  5742     0590  3D21               	addwfc	?___wmul+1,w
  5743     0591  00AD               	movwf	read_prec_or_width@n+1
  5744     0592                     l2079:
  5745                           
  5746                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1167:             ++
      +                          *fmt;
  5747     0592  082E               	movf	read_prec_or_width@fmt,w
  5748     0593  0086               	movwf	6
  5749     0594  0187               	clrf	7
  5750     0595  3001               	movlw	1
  5751     0596  0781               	addwf	1,f
  5752     0597  3141               	addfsr 1,1
  5753     0598  1803               	skipnc
  5754     0599  0A81               	incf	1,f
  5755     059A                     l2081:
  5756                           
  5757                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1165:         while 
      +                          ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  5758     059A  082E               	movf	read_prec_or_width@fmt,w
  5759     059B  0086               	movwf	6
  5760     059C  0187               	clrf	7
  5761     059D  3F40               	moviw [0]fsr1
  5762     059E  00A8               	movwf	??_read_prec_or_width
  5763     059F  3F41               	moviw [1]fsr1
  5764     05A0  00A9               	movwf	??_read_prec_or_width+1
  5765     05A1  0828               	movf	??_read_prec_or_width,w
  5766     05A2  0084               	movwf	4
  5767     05A3  0829               	movf	??_read_prec_or_width+1,w
  5768     05A4  0085               	movwf	5
  5769     05A5  0800               	movf	0,w	;code access
  5770     05A6  3ED0               	addlw	208
  5771     05A7  00AB               	movwf	read_prec_or_width@c
  5772     05A8  300A               	movlw	10
  5773     05A9  022B               	subwf	read_prec_or_width@c,w
  5774     05AA  1C03               	skipc
  5775     05AB  2DAD               	goto	u1701
  5776     05AC  2DAE               	goto	u1700
  5777     05AD                     u1701:
  5778     05AD  2D7D               	goto	l2077
  5779     05AE                     u1700:
  5780     05AE                     l2083:
  5781                           
  5782                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1170:     return n;
  5783     05AE  082D               	movf	read_prec_or_width@n+1,w
  5784     05AF  00A7               	movwf	?_read_prec_or_width+1
  5785     05B0  082C               	movf	read_prec_or_width@n,w
  5786     05B1  00A6               	movwf	?_read_prec_or_width
  5787     05B2                     l920:
  5788     05B2  0008               	return
  5789     05B3                     __end_of_read_prec_or_width:
  5790                           
  5791                           	psect	text22
  5792     0E70                     __ptext22:	
  5793 ;; *************** function ___wmul *****************
  5794 ;; Defined at:
  5795 ;;		line 15 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/Umul16.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5798 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;  product         2    4[BANK0 ] unsigned int 
  5801 ;; Return value:  Size  Location     Type
  5802 ;;                  2    0[BANK0 ] unsigned int 
  5803 ;; Registers used:
  5804 ;;		wreg, status,2, status,0
  5805 ;; Tracked objects:
  5806 ;;		On entry : 0/0
  5807 ;;		On exit  : 0/0
  5808 ;;		Unchanged: 0/0
  5809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5810 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5811 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5813 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5814 ;;Total ram usage:        6 bytes
  5815 ;; Hardware stack levels used: 1
  5816 ;; Hardware stack levels required when called: 3
  5817 ;; This function calls:
  5818 ;;		Nothing
  5819 ;; This function is called by:
  5820 ;;		_read_prec_or_width
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824     0E70                     ___wmul:	
  5825                           ;psect for function ___wmul
  5826                           
  5827     0E70                     l1865:	
  5828                           ;incstack = 0
  5829                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5830                           
  5831     0E70  0020               	movlb	0	; select bank0
  5832     0E71  01A4               	clrf	___wmul@product
  5833     0E72  01A5               	clrf	___wmul@product+1
  5834     0E73                     l1867:
  5835     0E73  1C20               	btfss	___wmul@multiplier,0
  5836     0E74  2E76               	goto	u1251
  5837     0E75  2E77               	goto	u1250
  5838     0E76                     u1251:
  5839     0E76  2E7B               	goto	l390
  5840     0E77                     u1250:
  5841     0E77                     l1869:
  5842     0E77  0822               	movf	___wmul@multiplicand,w
  5843     0E78  07A4               	addwf	___wmul@product,f
  5844     0E79  0823               	movf	___wmul@multiplicand+1,w
  5845     0E7A  3DA5               	addwfc	___wmul@product+1,f
  5846     0E7B                     l390:
  5847     0E7B  3001               	movlw	1
  5848     0E7C                     u1265:
  5849     0E7C  35A2               	lslf	___wmul@multiplicand,f
  5850     0E7D  0DA3               	rlf	___wmul@multiplicand+1,f
  5851     0E7E  0B89               	decfsz	9,f
  5852     0E7F  2E7C               	goto	u1265
  5853     0E80                     l1871:
  5854     0E80  3001               	movlw	1
  5855     0E81                     u1275:
  5856     0E81  36A1               	lsrf	___wmul@multiplier+1,f
  5857     0E82  0CA0               	rrf	___wmul@multiplier,f
  5858     0E83  0B89               	decfsz	9,f
  5859     0E84  2E81               	goto	u1275
  5860     0E85                     l1873:
  5861     0E85  0820               	movf	___wmul@multiplier,w
  5862     0E86  0421               	iorwf	___wmul@multiplier+1,w
  5863     0E87  1D03               	btfss	3,2
  5864     0E88  2E8A               	goto	u1281
  5865     0E89  2E8B               	goto	u1280
  5866     0E8A                     u1281:
  5867     0E8A  2E73               	goto	l1867
  5868     0E8B                     u1280:
  5869     0E8B                     l1875:
  5870     0E8B  0825               	movf	___wmul@product+1,w
  5871     0E8C  00A1               	movwf	?___wmul+1
  5872     0E8D  0824               	movf	___wmul@product,w
  5873     0E8E  00A0               	movwf	?___wmul
  5874     0E8F                     l392:
  5875     0E8F  0008               	return
  5876     0E90                     __end_of___wmul:
  5877                           
  5878                           	psect	text23
  5879     0169                     __ptext23:	
  5880 ;; *************** function _dtoa *****************
  5881 ;; Defined at:
  5882 ;;		line 513 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  5883 ;; Parameters:    Size  Location     Type
  5884 ;;  fp              1    wreg     PTR struct _IO_FILE
  5885 ;;		 -> sprintf@f(11), 
  5886 ;;  d               2   22[BANK0 ] int 
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  5889 ;;		 -> sprintf@f(11), 
  5890 ;;  i               2   32[BANK0 ] int 
  5891 ;;  w               2   29[BANK0 ] int 
  5892 ;;  s               1   31[BANK0 ] unsigned char 
  5893 ;;  p               1   28[BANK0 ] _Bool 
  5894 ;; Return value:  Size  Location     Type
  5895 ;;                  1    wreg      void 
  5896 ;; Registers used:
  5897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5903 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5904 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5905 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5906 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5907 ;;Total ram usage:       12 bytes
  5908 ;; Hardware stack levels used: 1
  5909 ;; Hardware stack levels required when called: 7
  5910 ;; This function calls:
  5911 ;;		___awdiv
  5912 ;;		___awmod
  5913 ;;		_abs
  5914 ;;		_pad
  5915 ;; This function is called by:
  5916 ;;		_vfpfcnvrt
  5917 ;; This function uses a non-reentrant model
  5918 ;;
  5919                           
  5920     0169                     _dtoa:	
  5921                           ;psect for function _dtoa
  5922                           
  5923                           
  5924                           ;incstack = 0
  5925                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5926                           ;dtoa@fp stored from wreg
  5927     0169  0020               	movlb	0	; select bank0
  5928     016A  00BB               	movwf	dtoa@fp
  5929     016B                     l1985:
  5930                           
  5931                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 513: static void dto
      +                          a(FILE *fp, vfpf_sint_t d);/Applications/microchip/xc8/v2.46/pic/sources/c99/common/dopr
      +                          nt.c: 514: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 515:  ch
      +                          ar s;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 516:     int i,
      +                           w;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 520:  _Bool p = 1
      +                          ;
  5932     016B  01BC               	clrf	dtoa@p
  5933     016C  0ABC               	incf	dtoa@p,f
  5934     016D                     l1987:
  5935                           
  5936                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 524:     s = d < 0 ?
      +                           1 : 0;
  5937     016D  1BB7               	btfsc	dtoa@d+1,7
  5938     016E  2970               	goto	u1531
  5939     016F  2972               	goto	u1530
  5940     0170                     u1531:
  5941     0170  3001               	movlw	1
  5942     0171  2973               	goto	u1540
  5943     0172                     u1530:
  5944     0172  3000               	movlw	0
  5945     0173                     u1540:
  5946     0173  00BF               	movwf	dtoa@s
  5947                           
  5948                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 535:     w = width;
  5949     0174  0021               	movlb	1	; select bank1
  5950     0175  085C               	movf	(_width+1)^(0+128),w
  5951     0176  0020               	movlb	0	; select bank0
  5952     0177  00BE               	movwf	dtoa@w+1
  5953     0178  0021               	movlb	1	; select bank1
  5954     0179  085B               	movf	_width^(0+128),w
  5955     017A  0020               	movlb	0	; select bank0
  5956     017B  00BD               	movwf	dtoa@w
  5957     017C                     l1989:
  5958                           
  5959                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 536:     if (s
  5960     017C  083F               	movf	dtoa@s,w
  5961     017D  1903               	btfsc	3,2
  5962     017E  2980               	goto	u1551
  5963     017F  2981               	goto	u1550
  5964     0180                     u1551:
  5965     0180  2995               	goto	l887
  5966     0181                     u1550:
  5967     0181                     l1991:
  5968                           
  5969                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 540:     ) {;/Applic
      +                          ations/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 541:         --w;
  5970     0181  30FF               	movlw	255
  5971     0182  07BD               	addwf	dtoa@w,f
  5972     0183  30FF               	movlw	255
  5973     0184  3DBE               	addwfc	dtoa@w+1,f
  5974     0185                     l1993:
  5975                           
  5976                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 542:   s = s ? '-' :
      +                           '+';
  5977     0185  083F               	movf	dtoa@s,w
  5978     0186  1D03               	btfss	3,2
  5979     0187  2989               	goto	u1561
  5980     0188  298A               	goto	u1560
  5981     0189                     u1561:
  5982     0189  298F               	goto	l1997
  5983     018A                     u1560:
  5984     018A                     l1995:
  5985     018A  302B               	movlw	43
  5986     018B  00B9               	movwf	_dtoa$1213
  5987     018C  3000               	movlw	0
  5988     018D  00BA               	movwf	_dtoa$1213+1
  5989     018E  2993               	goto	l891
  5990     018F                     l1997:
  5991     018F  302D               	movlw	45
  5992     0190  00B9               	movwf	_dtoa$1213
  5993     0191  3000               	movlw	0
  5994     0192  00BA               	movwf	_dtoa$1213+1
  5995     0193                     l891:
  5996     0193  0839               	movf	_dtoa$1213,w
  5997     0194  00BF               	movwf	dtoa@s
  5998     0195                     l887:	
  5999                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 543:     }
  6000                           
  6001                           
  6002                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 552:     i = sizeof(
      +                          dbuf) - 1;
  6003     0195  301F               	movlw	31
  6004     0196  00C0               	movwf	dtoa@i
  6005     0197  3000               	movlw	0
  6006     0198  00C1               	movwf	dtoa@i+1
  6007     0199                     l1999:
  6008                           
  6009                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 553:     dbuf[i] = '
      +                          \0';
  6010     0199  0022               	movlb	2	; select bank2
  6011     019A  01BF               	clrf	(_dbuf^(0+256)+31)
  6012                           
  6013                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 554:     while (!(i 
      +                          < 1) && (d != 0
  6014     019B  29D2               	goto	l2011
  6015     019C                     l2001:
  6016                           
  6017                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 563:     )) {;/Appli
      +                          cations/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 564:         --i;
  6018     019C  30FF               	movlw	255
  6019     019D  0020               	movlb	0	; select bank0
  6020     019E  07C0               	addwf	dtoa@i,f
  6021     019F  30FF               	movlw	255
  6022     01A0  3DC1               	addwfc	dtoa@i+1,f
  6023     01A1                     l2003:
  6024                           
  6025                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 565:         dbuf[i]
      +                           = (char)((int)'0' + abs(d % 10));
  6026     01A1  0840               	movf	dtoa@i,w
  6027     01A2  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6028     01A3  0086               	movwf	6
  6029     01A4  3001               	movlw	1	; select bank2/3
  6030     01A5  0087               	movwf	7
  6031     01A6  300A               	movlw	10
  6032     01A7  00A0               	movwf	___awmod@divisor
  6033     01A8  3000               	movlw	0
  6034     01A9  00A1               	movwf	___awmod@divisor+1
  6035     01AA  0837               	movf	dtoa@d+1,w
  6036     01AB  00A3               	movwf	___awmod@dividend+1
  6037     01AC  0836               	movf	dtoa@d,w
  6038     01AD  00A2               	movwf	___awmod@dividend
  6039     01AE  3186  266E  3181   	fcall	___awmod
  6040     01B1  0020               	movlb	0	; select bank0
  6041     01B2  0821               	movf	?___awmod+1,w
  6042     01B3  00A8               	movwf	abs@a+1
  6043     01B4  0820               	movf	?___awmod,w
  6044     01B5  00A7               	movwf	abs@a
  6045     01B6  318D  2552  3181   	fcall	_abs
  6046     01B9  0020               	movlb	0	; select bank0
  6047     01BA  0827               	movf	?_abs,w
  6048     01BB  3E30               	addlw	48
  6049     01BC  0081               	movwf	1
  6050     01BD                     l2005:
  6051                           
  6052                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 569:   p = 0;
  6053     01BD  01BC               	clrf	dtoa@p
  6054     01BE                     l2007:
  6055                           
  6056                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 571:         --w;
  6057     01BE  30FF               	movlw	255
  6058     01BF  07BD               	addwf	dtoa@w,f
  6059     01C0  30FF               	movlw	255
  6060     01C1  3DBE               	addwfc	dtoa@w+1,f
  6061     01C2                     l2009:
  6062                           
  6063                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 572:         d = d /
      +                           10;
  6064     01C2  300A               	movlw	10
  6065     01C3  00A0               	movwf	___awdiv@divisor
  6066     01C4  3000               	movlw	0
  6067     01C5  00A1               	movwf	___awdiv@divisor+1
  6068     01C6  0837               	movf	dtoa@d+1,w
  6069     01C7  00A3               	movwf	___awdiv@dividend+1
  6070     01C8  0836               	movf	dtoa@d,w
  6071     01C9  00A2               	movwf	___awdiv@dividend
  6072     01CA  3185  25B3  3181   	fcall	___awdiv
  6073     01CD  0020               	movlb	0	; select bank0
  6074     01CE  0821               	movf	?___awdiv+1,w
  6075     01CF  00B7               	movwf	dtoa@d+1
  6076     01D0  0820               	movf	?___awdiv,w
  6077     01D1  00B6               	movwf	dtoa@d
  6078     01D2                     l2011:
  6079                           
  6080                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 554:     while (!(i 
      +                          < 1) && (d != 0
  6081     01D2  0020               	movlb	0	; select bank0
  6082     01D3  0841               	movf	dtoa@i+1,w
  6083     01D4  3A80               	xorlw	128
  6084     01D5  00B8               	movwf	??_dtoa
  6085     01D6  3080               	movlw	128
  6086     01D7  0238               	subwf	??_dtoa,w
  6087     01D8  1D03               	skipz
  6088     01D9  29DC               	goto	u1575
  6089     01DA  3001               	movlw	1
  6090     01DB  0240               	subwf	dtoa@i,w
  6091     01DC                     u1575:
  6092     01DC  1C03               	skipc
  6093     01DD  29DF               	goto	u1571
  6094     01DE  29E0               	goto	u1570
  6095     01DF                     u1571:
  6096     01DF  29FE               	goto	l2021
  6097     01E0                     u1570:
  6098     01E0                     l2013:
  6099     01E0  0020               	movlb	0	; select bank0
  6100     01E1  0836               	movf	dtoa@d,w
  6101     01E2  0437               	iorwf	dtoa@d+1,w
  6102     01E3  1D03               	btfss	3,2
  6103     01E4  29E6               	goto	u1581
  6104     01E5  29E7               	goto	u1580
  6105     01E6                     u1581:
  6106     01E6  299C               	goto	l2001
  6107     01E7                     u1580:
  6108     01E7                     l2015:
  6109     01E7  083C               	movf	dtoa@p,w
  6110     01E8  1D03               	btfss	3,2
  6111     01E9  29EB               	goto	u1591
  6112     01EA  29EC               	goto	u1590
  6113     01EB                     u1591:
  6114     01EB  299C               	goto	l2001
  6115     01EC                     u1590:
  6116     01EC                     l2017:
  6117     01EC  083E               	movf	dtoa@w+1,w
  6118     01ED  3A80               	xorlw	128
  6119     01EE  00B8               	movwf	??_dtoa
  6120     01EF  3080               	movlw	128
  6121     01F0  0238               	subwf	??_dtoa,w
  6122     01F1  1D03               	skipz
  6123     01F2  29F5               	goto	u1605
  6124     01F3  3001               	movlw	1
  6125     01F4  023D               	subwf	dtoa@w,w
  6126     01F5                     u1605:
  6127     01F5  1C03               	skipc
  6128     01F6  29F8               	goto	u1601
  6129     01F7  29F9               	goto	u1600
  6130     01F8                     u1601:
  6131     01F8  29FE               	goto	l2021
  6132     01F9                     u1600:
  6133     01F9                     l2019:
  6134     01F9  0021               	movlb	1	; select bank1
  6135     01FA  18E5               	btfsc	_flags^(0+128),1
  6136     01FB  29FD               	goto	u1611
  6137     01FC  29FE               	goto	u1610
  6138     01FD                     u1611:
  6139     01FD  299C               	goto	l2001
  6140     01FE                     u1610:
  6141     01FE                     l2021:
  6142                           
  6143                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 576:     if (s != 0)
      +                           {
  6144     01FE  0020               	movlb	0	; select bank0
  6145     01FF  083F               	movf	dtoa@s,w
  6146     0200  1903               	btfsc	3,2
  6147     0201  2A03               	goto	u1621
  6148     0202  2A04               	goto	u1620
  6149     0203                     u1621:
  6150     0203  2A0F               	goto	l2027
  6151     0204                     u1620:
  6152     0204                     l2023:
  6153                           
  6154                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 577:         --i;
  6155     0204  30FF               	movlw	255
  6156     0205  07C0               	addwf	dtoa@i,f
  6157     0206  30FF               	movlw	255
  6158     0207  3DC1               	addwfc	dtoa@i+1,f
  6159     0208                     l2025:
  6160                           
  6161                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 578:         dbuf[i]
      +                           = s;
  6162     0208  0840               	movf	dtoa@i,w
  6163     0209  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6164     020A  0086               	movwf	6
  6165     020B  3001               	movlw	1	; select bank2/3
  6166     020C  0087               	movwf	7
  6167     020D  083F               	movf	dtoa@s,w
  6168     020E  0081               	movwf	1
  6169     020F                     l2027:
  6170                           
  6171                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 582:     return (voi
      +                          d) pad(fp, &dbuf[i], w);
  6172     020F  0840               	movf	dtoa@i,w
  6173     0210  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6174     0211  00AF               	movwf	pad@buf
  6175     0212  083E               	movf	dtoa@w+1,w
  6176     0213  00B1               	movwf	pad@p+1
  6177     0214  083D               	movf	dtoa@w,w
  6178     0215  00B0               	movwf	pad@p
  6179     0216  083B               	movf	dtoa@fp,w
  6180     0217  3187  2762  3181   	fcall	_pad
  6181     021A                     l900:
  6182     021A  0008               	return
  6183     021B                     __end_of_dtoa:
  6184                           
  6185                           	psect	text24
  6186     0762                     __ptext24:	
  6187 ;; *************** function _pad *****************
  6188 ;; Defined at:
  6189 ;;		line 193 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;  fp              1    wreg     PTR struct _IO_FILE
  6192 ;;		 -> sprintf@f(11), 
  6193 ;;  buf             1   15[BANK0 ] PTR unsigned char 
  6194 ;;		 -> dbuf(32), 
  6195 ;;  p               2   16[BANK0 ] int 
  6196 ;; Auto vars:     Size  Location     Type
  6197 ;;  fp              1   21[BANK0 ] PTR struct _IO_FILE
  6198 ;;		 -> sprintf@f(11), 
  6199 ;;  i               2   19[BANK0 ] int 
  6200 ;; Return value:  Size  Location     Type
  6201 ;;                  1    wreg      void 
  6202 ;; Registers used:
  6203 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6204 ;; Tracked objects:
  6205 ;;		On entry : 0/0
  6206 ;;		On exit  : 0/0
  6207 ;;		Unchanged: 0/0
  6208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6209 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6210 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6211 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6212 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6213 ;;Total ram usage:        7 bytes
  6214 ;; Hardware stack levels used: 1
  6215 ;; Hardware stack levels required when called: 6
  6216 ;; This function calls:
  6217 ;;		_fputc
  6218 ;;		_fputs
  6219 ;; This function is called by:
  6220 ;;		_dtoa
  6221 ;;		_xtoa
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           
  6225     0762                     _pad:	
  6226                           ;psect for function _pad
  6227                           
  6228                           
  6229                           ;incstack = 0
  6230                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6231                           ;pad@fp stored from wreg
  6232     0762  0020               	movlb	0	; select bank0
  6233     0763  00B5               	movwf	pad@fp
  6234     0764                     l1961:
  6235                           
  6236                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 193: static void pad
      +                          (FILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.46/pic/sources/c99/common/do
      +                          prnt.c: 194: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 195:  
      +                             int i;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 199:     if
      +                           (flags & (1 << 0)) {
  6237     0764  0021               	movlb	1	; select bank1
  6238     0765  1C65               	btfss	_flags^(0+128),0
  6239     0766  2F68               	goto	u1481
  6240     0767  2F69               	goto	u1480
  6241     0768                     u1481:
  6242     0768  2F70               	goto	l1965
  6243     0769                     u1480:
  6244     0769                     l1963:
  6245                           
  6246                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 200:         fputs((
      +                          const char *)buf, fp);
  6247     0769  0020               	movlb	0	; select bank0
  6248     076A  0835               	movf	pad@fp,w
  6249     076B  00A8               	movwf	fputs@fp
  6250     076C  082F               	movf	pad@buf,w
  6251     076D  318E  2690  3187   	fcall	_fputs
  6252     0770                     l1965:
  6253                           
  6254                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 205:  if (p < 0) {
  6255     0770  0020               	movlb	0	; select bank0
  6256     0771  1FB1               	btfss	pad@p+1,7
  6257     0772  2F74               	goto	u1491
  6258     0773  2F75               	goto	u1490
  6259     0774                     u1491:
  6260     0774  2F77               	goto	l879
  6261     0775                     u1490:
  6262     0775                     l1967:
  6263                           
  6264                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 206:   p = 0;
  6265     0775  01B0               	clrf	pad@p
  6266     0776  01B1               	clrf	pad@p+1
  6267     0777                     l879:	
  6268                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 207:  }
  6269                           
  6270                           
  6271                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 208:     i = 0;
  6272     0777  01B3               	clrf	pad@i
  6273     0778  01B4               	clrf	pad@i+1
  6274                           
  6275                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 209:     while (i < 
      +                          p) {
  6276     0779  2F89               	goto	l1973
  6277     077A                     l1969:
  6278                           
  6279                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 210:         fputc('
      +                           ', fp);
  6280     077A  3020               	movlw	32
  6281     077B  0020               	movlb	0	; select bank0
  6282     077C  00A0               	movwf	fputc@c
  6283     077D  3000               	movlw	0
  6284     077E  00A1               	movwf	fputc@c+1
  6285     077F  0835               	movf	pad@fp,w
  6286     0780  00A2               	movwf	fputc@fp
  6287     0781  3186  26C2  3187   	fcall	_fputc
  6288     0784                     l1971:
  6289                           
  6290                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 211:         ++i;
  6291     0784  3001               	movlw	1
  6292     0785  0020               	movlb	0	; select bank0
  6293     0786  07B3               	addwf	pad@i,f
  6294     0787  3000               	movlw	0
  6295     0788  3DB4               	addwfc	pad@i+1,f
  6296     0789                     l1973:
  6297                           
  6298                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 209:     while (i < 
      +                          p) {
  6299     0789  0834               	movf	pad@i+1,w
  6300     078A  3A80               	xorlw	128
  6301     078B  00B2               	movwf	??_pad
  6302     078C  0831               	movf	pad@p+1,w
  6303     078D  3A80               	xorlw	128
  6304     078E  0232               	subwf	??_pad,w
  6305     078F  1D03               	skipz
  6306     0790  2F93               	goto	u1505
  6307     0791  0830               	movf	pad@p,w
  6308     0792  0233               	subwf	pad@i,w
  6309     0793                     u1505:
  6310     0793  1C03               	skipc
  6311     0794  2F96               	goto	u1501
  6312     0795  2F97               	goto	u1500
  6313     0796                     u1501:
  6314     0796  2F7A               	goto	l1969
  6315     0797                     u1500:
  6316     0797                     l882:
  6317                           
  6318                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 216:     if (!(flags
      +                           & (1 << 0))) {
  6319     0797  0021               	movlb	1	; select bank1
  6320     0798  1865               	btfsc	_flags^(0+128),0
  6321     0799  2F9B               	goto	u1511
  6322     079A  2F9C               	goto	u1510
  6323     079B                     u1511:
  6324     079B  2FA3               	goto	l884
  6325     079C                     u1510:
  6326     079C                     l1975:
  6327                           
  6328                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 218:         fputs((
      +                          const char *)buf, fp);
  6329     079C  0020               	movlb	0	; select bank0
  6330     079D  0835               	movf	pad@fp,w
  6331     079E  00A8               	movwf	fputs@fp
  6332     079F  082F               	movf	pad@buf,w
  6333     07A0  318E  2690  3187   	fcall	_fputs
  6334     07A3                     l884:
  6335     07A3  0008               	return
  6336     07A4                     __end_of_pad:
  6337                           
  6338                           	psect	text25
  6339     0E90                     __ptext25:	
  6340 ;; *************** function _fputs *****************
  6341 ;; Defined at:
  6342 ;;		line 8 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/nf_fputs.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;  s               1    wreg     PTR const unsigned char 
  6345 ;;		 -> dbuf(32), 
  6346 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
  6347 ;;		 -> sprintf@f(11), 
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;  s               1   14[BANK0 ] PTR const unsigned char 
  6350 ;;		 -> dbuf(32), 
  6351 ;;  i               2   12[BANK0 ] int 
  6352 ;;  c               1   11[BANK0 ] unsigned char 
  6353 ;; Return value:  Size  Location     Type
  6354 ;;                  2    8[BANK0 ] int 
  6355 ;; Registers used:
  6356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6357 ;; Tracked objects:
  6358 ;;		On entry : 0/0
  6359 ;;		On exit  : 0/0
  6360 ;;		Unchanged: 0/0
  6361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6362 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6363 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6364 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6365 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6366 ;;Total ram usage:        7 bytes
  6367 ;; Hardware stack levels used: 1
  6368 ;; Hardware stack levels required when called: 5
  6369 ;; This function calls:
  6370 ;;		_fputc
  6371 ;; This function is called by:
  6372 ;;		_pad
  6373 ;; This function uses a non-reentrant model
  6374 ;;
  6375                           
  6376     0E90                     _fputs:	
  6377                           ;psect for function _fputs
  6378                           
  6379                           
  6380                           ;incstack = 0
  6381                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6382                           ;fputs@s stored from wreg
  6383     0E90  0020               	movlb	0	; select bank0
  6384     0E91  00AE               	movwf	fputs@s
  6385     0E92                     l1857:
  6386     0E92  01AC               	clrf	fputs@i
  6387     0E93  01AD               	clrf	fputs@i+1
  6388     0E94  2EA6               	goto	l1863
  6389     0E95                     l1859:
  6390     0E95  082B               	movf	fputs@c,w
  6391     0E96  00A9               	movwf	??_fputs
  6392     0E97  01AA               	clrf	??_fputs+1
  6393     0E98  0829               	movf	??_fputs,w
  6394     0E99  00A0               	movwf	fputc@c
  6395     0E9A  082A               	movf	??_fputs+1,w
  6396     0E9B  00A1               	movwf	fputc@c+1
  6397     0E9C  0828               	movf	fputs@fp,w
  6398     0E9D  00A2               	movwf	fputc@fp
  6399     0E9E  3186  26C2  318E   	fcall	_fputc
  6400     0EA1                     l1861:
  6401     0EA1  3001               	movlw	1
  6402     0EA2  0020               	movlb	0	; select bank0
  6403     0EA3  07AC               	addwf	fputs@i,f
  6404     0EA4  3000               	movlw	0
  6405     0EA5  3DAD               	addwfc	fputs@i+1,f
  6406     0EA6                     l1863:
  6407     0EA6  082C               	movf	fputs@i,w
  6408     0EA7  072E               	addwf	fputs@s,w
  6409     0EA8  00A9               	movwf	??_fputs
  6410     0EA9  0829               	movf	??_fputs,w
  6411     0EAA  0086               	movwf	6
  6412     0EAB  3001               	movlw	1	; select bank2/3
  6413     0EAC  0087               	movwf	7
  6414     0EAD  0801               	movf	1,w
  6415     0EAE  00AB               	movwf	fputs@c
  6416     0EAF  082B               	movf	fputs@c,w
  6417     0EB0  1D03               	btfss	3,2
  6418     0EB1  2EB3               	goto	u1241
  6419     0EB2  2EB4               	goto	u1240
  6420     0EB3                     u1241:
  6421     0EB3  2E95               	goto	l1859
  6422     0EB4                     u1240:
  6423     0EB4                     l974:
  6424     0EB4  0008               	return
  6425     0EB5                     __end_of_fputs:
  6426                           
  6427                           	psect	text26
  6428     06C2                     __ptext26:	
  6429 ;; *************** function _fputc *****************
  6430 ;; Defined at:
  6431 ;;		line 8 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/nf_fputc.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;  c               2    0[BANK0 ] int 
  6434 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
  6435 ;;		 -> sprintf@f(11), 
  6436 ;; Auto vars:     Size  Location     Type
  6437 ;;		None
  6438 ;; Return value:  Size  Location     Type
  6439 ;;                  2    0[BANK0 ] int 
  6440 ;; Registers used:
  6441 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6442 ;; Tracked objects:
  6443 ;;		On entry : 0/0
  6444 ;;		On exit  : 0/0
  6445 ;;		Unchanged: 0/0
  6446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6447 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6449 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6450 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6451 ;;Total ram usage:        8 bytes
  6452 ;; Hardware stack levels used: 1
  6453 ;; Hardware stack levels required when called: 4
  6454 ;; This function calls:
  6455 ;;		_putch
  6456 ;; This function is called by:
  6457 ;;		_pad
  6458 ;;		_vfpfcnvrt
  6459 ;;		_fputs
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463     06C2                     _fputc:	
  6464                           ;psect for function _fputc
  6465                           
  6466     06C2                     l1841:	
  6467                           ;incstack = 0
  6468                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6469                           
  6470     06C2  0020               	movlb	0	; select bank0
  6471     06C3  0822               	movf	fputc@fp,w
  6472     06C4  1903               	btfsc	3,2
  6473     06C5  2EC7               	goto	u1201
  6474     06C6  2EC8               	goto	u1200
  6475     06C7                     u1201:
  6476     06C7  2ECD               	goto	l1845
  6477     06C8                     u1200:
  6478     06C8                     l1843:
  6479     06C8  0822               	movf	fputc@fp,w
  6480     06C9  1D03               	btfss	3,2
  6481     06CA  2ECC               	goto	u1211
  6482     06CB  2ECD               	goto	u1210
  6483     06CC                     u1211:
  6484     06CC  2ED2               	goto	l1847
  6485     06CD                     u1210:
  6486     06CD                     l1845:
  6487     06CD  0820               	movf	fputc@c,w
  6488     06CE  3180  2003  3186   	fcall	_putch
  6489     06D1  2F13               	goto	l966
  6490     06D2                     l1847:
  6491     06D2  0822               	movf	fputc@fp,w
  6492     06D3  3E09               	addlw	9
  6493     06D4  0086               	movwf	6
  6494     06D5  0187               	clrf	7
  6495     06D6  0016               	moviw fsr1++
  6496     06D7  0401               	iorwf	1,w
  6497     06D8  1903               	btfsc	3,2
  6498     06D9  2EDB               	goto	u1221
  6499     06DA  2EDC               	goto	u1220
  6500     06DB                     u1221:
  6501     06DB  2EFA               	goto	l1851
  6502     06DC                     u1220:
  6503     06DC                     l1849:
  6504     06DC  0822               	movf	fputc@fp,w
  6505     06DD  3E09               	addlw	9
  6506     06DE  0086               	movwf	6
  6507     06DF  0187               	clrf	7
  6508     06E0  3F40               	moviw [0]fsr1
  6509     06E1  00A3               	movwf	??_fputc
  6510     06E2  3F41               	moviw [1]fsr1
  6511     06E3  00A4               	movwf	??_fputc+1
  6512     06E4  0822               	movf	fputc@fp,w
  6513     06E5  3E02               	addlw	2
  6514     06E6  0086               	movwf	6
  6515     06E7  0187               	clrf	7
  6516     06E8  3F40               	moviw [0]fsr1
  6517     06E9  00A5               	movwf	??_fputc+2
  6518     06EA  3F41               	moviw [1]fsr1
  6519     06EB  00A6               	movwf	??_fputc+3
  6520     06EC  0826               	movf	??_fputc+3,w
  6521     06ED  3A80               	xorlw	128
  6522     06EE  00A7               	movwf	??_fputc+4
  6523     06EF  0824               	movf	??_fputc+1,w
  6524     06F0  3A80               	xorlw	128
  6525     06F1  0227               	subwf	??_fputc+4,w
  6526     06F2  1D03               	skipz
  6527     06F3  2EF6               	goto	u1235
  6528     06F4  0823               	movf	??_fputc,w
  6529     06F5  0225               	subwf	??_fputc+2,w
  6530     06F6                     u1235:
  6531     06F6  1803               	skipnc
  6532     06F7  2EF9               	goto	u1231
  6533     06F8  2EFA               	goto	u1230
  6534     06F9                     u1231:
  6535     06F9  2F13               	goto	l966
  6536     06FA                     u1230:
  6537     06FA                     l1851:
  6538     06FA  0020               	movlb	0	; select bank0
  6539     06FB  0822               	movf	fputc@fp,w
  6540     06FC  0086               	movwf	6
  6541     06FD  0187               	clrf	7
  6542     06FE  0822               	movf	fputc@fp,w
  6543     06FF  3E02               	addlw	2
  6544     0700  0084               	movwf	4
  6545     0701  0185               	clrf	5
  6546     0702  0800               	movf	0,w
  6547     0703  0701               	addwf	1,w
  6548     0704  00A3               	movwf	??_fputc
  6549     0705  0823               	movf	??_fputc,w
  6550     0706  0086               	movwf	6
  6551     0707  0187               	clrf	7
  6552     0708  0820               	movf	fputc@c,w
  6553     0709  0081               	movwf	1
  6554     070A                     l1853:
  6555     070A  0822               	movf	fputc@fp,w
  6556     070B  3E02               	addlw	2
  6557     070C  0086               	movwf	6
  6558     070D  0187               	clrf	7
  6559     070E  3001               	movlw	1
  6560     070F  0781               	addwf	1,f
  6561     0710  3141               	addfsr 1,1
  6562     0711  1803               	skipnc
  6563     0712  0A81               	incf	1,f
  6564     0713                     l966:
  6565     0713  0008               	return
  6566     0714                     __end_of_fputc:
  6567                           
  6568                           	psect	text27
  6569     0003                     __ptext27:	
  6570 ;; *************** function _putch *****************
  6571 ;; Defined at:
  6572 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/putch.c"
  6573 ;; Parameters:    Size  Location     Type
  6574 ;;  c               1    wreg     unsigned char 
  6575 ;; Auto vars:     Size  Location     Type
  6576 ;;  c               1    0[COMMON] unsigned char 
  6577 ;; Return value:  Size  Location     Type
  6578 ;;                  1    wreg      void 
  6579 ;; Registers used:
  6580 ;;		wreg
  6581 ;; Tracked objects:
  6582 ;;		On entry : 0/0
  6583 ;;		On exit  : 0/0
  6584 ;;		Unchanged: 0/0
  6585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6590 ;;Total ram usage:        0 bytes
  6591 ;; Hardware stack levels used: 1
  6592 ;; Hardware stack levels required when called: 3
  6593 ;; This function calls:
  6594 ;;		Nothing
  6595 ;; This function is called by:
  6596 ;;		_fputc
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599                           
  6600     0003                     _putch:	
  6601                           ;psect for function _putch
  6602                           
  6603     0003                     l977:	
  6604                           ;incstack = 0
  6605                           ; Regs used in _putch: [wreg]
  6606                           
  6607     0003  0008               	return
  6608     0004                     __end_of_putch:
  6609                           
  6610                           	psect	text28
  6611     0D52                     __ptext28:	
  6612 ;; *************** function _abs *****************
  6613 ;; Defined at:
  6614 ;;		line 1 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/abs.c"
  6615 ;; Parameters:    Size  Location     Type
  6616 ;;  a               2    7[BANK0 ] int 
  6617 ;; Auto vars:     Size  Location     Type
  6618 ;;		None
  6619 ;; Return value:  Size  Location     Type
  6620 ;;                  2    7[BANK0 ] int 
  6621 ;; Registers used:
  6622 ;;		wreg, status,2, status,0
  6623 ;; Tracked objects:
  6624 ;;		On entry : 0/0
  6625 ;;		On exit  : 0/0
  6626 ;;		Unchanged: 0/0
  6627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6628 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6630 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6631 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6632 ;;Total ram usage:        4 bytes
  6633 ;; Hardware stack levels used: 1
  6634 ;; Hardware stack levels required when called: 3
  6635 ;; This function calls:
  6636 ;;		Nothing
  6637 ;; This function is called by:
  6638 ;;		_dtoa
  6639 ;; This function uses a non-reentrant model
  6640 ;;
  6641                           
  6642     0D52                     _abs:	
  6643                           ;psect for function _abs
  6644                           
  6645     0D52                     l1977:	
  6646                           ;incstack = 0
  6647                           ; Regs used in _abs: [wreg+status,2+status,0]
  6648                           
  6649     0D52  0020               	movlb	0	; select bank0
  6650     0D53  1BA8               	btfsc	abs@a+1,7
  6651     0D54  2D56               	goto	u1521
  6652     0D55  2D57               	goto	u1520
  6653     0D56                     u1521:
  6654     0D56  2D58               	goto	l1981
  6655     0D57                     u1520:
  6656     0D57                     l1979:
  6657     0D57  2D63               	goto	l954
  6658     0D58                     l1981:
  6659     0D58  0927               	comf	abs@a,w
  6660     0D59  00A9               	movwf	??_abs
  6661     0D5A  0928               	comf	abs@a+1,w
  6662     0D5B  00AA               	movwf	??_abs+1
  6663     0D5C  0AA9               	incf	??_abs,f
  6664     0D5D  1903               	skipnz
  6665     0D5E  0AAA               	incf	??_abs+1,f
  6666     0D5F  0829               	movf	??_abs,w
  6667     0D60  00A7               	movwf	?_abs
  6668     0D61  082A               	movf	??_abs+1,w
  6669     0D62  00A8               	movwf	?_abs+1
  6670     0D63                     l954:
  6671     0D63  0008               	return
  6672     0D64                     __end_of_abs:
  6673                           
  6674                           	psect	text29
  6675     066E                     __ptext29:	
  6676 ;; *************** function ___awmod *****************
  6677 ;; Defined at:
  6678 ;;		line 5 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/awmod.c"
  6679 ;; Parameters:    Size  Location     Type
  6680 ;;  divisor         2    0[BANK0 ] int 
  6681 ;;  dividend        2    2[BANK0 ] int 
  6682 ;; Auto vars:     Size  Location     Type
  6683 ;;  sign            1    6[BANK0 ] unsigned char 
  6684 ;;  counter         1    5[BANK0 ] unsigned char 
  6685 ;; Return value:  Size  Location     Type
  6686 ;;                  2    0[BANK0 ] int 
  6687 ;; Registers used:
  6688 ;;		wreg, status,2, status,0
  6689 ;; Tracked objects:
  6690 ;;		On entry : 0/0
  6691 ;;		On exit  : 0/0
  6692 ;;		Unchanged: 0/0
  6693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6694 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6695 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6696 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6697 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6698 ;;Total ram usage:        7 bytes
  6699 ;; Hardware stack levels used: 1
  6700 ;; Hardware stack levels required when called: 3
  6701 ;; This function calls:
  6702 ;;		Nothing
  6703 ;; This function is called by:
  6704 ;;		_dtoa
  6705 ;; This function uses a non-reentrant model
  6706 ;;
  6707                           
  6708     066E                     ___awmod:	
  6709                           ;psect for function ___awmod
  6710                           
  6711     066E                     l1923:	
  6712                           ;incstack = 0
  6713                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6714                           
  6715     066E  0020               	movlb	0	; select bank0
  6716     066F  01A6               	clrf	___awmod@sign
  6717     0670                     l1925:
  6718     0670  1FA3               	btfss	___awmod@dividend+1,7
  6719     0671  2E73               	goto	u1391
  6720     0672  2E74               	goto	u1390
  6721     0673                     u1391:
  6722     0673  2E7B               	goto	l1931
  6723     0674                     u1390:
  6724     0674                     l1927:
  6725     0674  09A2               	comf	___awmod@dividend,f
  6726     0675  09A3               	comf	___awmod@dividend+1,f
  6727     0676  0AA2               	incf	___awmod@dividend,f
  6728     0677  1903               	skipnz
  6729     0678  0AA3               	incf	___awmod@dividend+1,f
  6730     0679                     l1929:
  6731     0679  01A6               	clrf	___awmod@sign
  6732     067A  0AA6               	incf	___awmod@sign,f
  6733     067B                     l1931:
  6734     067B  1FA1               	btfss	___awmod@divisor+1,7
  6735     067C  2E7E               	goto	u1401
  6736     067D  2E7F               	goto	u1400
  6737     067E                     u1401:
  6738     067E  2E84               	goto	l1935
  6739     067F                     u1400:
  6740     067F                     l1933:
  6741     067F  09A0               	comf	___awmod@divisor,f
  6742     0680  09A1               	comf	___awmod@divisor+1,f
  6743     0681  0AA0               	incf	___awmod@divisor,f
  6744     0682  1903               	skipnz
  6745     0683  0AA1               	incf	___awmod@divisor+1,f
  6746     0684                     l1935:
  6747     0684  0820               	movf	___awmod@divisor,w
  6748     0685  0421               	iorwf	___awmod@divisor+1,w
  6749     0686  1903               	btfsc	3,2
  6750     0687  2E89               	goto	u1411
  6751     0688  2E8A               	goto	u1410
  6752     0689                     u1411:
  6753     0689  2EB3               	goto	l1953
  6754     068A                     u1410:
  6755     068A                     l1937:
  6756     068A  01A5               	clrf	___awmod@counter
  6757     068B  0AA5               	incf	___awmod@counter,f
  6758     068C  2E96               	goto	l1943
  6759     068D                     l1939:
  6760     068D  3001               	movlw	1
  6761     068E                     u1425:
  6762     068E  35A0               	lslf	___awmod@divisor,f
  6763     068F  0DA1               	rlf	___awmod@divisor+1,f
  6764     0690  0B89               	decfsz	9,f
  6765     0691  2E8E               	goto	u1425
  6766     0692                     l1941:
  6767     0692  3001               	movlw	1
  6768     0693  00A4               	movwf	??___awmod
  6769     0694  0824               	movf	??___awmod,w
  6770     0695  07A5               	addwf	___awmod@counter,f
  6771     0696                     l1943:
  6772     0696  1FA1               	btfss	___awmod@divisor+1,7
  6773     0697  2E99               	goto	u1431
  6774     0698  2E9A               	goto	u1430
  6775     0699                     u1431:
  6776     0699  2E8D               	goto	l1939
  6777     069A                     u1430:
  6778     069A                     l1945:
  6779     069A  0821               	movf	___awmod@divisor+1,w
  6780     069B  0223               	subwf	___awmod@dividend+1,w
  6781     069C  1D03               	skipz
  6782     069D  2EA0               	goto	u1445
  6783     069E  0820               	movf	___awmod@divisor,w
  6784     069F  0222               	subwf	___awmod@dividend,w
  6785     06A0                     u1445:
  6786     06A0  1C03               	skipc
  6787     06A1  2EA3               	goto	u1441
  6788     06A2  2EA4               	goto	u1440
  6789     06A3                     u1441:
  6790     06A3  2EA8               	goto	l1949
  6791     06A4                     u1440:
  6792     06A4                     l1947:
  6793     06A4  0820               	movf	___awmod@divisor,w
  6794     06A5  02A2               	subwf	___awmod@dividend,f
  6795     06A6  0821               	movf	___awmod@divisor+1,w
  6796     06A7  3BA3               	subwfb	___awmod@dividend+1,f
  6797     06A8                     l1949:
  6798     06A8  3001               	movlw	1
  6799     06A9                     u1455:
  6800     06A9  36A1               	lsrf	___awmod@divisor+1,f
  6801     06AA  0CA0               	rrf	___awmod@divisor,f
  6802     06AB  0B89               	decfsz	9,f
  6803     06AC  2EA9               	goto	u1455
  6804     06AD                     l1951:
  6805     06AD  3001               	movlw	1
  6806     06AE  02A5               	subwf	___awmod@counter,f
  6807     06AF  1D03               	btfss	3,2
  6808     06B0  2EB2               	goto	u1461
  6809     06B1  2EB3               	goto	u1460
  6810     06B2                     u1461:
  6811     06B2  2E9A               	goto	l1945
  6812     06B3                     u1460:
  6813     06B3                     l1953:
  6814     06B3  0826               	movf	___awmod@sign,w
  6815     06B4  1903               	btfsc	3,2
  6816     06B5  2EB7               	goto	u1471
  6817     06B6  2EB8               	goto	u1470
  6818     06B7                     u1471:
  6819     06B7  2EBD               	goto	l1957
  6820     06B8                     u1470:
  6821     06B8                     l1955:
  6822     06B8  09A2               	comf	___awmod@dividend,f
  6823     06B9  09A3               	comf	___awmod@dividend+1,f
  6824     06BA  0AA2               	incf	___awmod@dividend,f
  6825     06BB  1903               	skipnz
  6826     06BC  0AA3               	incf	___awmod@dividend+1,f
  6827     06BD                     l1957:
  6828     06BD  0823               	movf	___awmod@dividend+1,w
  6829     06BE  00A1               	movwf	?___awmod+1
  6830     06BF  0822               	movf	___awmod@dividend,w
  6831     06C0  00A0               	movwf	?___awmod
  6832     06C1                     l556:
  6833     06C1  0008               	return
  6834     06C2                     __end_of___awmod:
  6835                           
  6836                           	psect	text30
  6837     05B3                     __ptext30:	
  6838 ;; *************** function ___awdiv *****************
  6839 ;; Defined at:
  6840 ;;		line 5 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/awdiv.c"
  6841 ;; Parameters:    Size  Location     Type
  6842 ;;  divisor         2    0[BANK0 ] int 
  6843 ;;  dividend        2    2[BANK0 ] int 
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;  quotient        2    7[BANK0 ] int 
  6846 ;;  sign            1    6[BANK0 ] unsigned char 
  6847 ;;  counter         1    5[BANK0 ] unsigned char 
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  2    0[BANK0 ] int 
  6850 ;; Registers used:
  6851 ;;		wreg, status,2, status,0
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6857 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6858 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6859 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6860 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6861 ;;Total ram usage:        9 bytes
  6862 ;; Hardware stack levels used: 1
  6863 ;; Hardware stack levels required when called: 3
  6864 ;; This function calls:
  6865 ;;		Nothing
  6866 ;; This function is called by:
  6867 ;;		_dtoa
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871     05B3                     ___awdiv:	
  6872                           ;psect for function ___awdiv
  6873                           
  6874     05B3                     l1879:	
  6875                           ;incstack = 0
  6876                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6877                           
  6878     05B3  0020               	movlb	0	; select bank0
  6879     05B4  01A6               	clrf	___awdiv@sign
  6880     05B5                     l1881:
  6881     05B5  1FA1               	btfss	___awdiv@divisor+1,7
  6882     05B6  2DB8               	goto	u1291
  6883     05B7  2DB9               	goto	u1290
  6884     05B8                     u1291:
  6885     05B8  2DC0               	goto	l1887
  6886     05B9                     u1290:
  6887     05B9                     l1883:
  6888     05B9  09A0               	comf	___awdiv@divisor,f
  6889     05BA  09A1               	comf	___awdiv@divisor+1,f
  6890     05BB  0AA0               	incf	___awdiv@divisor,f
  6891     05BC  1903               	skipnz
  6892     05BD  0AA1               	incf	___awdiv@divisor+1,f
  6893     05BE                     l1885:
  6894     05BE  01A6               	clrf	___awdiv@sign
  6895     05BF  0AA6               	incf	___awdiv@sign,f
  6896     05C0                     l1887:
  6897     05C0  1FA3               	btfss	___awdiv@dividend+1,7
  6898     05C1  2DC3               	goto	u1301
  6899     05C2  2DC4               	goto	u1300
  6900     05C3                     u1301:
  6901     05C3  2DCD               	goto	l1893
  6902     05C4                     u1300:
  6903     05C4                     l1889:
  6904     05C4  09A2               	comf	___awdiv@dividend,f
  6905     05C5  09A3               	comf	___awdiv@dividend+1,f
  6906     05C6  0AA2               	incf	___awdiv@dividend,f
  6907     05C7  1903               	skipnz
  6908     05C8  0AA3               	incf	___awdiv@dividend+1,f
  6909     05C9                     l1891:
  6910     05C9  3001               	movlw	1
  6911     05CA  00A4               	movwf	??___awdiv
  6912     05CB  0824               	movf	??___awdiv,w
  6913     05CC  06A6               	xorwf	___awdiv@sign,f
  6914     05CD                     l1893:
  6915     05CD  01A7               	clrf	___awdiv@quotient
  6916     05CE  01A8               	clrf	___awdiv@quotient+1
  6917     05CF                     l1895:
  6918     05CF  0820               	movf	___awdiv@divisor,w
  6919     05D0  0421               	iorwf	___awdiv@divisor+1,w
  6920     05D1  1903               	btfsc	3,2
  6921     05D2  2DD4               	goto	u1311
  6922     05D3  2DD5               	goto	u1310
  6923     05D4                     u1311:
  6924     05D4  2E04               	goto	l1915
  6925     05D5                     u1310:
  6926     05D5                     l1897:
  6927     05D5  01A5               	clrf	___awdiv@counter
  6928     05D6  0AA5               	incf	___awdiv@counter,f
  6929     05D7  2DE1               	goto	l1903
  6930     05D8                     l1899:
  6931     05D8  3001               	movlw	1
  6932     05D9                     u1325:
  6933     05D9  35A0               	lslf	___awdiv@divisor,f
  6934     05DA  0DA1               	rlf	___awdiv@divisor+1,f
  6935     05DB  0B89               	decfsz	9,f
  6936     05DC  2DD9               	goto	u1325
  6937     05DD                     l1901:
  6938     05DD  3001               	movlw	1
  6939     05DE  00A4               	movwf	??___awdiv
  6940     05DF  0824               	movf	??___awdiv,w
  6941     05E0  07A5               	addwf	___awdiv@counter,f
  6942     05E1                     l1903:
  6943     05E1  1FA1               	btfss	___awdiv@divisor+1,7
  6944     05E2  2DE4               	goto	u1331
  6945     05E3  2DE5               	goto	u1330
  6946     05E4                     u1331:
  6947     05E4  2DD8               	goto	l1899
  6948     05E5                     u1330:
  6949     05E5                     l1905:
  6950     05E5  3001               	movlw	1
  6951     05E6                     u1345:
  6952     05E6  35A7               	lslf	___awdiv@quotient,f
  6953     05E7  0DA8               	rlf	___awdiv@quotient+1,f
  6954     05E8  0B89               	decfsz	9,f
  6955     05E9  2DE6               	goto	u1345
  6956     05EA  0821               	movf	___awdiv@divisor+1,w
  6957     05EB  0223               	subwf	___awdiv@dividend+1,w
  6958     05EC  1D03               	skipz
  6959     05ED  2DF0               	goto	u1355
  6960     05EE  0820               	movf	___awdiv@divisor,w
  6961     05EF  0222               	subwf	___awdiv@dividend,w
  6962     05F0                     u1355:
  6963     05F0  1C03               	skipc
  6964     05F1  2DF3               	goto	u1351
  6965     05F2  2DF4               	goto	u1350
  6966     05F3                     u1351:
  6967     05F3  2DF9               	goto	l1911
  6968     05F4                     u1350:
  6969     05F4                     l1907:
  6970     05F4  0820               	movf	___awdiv@divisor,w
  6971     05F5  02A2               	subwf	___awdiv@dividend,f
  6972     05F6  0821               	movf	___awdiv@divisor+1,w
  6973     05F7  3BA3               	subwfb	___awdiv@dividend+1,f
  6974     05F8                     l1909:
  6975     05F8  1427               	bsf	___awdiv@quotient,0
  6976     05F9                     l1911:
  6977     05F9  3001               	movlw	1
  6978     05FA                     u1365:
  6979     05FA  36A1               	lsrf	___awdiv@divisor+1,f
  6980     05FB  0CA0               	rrf	___awdiv@divisor,f
  6981     05FC  0B89               	decfsz	9,f
  6982     05FD  2DFA               	goto	u1365
  6983     05FE                     l1913:
  6984     05FE  3001               	movlw	1
  6985     05FF  02A5               	subwf	___awdiv@counter,f
  6986     0600  1D03               	btfss	3,2
  6987     0601  2E03               	goto	u1371
  6988     0602  2E04               	goto	u1370
  6989     0603                     u1371:
  6990     0603  2DE5               	goto	l1905
  6991     0604                     u1370:
  6992     0604                     l1915:
  6993     0604  0826               	movf	___awdiv@sign,w
  6994     0605  1903               	btfsc	3,2
  6995     0606  2E08               	goto	u1381
  6996     0607  2E09               	goto	u1380
  6997     0608                     u1381:
  6998     0608  2E0E               	goto	l1919
  6999     0609                     u1380:
  7000     0609                     l1917:
  7001     0609  09A7               	comf	___awdiv@quotient,f
  7002     060A  09A8               	comf	___awdiv@quotient+1,f
  7003     060B  0AA7               	incf	___awdiv@quotient,f
  7004     060C  1903               	skipnz
  7005     060D  0AA8               	incf	___awdiv@quotient+1,f
  7006     060E                     l1919:
  7007     060E  0828               	movf	___awdiv@quotient+1,w
  7008     060F  00A1               	movwf	?___awdiv+1
  7009     0610  0827               	movf	___awdiv@quotient,w
  7010     0611  00A0               	movwf	?___awdiv
  7011     0612                     l543:
  7012     0612  0008               	return
  7013     0613                     __end_of___awdiv:
  7014                           
  7015                           	psect	text31
  7016     0F8E                     __ptext31:	
  7017 ;; *************** function _setup_address *****************
  7018 ;; Defined at:
  7019 ;;		line 256 in file "main.c"
  7020 ;; Parameters:    Size  Location     Type
  7021 ;;  addr            2    0[BANK0 ] unsigned short 
  7022 ;; Auto vars:     Size  Location     Type
  7023 ;;  hi              1    4[BANK0 ] unsigned char 
  7024 ;; Return value:  Size  Location     Type
  7025 ;;                  1    wreg      void 
  7026 ;; Registers used:
  7027 ;;		wreg, status,2, status,0
  7028 ;; Tracked objects:
  7029 ;;		On entry : 0/0
  7030 ;;		On exit  : 0/0
  7031 ;;		Unchanged: 0/0
  7032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7033 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7034 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7035 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7036 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7037 ;;Total ram usage:        5 bytes
  7038 ;; Hardware stack levels used: 1
  7039 ;; Hardware stack levels required when called: 3
  7040 ;; This function calls:
  7041 ;;		Nothing
  7042 ;; This function is called by:
  7043 ;;		_do_blank
  7044 ;;		_do_read
  7045 ;;		_do_write
  7046 ;; This function uses a non-reentrant model
  7047 ;;
  7048                           
  7049     0F8E                     _setup_address:	
  7050                           ;psect for function _setup_address
  7051                           
  7052     0F8E                     l2231:	
  7053                           ;incstack = 0
  7054                           ; Regs used in _setup_address: [wreg+status,2+status,0]
  7055                           
  7056                           
  7057                           ;main.c: 256: void setup_address(uint16_t addr);main.c: 257: {;main.c: 259:         TRIS
      +                          D = 0x00;
  7058     0F8E  0021               	movlb	1	; select bank1
  7059     0F8F  018F               	clrf	15	;volatile
  7060     0F90                     l2233:
  7061                           
  7062                           ;main.c: 262:         PORTBbits.RB2 = 1;
  7063     0F90  0020               	movlb	0	; select bank0
  7064     0F91  150D               	bsf	13,2	;volatile
  7065     0F92                     l2235:
  7066                           
  7067                           ;main.c: 265:         uint8_t hi = addr >> 8;
  7068     0F92  0821               	movf	setup_address@addr+1,w
  7069     0F93  00A4               	movwf	setup_address@hi
  7070                           
  7071                           ;main.c: 266:         PORTD = addr & 0x00ff;
  7072     0F94  0820               	movf	setup_address@addr,w
  7073     0F95  008F               	movwf	15	;volatile
  7074     0F96                     l2237:
  7075                           
  7076                           ;main.c: 267:         PORTCbits.RC0 = hi & 0x01;
  7077     0F96  3001               	movlw	1
  7078     0F97  0524               	andwf	setup_address@hi,w
  7079     0F98  00A2               	movwf	??_setup_address
  7080     0F99  080E               	movf	14,w	;volatile
  7081     0F9A  0622               	xorwf	??_setup_address,w
  7082     0F9B  39FE               	andlw	-2
  7083     0F9C  0622               	xorwf	??_setup_address,w
  7084     0F9D  008E               	movwf	14	;volatile
  7085     0F9E                     l2239:
  7086                           
  7087                           ;main.c: 268:         PORTCbits.RC1 = hi >> 1 & 0x01;
  7088     0F9E  3624               	lsrf	setup_address@hi,w
  7089     0F9F  3901               	andlw	1
  7090     0FA0  00A2               	movwf	??_setup_address
  7091     0FA1  0DA2               	rlf	??_setup_address,f
  7092     0FA2  080E               	movf	14,w	;volatile
  7093     0FA3  0622               	xorwf	??_setup_address,w
  7094     0FA4  39FD               	andlw	-3
  7095     0FA5  0622               	xorwf	??_setup_address,w
  7096     0FA6  008E               	movwf	14	;volatile
  7097     0FA7                     l2241:
  7098                           
  7099                           ;main.c: 269:         PORTCbits.RC2 = hi >> 2 & 0x01;
  7100     0FA7  0824               	movf	setup_address@hi,w
  7101     0FA8  00A2               	movwf	??_setup_address
  7102     0FA9  3002               	movlw	2
  7103     0FAA                     u1845:
  7104     0FAA  36A2               	lsrf	??_setup_address,f
  7105     0FAB  0B89               	decfsz	9,f
  7106     0FAC  2FAA               	goto	u1845
  7107     0FAD  0822               	movf	??_setup_address,w
  7108     0FAE  3901               	andlw	1
  7109     0FAF  00A3               	movwf	??_setup_address+1
  7110     0FB0  0DA3               	rlf	??_setup_address+1,f
  7111     0FB1  0DA3               	rlf	??_setup_address+1,f
  7112     0FB2  080E               	movf	14,w	;volatile
  7113     0FB3  0623               	xorwf	??_setup_address+1,w
  7114     0FB4  39FB               	andlw	-5
  7115     0FB5  0623               	xorwf	??_setup_address+1,w
  7116     0FB6  008E               	movwf	14	;volatile
  7117     0FB7                     l2243:
  7118                           
  7119                           ;main.c: 270:         _delay((unsigned long)((1)*(20000000/4000000.0)));
  7120     0FB7  3200               	nop2	;2 cycle nop
  7121     0FB8  3200               	nop2	;2 cycle nop
  7122     0FB9  0000               	nop
  7123     0FBA                     l2245:
  7124                           
  7125                           ;main.c: 273:         PORTBbits.RB0 = 1;
  7126     0FBA  0020               	movlb	0	; select bank0
  7127     0FBB  140D               	bsf	13,0	;volatile
  7128     0FBC                     l2247:
  7129                           
  7130                           ;main.c: 274:         _delay((unsigned long)((1)*(20000000/4000000.0)));
  7131     0FBC  3200               	nop2	;2 cycle nop
  7132     0FBD  3200               	nop2	;2 cycle nop
  7133     0FBE  0000               	nop
  7134     0FBF                     l2249:
  7135                           
  7136                           ;main.c: 276:         PORTBbits.RB0 = 0;
  7137     0FBF  0020               	movlb	0	; select bank0
  7138     0FC0  100D               	bcf	13,0	;volatile
  7139     0FC1                     l2251:
  7140                           
  7141                           ;main.c: 277:         _delay((unsigned long)((1)*(20000000/4000000.0)));
  7142     0FC1  3200               	nop2	;2 cycle nop
  7143     0FC2  3200               	nop2	;2 cycle nop
  7144     0FC3  0000               	nop
  7145     0FC4                     l114:
  7146     0FC4  0008               	return
  7147     0FC5                     __end_of_setup_address:
  7148                           
  7149                           	psect	text32
  7150     0E31                     __ptext32:	
  7151 ;; *************** function _read_port *****************
  7152 ;; Defined at:
  7153 ;;		line 283 in file "main.c"
  7154 ;; Parameters:    Size  Location     Type
  7155 ;;		None
  7156 ;; Auto vars:     Size  Location     Type
  7157 ;;  data            1    0[BANK0 ] unsigned char 
  7158 ;; Return value:  Size  Location     Type
  7159 ;;                  1    wreg      unsigned char 
  7160 ;; Registers used:
  7161 ;;		wreg, status,2
  7162 ;; Tracked objects:
  7163 ;;		On entry : 0/0
  7164 ;;		On exit  : 0/0
  7165 ;;		Unchanged: 0/0
  7166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7168 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7170 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7171 ;;Total ram usage:        1 bytes
  7172 ;; Hardware stack levels used: 1
  7173 ;; Hardware stack levels required when called: 3
  7174 ;; This function calls:
  7175 ;;		Nothing
  7176 ;; This function is called by:
  7177 ;;		_do_blank
  7178 ;;		_do_read
  7179 ;;		_do_write
  7180 ;; This function uses a non-reentrant model
  7181 ;;
  7182                           
  7183     0E31                     _read_port:	
  7184                           ;psect for function _read_port
  7185                           
  7186     0E31                     l2253:	
  7187                           ;incstack = 0
  7188                           ; Regs used in _read_port: [wreg+status,2]
  7189                           
  7190                           
  7191                           ;main.c: 286:     TRISD = 0xFF;
  7192     0E31  30FF               	movlw	255
  7193     0E32  0021               	movlb	1	; select bank1
  7194     0E33  008F               	movwf	15	;volatile
  7195                           
  7196                           ;main.c: 287:     _delay((unsigned long)((5)*(20000000/4000000.0)));
  7197     0E34  3008               	movlw	8
  7198     0E35                     u2467:
  7199     0E35  0B89               	decfsz	9,f
  7200     0E36  2E35               	goto	u2467
  7201     0E37  0000               	nop
  7202     0E38                     l2255:
  7203                           
  7204                           ;main.c: 290:     PORTBbits.RB2 = 0;
  7205     0E38  0020               	movlb	0	; select bank0
  7206     0E39  110D               	bcf	13,2	;volatile
  7207                           
  7208                           ;main.c: 291:     _delay((unsigned long)((2)*(20000000/4000000.0)));
  7209     0E3A  3003               	movlw	3
  7210     0E3B                     u2477:
  7211     0E3B  0B89               	decfsz	9,f
  7212     0E3C  2E3B               	goto	u2477
  7213     0E3D  0000               	nop
  7214                           
  7215                           ;main.c: 294:     uint8_t data = PORTD;
  7216     0E3E  0020               	movlb	0	; select bank0
  7217     0E3F  080F               	movf	15,w	;volatile
  7218     0E40  00A0               	movwf	read_port@data
  7219                           
  7220                           ;main.c: 297:     _delay((unsigned long)((2)*(20000000/4000000.0)));
  7221     0E41  3003               	movlw	3
  7222     0E42                     u2487:
  7223     0E42  0B89               	decfsz	9,f
  7224     0E43  2E42               	goto	u2487
  7225     0E44  0000               	nop
  7226     0E45                     l2257:
  7227                           
  7228                           ;main.c: 298:     PORTBbits.RB2 = 1;
  7229     0E45  0020               	movlb	0	; select bank0
  7230     0E46  150D               	bsf	13,2	;volatile
  7231                           
  7232                           ;main.c: 301:     _delay((unsigned long)((5)*(20000000/4000000.0)));
  7233     0E47  3008               	movlw	8
  7234     0E48                     u2497:
  7235     0E48  0B89               	decfsz	9,f
  7236     0E49  2E48               	goto	u2497
  7237     0E4A  0000               	nop
  7238     0E4B                     l2259:
  7239                           
  7240                           ;main.c: 302:     TRISD = 0x00;
  7241     0E4B  0021               	movlb	1	; select bank1
  7242     0E4C  018F               	clrf	15	;volatile
  7243     0E4D                     l2261:
  7244                           
  7245                           ;main.c: 304:     return data;
  7246     0E4D  0020               	movlb	0	; select bank0
  7247     0E4E  0820               	movf	read_port@data,w
  7248     0E4F                     l117:
  7249     0E4F  0008               	return
  7250     0E50                     __end_of_read_port:
  7251                           
  7252                           	psect	text33
  7253     07E6                     __ptext33:	
  7254 ;; *************** function _clear *****************
  7255 ;; Defined at:
  7256 ;;		line 59 in file "main.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;		None
  7259 ;; Auto vars:     Size  Location     Type
  7260 ;;		None
  7261 ;; Return value:  Size  Location     Type
  7262 ;;                  1    wreg      void 
  7263 ;; Registers used:
  7264 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7265 ;; Tracked objects:
  7266 ;;		On entry : 0/0
  7267 ;;		On exit  : 0/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7274 ;;Total ram usage:        0 bytes
  7275 ;; Hardware stack levels used: 1
  7276 ;; Hardware stack levels required when called: 4
  7277 ;; This function calls:
  7278 ;;		_memset
  7279 ;; This function is called by:
  7280 ;;		_main
  7281 ;; This function uses a non-reentrant model
  7282 ;;
  7283                           
  7284     07E6                     _clear:	
  7285                           ;psect for function _clear
  7286                           
  7287     07E6                     l2381:	
  7288                           ;incstack = 0
  7289                           ; Regs used in _clear: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7290                           
  7291                           
  7292                           ;main.c: 61:     memset(queue, 0x00, 1024);
  7293     07E6  30F0               	movlw	240
  7294     07E7  0020               	movlb	0	; select bank0
  7295     07E8  00A0               	movwf	memset@dest
  7296     07E9  3023               	movlw	35
  7297     07EA  00A1               	movwf	memset@dest+1
  7298     07EB  3000               	movlw	0
  7299     07EC  00A2               	movwf	memset@c
  7300     07ED  00A3               	movwf	memset@c+1
  7301     07EE  3000               	movlw	0
  7302     07EF  00A4               	movwf	memset@n
  7303     07F0  3004               	movlw	4
  7304     07F1  00A5               	movwf	memset@n+1
  7305     07F2  318D  25DA  3187   	fcall	_memset
  7306     07F5                     l2383:
  7307                           
  7308                           ;main.c: 62:     head = 0;
  7309     07F5  0021               	movlb	1	; select bank1
  7310     07F6  01E3               	clrf	_head^(0+128)
  7311     07F7  01E4               	clrf	(_head+1)^(0+128)
  7312     07F8                     l2385:
  7313                           
  7314                           ;main.c: 63:     tail = 1024 -1;
  7315     07F8  30FF               	movlw	255
  7316     07F9  00E8               	movwf	_tail^(0+128)
  7317     07FA  3003               	movlw	3
  7318     07FB  00E9               	movwf	(_tail^(0+128)+1)
  7319     07FC                     l2387:
  7320                           
  7321                           ;main.c: 64:     cmd_active = 0;
  7322     07FC  01E7               	clrf	_cmd_active^(0+128)
  7323     07FD                     l62:
  7324     07FD  0008               	return
  7325     07FE                     __end_of_clear:
  7326                           
  7327                           	psect	text34
  7328     0DDA                     __ptext34:	
  7329 ;; *************** function _memset *****************
  7330 ;; Defined at:
  7331 ;;		line 3 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/memset.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;  dest            2    0[BANK0 ] PTR void 
  7334 ;;		 -> queue(1024), 
  7335 ;;  c               2    2[BANK0 ] int 
  7336 ;;  n               2    4[BANK0 ] unsigned int 
  7337 ;; Auto vars:     Size  Location     Type
  7338 ;;  p               2    6[BANK0 ] PTR unsigned char 
  7339 ;;		 -> queue(1024), 
  7340 ;; Return value:  Size  Location     Type
  7341 ;;                  2    0[BANK0 ] PTR void 
  7342 ;; Registers used:
  7343 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7344 ;; Tracked objects:
  7345 ;;		On entry : 0/0
  7346 ;;		On exit  : 0/0
  7347 ;;		Unchanged: 0/0
  7348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7349 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7350 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7352 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7353 ;;Total ram usage:        8 bytes
  7354 ;; Hardware stack levels used: 1
  7355 ;; Hardware stack levels required when called: 3
  7356 ;; This function calls:
  7357 ;;		Nothing
  7358 ;; This function is called by:
  7359 ;;		_clear
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363     0DDA                     _memset:	
  7364                           ;psect for function _memset
  7365                           
  7366     0DDA                     l2183:	
  7367                           ;incstack = 0
  7368                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7369                           
  7370     0DDA  0020               	movlb	0	; select bank0
  7371     0DDB  0821               	movf	memset@dest+1,w
  7372     0DDC  00A7               	movwf	memset@p+1
  7373     0DDD  0820               	movf	memset@dest,w
  7374     0DDE  00A6               	movwf	memset@p
  7375     0DDF  2DEA               	goto	l2189
  7376     0DE0                     l2185:
  7377     0DE0  0826               	movf	memset@p,w
  7378     0DE1  0086               	movwf	6
  7379     0DE2  0827               	movf	memset@p+1,w
  7380     0DE3  0087               	movwf	7
  7381     0DE4  0822               	movf	memset@c,w
  7382     0DE5  0081               	movwf	1
  7383     0DE6                     l2187:
  7384     0DE6  3001               	movlw	1
  7385     0DE7  07A6               	addwf	memset@p,f
  7386     0DE8  3000               	movlw	0
  7387     0DE9  3DA7               	addwfc	memset@p+1,f
  7388     0DEA                     l2189:
  7389     0DEA  3001               	movlw	1
  7390     0DEB  02A4               	subwf	memset@n,f
  7391     0DEC  3000               	movlw	0
  7392     0DED  3BA5               	subwfb	memset@n+1,f
  7393     0DEE  0A24               	incf	memset@n,w
  7394     0DEF  1D03               	skipz
  7395     0DF0  2DF5               	goto	u1801
  7396     0DF1  0A25               	incf	memset@n+1,w
  7397     0DF2  1D03               	btfss	3,2
  7398     0DF3  2DF5               	goto	u1801
  7399     0DF4  2DF6               	goto	u1800
  7400     0DF5                     u1801:
  7401     0DF5  2DE0               	goto	l2185
  7402     0DF6                     u1800:
  7403     0DF6                     l852:
  7404     0DF6  0008               	return
  7405     0DF7                     __end_of_memset:
  7406                           
  7407                           	psect	intentry
  7408     0004                     __pintentry:	
  7409 ;; *************** function _high_isr *****************
  7410 ;; Defined at:
  7411 ;;		line 226 in file "main.c"
  7412 ;; Parameters:    Size  Location     Type
  7413 ;;		None
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;  n               2   10[COMMON] short 
  7416 ;;  c               1   13[COMMON] unsigned char 
  7417 ;;  ok              1   12[COMMON] _Bool 
  7418 ;; Return value:  Size  Location     Type
  7419 ;;                  1    wreg      void 
  7420 ;; Registers used:
  7421 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7422 ;; Tracked objects:
  7423 ;;		On entry : 0/0
  7424 ;;		On exit  : 0/0
  7425 ;;		Unchanged: 0/0
  7426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7428 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7429 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7430 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7431 ;;Total ram usage:        5 bytes
  7432 ;; Hardware stack levels used: 1
  7433 ;; Hardware stack levels required when called: 2
  7434 ;; This function calls:
  7435 ;;		_first
  7436 ;;		_push
  7437 ;;		_size
  7438 ;;		_uart_getc
  7439 ;; This function is called by:
  7440 ;;		Interrupt level 1
  7441 ;; This function uses a non-reentrant model
  7442 ;;
  7443                           
  7444     0004                     _high_isr:
  7445                           
  7446                           ;incstack = 0
  7447     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  7448                           
  7449                           ; Regs used in _high_isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7450     0005  3180               	pagesel	$
  7451     0006                     i1l2647:
  7452                           
  7453                           ;main.c: 228:         char c = 0;
  7454     0006  01FD               	clrf	high_isr@c
  7455     0007                     i1l2649:
  7456                           
  7457                           ;main.c: 231:         INTCONbits.GIE = 0;
  7458     0007  138B               	bcf	11,7	;volatile
  7459     0008                     i1l2651:
  7460                           
  7461                           ;main.c: 232:         PIE1bits.RCIE=0;
  7462     0008  0021               	movlb	1	; select bank1
  7463     0009  1291               	bcf	17,5	;volatile
  7464     000A                     i1l2653:
  7465                           
  7466                           ;main.c: 235:         _Bool ok = uart_getc(&c);
  7467     000A  307D               	movlw	(low (high_isr@c| 0))& (0+255)
  7468     000B  318E  2650  3180   	fcall	_uart_getc
  7469     000E  00FC               	movwf	high_isr@ok
  7470     000F                     i1l2655:
  7471                           
  7472                           ;main.c: 236:         if (ok) {
  7473     000F  087C               	movf	high_isr@ok,w
  7474     0010  1903               	btfsc	3,2
  7475     0011  2813               	goto	u232_21
  7476     0012  2814               	goto	u232_20
  7477     0013                     u232_21:
  7478     0013  2837               	goto	i1l109
  7479     0014                     u232_20:
  7480     0014                     i1l2657:
  7481                           
  7482                           ;main.c: 238:             push(c);
  7483     0014  087D               	movf	high_isr@c,w
  7484     0015  3187  27A4  3180   	fcall	_push
  7485     0018                     i1l2659:
  7486                           
  7487                           ;main.c: 241:             int16_t n = size();
  7488     0018  318E  26DA  3180   	fcall	_size
  7489     001B  0873               	movf	?_size+1,w
  7490     001C  00FB               	movwf	high_isr@n+1
  7491     001D  0872               	movf	?_size,w
  7492     001E  00FA               	movwf	high_isr@n
  7493     001F                     i1l2661:
  7494                           
  7495                           ;main.c: 242:             if ( (first() == '$') && n > 1) {
  7496     001F  318D  2533  3180   	fcall	_first
  7497     0022  3A24               	xorlw	36
  7498     0023  1D03               	skipz
  7499     0024  2826               	goto	u233_21
  7500     0025  2827               	goto	u233_20
  7501     0026                     u233_21:
  7502     0026  2837               	goto	i1l109
  7503     0027                     u233_20:
  7504     0027                     i1l2663:
  7505     0027  087B               	movf	high_isr@n+1,w
  7506     0028  3A80               	xorlw	128
  7507     0029  00F9               	movwf	??_high_isr
  7508     002A  3080               	movlw	128
  7509     002B  0279               	subwf	??_high_isr,w
  7510     002C  1D03               	skipz
  7511     002D  2830               	goto	u234_25
  7512     002E  3002               	movlw	2
  7513     002F  027A               	subwf	high_isr@n,w
  7514     0030                     u234_25:
  7515     0030  1C03               	skipc
  7516     0031  2833               	goto	u234_21
  7517     0032  2834               	goto	u234_20
  7518     0033                     u234_21:
  7519     0033  2837               	goto	i1l109
  7520     0034                     u234_20:
  7521     0034                     i1l2665:
  7522                           
  7523                           ;main.c: 244:                 cmd_active = 1;
  7524     0034  0021               	movlb	1	; select bank1
  7525     0035  01E7               	clrf	_cmd_active^(0+128)
  7526     0036  0AE7               	incf	_cmd_active^(0+128),f
  7527     0037                     i1l109:	
  7528                           ;main.c: 246:         }
  7529                           
  7530                           
  7531                           ;main.c: 249:         PIE1bits.RCIE=1;
  7532     0037  0021               	movlb	1	; select bank1
  7533     0038  1691               	bsf	17,5	;volatile
  7534                           
  7535                           ;main.c: 250:         INTCONbits.GIE = 1;
  7536     0039  178B               	bsf	11,7	;volatile
  7537     003A                     i1l111:
  7538     003A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7539     003B  0009               	retfie
  7540     003C                     __end_of_high_isr:
  7541                           
  7542                           	psect	text36
  7543     0E50                     __ptext36:	
  7544 ;; *************** function _uart_getc *****************
  7545 ;; Defined at:
  7546 ;;		line 134 in file "uart.c"
  7547 ;; Parameters:    Size  Location     Type
  7548 ;;  c               1    wreg     PTR unsigned char 
  7549 ;;		 -> high_isr@c(1), 
  7550 ;; Auto vars:     Size  Location     Type
  7551 ;;  c               1    0[COMMON] PTR unsigned char 
  7552 ;;		 -> high_isr@c(1), 
  7553 ;;  er              1    0        unsigned char 
  7554 ;;  ok              1    1[COMMON] _Bool 
  7555 ;; Return value:  Size  Location     Type
  7556 ;;                  1    wreg      _Bool 
  7557 ;; Registers used:
  7558 ;;		wreg, fsr1l, fsr1h, status,2
  7559 ;; Tracked objects:
  7560 ;;		On entry : 0/0
  7561 ;;		On exit  : 0/0
  7562 ;;		Unchanged: 0/0
  7563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7565 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7567 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7568 ;;Total ram usage:        2 bytes
  7569 ;; Hardware stack levels used: 1
  7570 ;; This function calls:
  7571 ;;		Nothing
  7572 ;; This function is called by:
  7573 ;;		_high_isr
  7574 ;; This function uses a non-reentrant model
  7575 ;;
  7576                           
  7577     0E50                     _uart_getc:	
  7578                           ;psect for function _uart_getc
  7579                           
  7580                           
  7581                           ;incstack = 0
  7582                           ; Regs used in _uart_getc: [wreg+fsr1l+fsr1h+status,2]
  7583                           ;uart_getc@c stored from wreg
  7584     0E50  00F0               	movwf	uart_getc@c
  7585     0E51                     i1l2449:
  7586                           
  7587                           ;uart.c: 134: _Bool uart_getc(char *c);uart.c: 135: {;uart.c: 137:     _Bool ok = 0;
  7588     0E51  01F1               	clrf	uart_getc@ok
  7589     0E52                     i1l2451:
  7590                           
  7591                           ;uart.c: 140:     if (RCSTAbits.FERR) {
  7592     0E52  0023               	movlb	3	; select bank3
  7593     0E53  1D1D               	btfss	29,2	;volatile
  7594     0E54  2E56               	goto	u206_21
  7595     0E55  2E57               	goto	u206_20
  7596     0E56                     u206_21:
  7597     0E56  2E59               	goto	i1l214
  7598     0E57                     u206_20:
  7599     0E57                     i1l2453:
  7600     0E57  0819               	movf	25,w	;volatile
  7601                           
  7602                           ;uart.c: 142:     }
  7603     0E58  2E6E               	goto	i1l2461
  7604     0E59                     i1l214:	
  7605                           ;uart.c: 143:     else if (RCSTAbits.OERR) {
  7606                           
  7607     0E59  1C9D               	btfss	29,1	;volatile
  7608     0E5A  2E5C               	goto	u207_21
  7609     0E5B  2E5D               	goto	u207_20
  7610     0E5C                     u207_21:
  7611     0E5C  2E60               	goto	i1l216
  7612     0E5D                     u207_20:
  7613     0E5D                     i1l2455:
  7614                           
  7615                           ;uart.c: 144:         RCSTAbits.CREN = 0;
  7616     0E5D  121D               	bcf	29,4	;volatile
  7617                           
  7618                           ;uart.c: 145:         RCSTAbits.CREN = 1;
  7619     0E5E  161D               	bsf	29,4	;volatile
  7620                           
  7621                           ;uart.c: 146:     }
  7622     0E5F  2E6E               	goto	i1l2461
  7623     0E60                     i1l216:	
  7624                           ;uart.c: 147:     else {
  7625                           
  7626                           
  7627                           ;uart.c: 148:         if (PIR1bits.RCIF) {
  7628     0E60  0020               	movlb	0	; select bank0
  7629     0E61  1E91               	btfss	17,5	;volatile
  7630     0E62  2E64               	goto	u208_21
  7631     0E63  2E65               	goto	u208_20
  7632     0E64                     u208_21:
  7633     0E64  2E6E               	goto	i1l2461
  7634     0E65                     u208_20:
  7635     0E65                     i1l2457:
  7636                           
  7637                           ;uart.c: 149:             *c = RCREG & 0x7f;
  7638     0E65  0870               	movf	uart_getc@c,w
  7639     0E66  0086               	movwf	6
  7640     0E67  0187               	clrf	7
  7641     0E68  0023               	movlb	3	; select bank3
  7642     0E69  0819               	movf	25,w	;volatile
  7643     0E6A  397F               	andlw	127
  7644     0E6B  0081               	movwf	1
  7645     0E6C                     i1l2459:
  7646                           
  7647                           ;uart.c: 150:             ok = 1;
  7648     0E6C  01F1               	clrf	uart_getc@ok
  7649     0E6D  0AF1               	incf	uart_getc@ok,f
  7650     0E6E                     i1l2461:
  7651                           
  7652                           ;uart.c: 153:     return ok;
  7653     0E6E  0871               	movf	uart_getc@ok,w
  7654     0E6F                     i1l219:
  7655     0E6F  0008               	return
  7656     0E70                     __end_of_uart_getc:
  7657                           
  7658                           	psect	text37
  7659     0EDA                     __ptext37:	
  7660 ;; *************** function _size *****************
  7661 ;; Defined at:
  7662 ;;		line 80 in file "main.c"
  7663 ;; Parameters:    Size  Location     Type
  7664 ;;		None
  7665 ;; Auto vars:     Size  Location     Type
  7666 ;;  s               2    5[COMMON] short 
  7667 ;; Return value:  Size  Location     Type
  7668 ;;                  2    2[COMMON] short 
  7669 ;; Registers used:
  7670 ;;		wreg, status,2, status,0, pclath, cstack
  7671 ;; Tracked objects:
  7672 ;;		On entry : 0/0
  7673 ;;		On exit  : 0/0
  7674 ;;		Unchanged: 0/0
  7675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7676 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7677 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7678 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7679 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7680 ;;Total ram usage:        5 bytes
  7681 ;; Hardware stack levels used: 1
  7682 ;; Hardware stack levels required when called: 1
  7683 ;; This function calls:
  7684 ;;		_setCTS
  7685 ;;		i1_addone
  7686 ;; This function is called by:
  7687 ;;		_high_isr
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           
  7691     0EDA                     _size:	
  7692                           ;psect for function _size
  7693                           
  7694     0EDA                     i1l2389:	
  7695                           ;incstack = 0
  7696                           ; Regs used in _size: [wreg+status,2+status,0+pclath+cstack]
  7697                           
  7698                           
  7699                           ;main.c: 82:     int16_t s = addone(tail) - head;
  7700     0EDA  0021               	movlb	1	; select bank1
  7701     0EDB  0869               	movf	(_tail+1)^(0+128),w
  7702     0EDC  00F1               	movwf	i1addone@i+1
  7703     0EDD  0868               	movf	_tail^(0+128),w
  7704     0EDE  00F0               	movwf	i1addone@i
  7705     0EDF  318D  2540  318E   	fcall	i1_addone
  7706     0EE2  0021               	movlb	1	; select bank1
  7707     0EE3  0863               	movf	_head^(0+128),w
  7708     0EE4  0270               	subwf	?i1_addone,w
  7709     0EE5  00F5               	movwf	size@s
  7710     0EE6  0864               	movf	(_head+1)^(0+128),w
  7711     0EE7  3B71               	subwfb	?i1_addone+1,w
  7712     0EE8  00F6               	movwf	size@s+1
  7713     0EE9                     i1l2391:
  7714                           
  7715                           ;main.c: 83:     if (s > 1024 -16) {
  7716     0EE9  0876               	movf	size@s+1,w
  7717     0EEA  3A80               	xorlw	128
  7718     0EEB  00F4               	movwf	??_size
  7719     0EEC  3083               	movlw	131
  7720     0EED  0274               	subwf	??_size,w
  7721     0EEE  1D03               	skipz
  7722     0EEF  2EF2               	goto	u204_25
  7723     0EF0  30F1               	movlw	241
  7724     0EF1  0275               	subwf	size@s,w
  7725     0EF2                     u204_25:
  7726     0EF2  1C03               	skipc
  7727     0EF3  2EF5               	goto	u204_21
  7728     0EF4  2EF6               	goto	u204_20
  7729     0EF5                     u204_21:
  7730     0EF5  2EFB               	goto	i1l2395
  7731     0EF6                     u204_20:
  7732     0EF6                     i1l2393:
  7733                           
  7734                           ;main.c: 84:         setCTS(1);
  7735     0EF6  3001               	movlw	1
  7736     0EF7  318D  251F  318E   	fcall	_setCTS
  7737                           
  7738                           ;main.c: 85:     }
  7739     0EFA  2EFF               	goto	i1l2397
  7740     0EFB                     i1l2395:
  7741                           
  7742                           ;main.c: 87:         setCTS(0);
  7743     0EFB  3000               	movlw	0
  7744     0EFC  318D  251F  318E   	fcall	_setCTS
  7745     0EFF                     i1l2397:
  7746                           
  7747                           ;main.c: 89:     return s;
  7748     0EFF  0876               	movf	size@s+1,w
  7749     0F00  00F3               	movwf	?_size+1
  7750     0F01  0875               	movf	size@s,w
  7751     0F02  00F2               	movwf	?_size
  7752     0F03                     i1l71:
  7753     0F03  0008               	return
  7754     0F04                     __end_of_size:
  7755                           
  7756                           	psect	text38
  7757     0D1F                     __ptext38:	
  7758 ;; *************** function _setCTS *****************
  7759 ;; Defined at:
  7760 ;;		line 51 in file "main.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;  b               1    wreg     _Bool 
  7763 ;; Auto vars:     Size  Location     Type
  7764 ;;  b               1    0[COMMON] _Bool 
  7765 ;; Return value:  Size  Location     Type
  7766 ;;                  1    wreg      void 
  7767 ;; Registers used:
  7768 ;;		wreg, status,0
  7769 ;; Tracked objects:
  7770 ;;		On entry : 0/0
  7771 ;;		On exit  : 0/0
  7772 ;;		Unchanged: 0/0
  7773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7775 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7777 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7778 ;;Total ram usage:        1 bytes
  7779 ;; Hardware stack levels used: 1
  7780 ;; This function calls:
  7781 ;;		Nothing
  7782 ;; This function is called by:
  7783 ;;		_size
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           
  7787     0D1F                     _setCTS:	
  7788                           ;psect for function _setCTS
  7789                           
  7790                           
  7791                           ;incstack = 0
  7792                           ; Regs used in _setCTS: [wreg+status,0]
  7793                           ;setCTS@b stored from wreg
  7794     0D1F  00F0               	movwf	setCTS@b
  7795     0D20                     i1l2181:
  7796                           
  7797                           ;main.c: 51: void setCTS(_Bool b);main.c: 52: {;main.c: 53:     PORTAbits.RA2 = b;
  7798     0D20  0C70               	rrf	setCTS@b,w
  7799     0D21  0020               	movlb	0	; select bank0
  7800     0D22  1C03               	skipc
  7801     0D23  110C               	bcf	12,2	;volatile
  7802     0D24  1803               	skipnc
  7803     0D25  150C               	bsf	12,2	;volatile
  7804     0D26                     i1l59:
  7805     0D26  0008               	return
  7806     0D27                     __end_of_setCTS:
  7807                           
  7808                           	psect	text39
  7809     07A4                     __ptext39:	
  7810 ;; *************** function _push *****************
  7811 ;; Defined at:
  7812 ;;		line 110 in file "main.c"
  7813 ;; Parameters:    Size  Location     Type
  7814 ;;  c               1    wreg     unsigned char 
  7815 ;; Auto vars:     Size  Location     Type
  7816 ;;  c               1    8[COMMON] unsigned char 
  7817 ;; Return value:  Size  Location     Type
  7818 ;;                  1    wreg      void 
  7819 ;; Registers used:
  7820 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7821 ;; Tracked objects:
  7822 ;;		On entry : 0/0
  7823 ;;		On exit  : 0/0
  7824 ;;		Unchanged: 0/0
  7825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7827 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7828 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7829 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7830 ;;Total ram usage:        7 bytes
  7831 ;; Hardware stack levels used: 1
  7832 ;; Hardware stack levels required when called: 1
  7833 ;; This function calls:
  7834 ;;		i1_addone
  7835 ;; This function is called by:
  7836 ;;		_high_isr
  7837 ;; This function uses a non-reentrant model
  7838 ;;
  7839                           
  7840     07A4                     _push:	
  7841                           ;psect for function _push
  7842                           
  7843                           
  7844                           ;incstack = 0
  7845                           ; Regs used in _push: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7846                           ;push@c stored from wreg
  7847     07A4  00F8               	movwf	push@c
  7848     07A5                     i1l2401:
  7849                           
  7850                           ;main.c: 110: void push(char c);main.c: 111: {;main.c: 112:     if ( addone(addone(tail)
      +                          ) == head) {
  7851     07A5  0021               	movlb	1	; select bank1
  7852     07A6  0869               	movf	(_tail+1)^(0+128),w
  7853     07A7  00F1               	movwf	i1addone@i+1
  7854     07A8  0868               	movf	_tail^(0+128),w
  7855     07A9  00F0               	movwf	i1addone@i
  7856     07AA  318D  2540  3187   	fcall	i1_addone
  7857     07AD  0871               	movf	?i1_addone+1,w
  7858     07AE  00F7               	movwf	_push$1505+1
  7859     07AF  0870               	movf	?i1_addone,w
  7860     07B0  00F6               	movwf	_push$1505
  7861                           
  7862                           ;main.c: 110: void push(char c);main.c: 111: {;main.c: 112:     if ( addone(addone(tail)
      +                          ) == head) {
  7863     07B1  0877               	movf	_push$1505+1,w
  7864     07B2  00F1               	movwf	i1addone@i+1
  7865     07B3  0876               	movf	_push$1505,w
  7866     07B4  00F0               	movwf	i1addone@i
  7867     07B5  318D  2540  3187   	fcall	i1_addone
  7868     07B8  0021               	movlb	1	; select bank1
  7869     07B9  0864               	movf	(_head+1)^(0+128),w
  7870     07BA  0671               	xorwf	?i1_addone+1,w
  7871     07BB  1D03               	skipz
  7872     07BC  2FBF               	goto	u205_25
  7873     07BD  0863               	movf	_head^(0+128),w
  7874     07BE  0670               	xorwf	?i1_addone,w
  7875     07BF                     u205_25:
  7876     07BF  1D03               	skipz
  7877     07C0  2FC2               	goto	u205_21
  7878     07C1  2FC3               	goto	u205_20
  7879     07C2                     u205_21:
  7880     07C2  2FC5               	goto	i1l2403
  7881     07C3                     u205_20:
  7882     07C3                     i1l79:	
  7883                           ;main.c: 115:         while (1)
  7884                           
  7885                           
  7886                           ;main.c: 116:             TRISEbits.TRISE2 = 1;
  7887     07C3  1510               	bsf	16,2	;volatile
  7888     07C4  2FC3               	goto	i1l79
  7889     07C5                     i1l2403:
  7890                           
  7891                           ;main.c: 119:         tail = addone(tail);
  7892     07C5  0869               	movf	(_tail+1)^(0+128),w
  7893     07C6  00F1               	movwf	i1addone@i+1
  7894     07C7  0868               	movf	_tail^(0+128),w
  7895     07C8  00F0               	movwf	i1addone@i
  7896     07C9  318D  2540  3187   	fcall	i1_addone
  7897     07CC  0871               	movf	?i1_addone+1,w
  7898     07CD  0021               	movlb	1	; select bank1
  7899     07CE  00E9               	movwf	(_tail+1)^(0+128)
  7900     07CF  0870               	movf	?i1_addone,w
  7901     07D0  00E8               	movwf	_tail^(0+128)
  7902     07D1                     i1l2405:
  7903                           
  7904                           ;main.c: 120:         queue[tail] = c;
  7905     07D1  30F0               	movlw	240
  7906     07D2  00F2               	movwf	??_push
  7907     07D3  3023               	movlw	35
  7908     07D4  00F3               	movwf	??_push+1
  7909     07D5  0868               	movf	_tail^(0+128),w
  7910     07D6  0772               	addwf	??_push,w
  7911     07D7  00F4               	movwf	??_push+2
  7912     07D8  0869               	movf	(_tail+1)^(0+128),w
  7913     07D9  3D73               	addwfc	??_push+1,w
  7914     07DA  00F5               	movwf	??_push+3
  7915     07DB  0874               	movf	??_push+2,w
  7916     07DC  0086               	movwf	6
  7917     07DD  0875               	movf	??_push+3,w
  7918     07DE  0087               	movwf	7
  7919     07DF  0878               	movf	push@c,w
  7920     07E0  0081               	movwf	1
  7921     07E1                     i1l2407:
  7922                           
  7923                           ;main.c: 121:         bytes_pushed++;
  7924     07E1  3001               	movlw	1
  7925     07E2  07E1               	addwf	_bytes_pushed^(0+128),f
  7926     07E3  3000               	movlw	0
  7927     07E4  3DE2               	addwfc	(_bytes_pushed+1)^(0+128),f
  7928     07E5                     i1l83:
  7929     07E5  0008               	return
  7930     07E6                     __end_of_push:
  7931                           
  7932                           	psect	text40
  7933     0D40                     __ptext40:	
  7934 ;; *************** function i1_addone *****************
  7935 ;; Defined at:
  7936 ;;		line 70 in file "main.c"
  7937 ;; Parameters:    Size  Location     Type
  7938 ;;  i               2    0[COMMON] short 
  7939 ;; Auto vars:     Size  Location     Type
  7940 ;;		None
  7941 ;; Return value:  Size  Location     Type
  7942 ;;                  2    0[COMMON] short 
  7943 ;; Registers used:
  7944 ;;		wreg, status,2, status,0
  7945 ;; Tracked objects:
  7946 ;;		On entry : 0/0
  7947 ;;		On exit  : 0/0
  7948 ;;		Unchanged: 0/0
  7949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7950 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7953 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7954 ;;Total ram usage:        2 bytes
  7955 ;; Hardware stack levels used: 1
  7956 ;; This function calls:
  7957 ;;		Nothing
  7958 ;; This function is called by:
  7959 ;;		_size
  7960 ;;		_push
  7961 ;; This function uses a non-reentrant model
  7962 ;;
  7963                           
  7964     0D40                     i1_addone:	
  7965                           ;psect for function i1_addone
  7966                           
  7967     0D40                     i1l2371:	
  7968                           ;incstack = 0
  7969                           ; Regs used in i1_addone: [wreg+status,2+status,0]
  7970                           
  7971                           
  7972                           ;main.c: 70: int16_t addone(int16_t i);main.c: 71: {;main.c: 72:     if (i == 1024 -1)
  7973     0D40  0A70               	incf	i1addone@i,w
  7974     0D41  3003               	movlw	3
  7975     0D42  1903               	skipnz
  7976     0D43  0671               	xorwf	i1addone@i+1,w
  7977     0D44  1D03               	btfss	3,2
  7978     0D45  2D47               	goto	u203_21
  7979     0D46  2D48               	goto	u203_20
  7980     0D47                     u203_21:
  7981     0D47  2D4B               	goto	i1l2377
  7982     0D48                     u203_20:
  7983     0D48                     i1l2373:
  7984                           
  7985                           ;main.c: 73:         return 0;
  7986     0D48  01F0               	clrf	?i1_addone
  7987     0D49  01F1               	clrf	?i1_addone+1
  7988     0D4A  2D51               	goto	i1l66
  7989     0D4B                     i1l2377:
  7990                           
  7991                           ;main.c: 74:     return i+1;
  7992     0D4B  0870               	movf	i1addone@i,w
  7993     0D4C  3E01               	addlw	1
  7994     0D4D  00F0               	movwf	?i1_addone
  7995     0D4E  3000               	movlw	0
  7996     0D4F  3D71               	addwfc	i1addone@i+1,w
  7997     0D50  00F1               	movwf	?i1_addone+1
  7998     0D51                     i1l66:
  7999     0D51  0008               	return
  8000     0D52                     __end_ofi1_addone:
  8001                           
  8002                           	psect	text41
  8003     0D33                     __ptext41:	
  8004 ;; *************** function _first *****************
  8005 ;; Defined at:
  8006 ;;		line 162 in file "main.c"
  8007 ;; Parameters:    Size  Location     Type
  8008 ;;		None
  8009 ;; Auto vars:     Size  Location     Type
  8010 ;;		None
  8011 ;; Return value:  Size  Location     Type
  8012 ;;                  1    wreg      unsigned char 
  8013 ;; Registers used:
  8014 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8015 ;; Tracked objects:
  8016 ;;		On entry : 0/0
  8017 ;;		On exit  : 0/0
  8018 ;;		Unchanged: 0/0
  8019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8022 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8023 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8024 ;;Total ram usage:        2 bytes
  8025 ;; Hardware stack levels used: 1
  8026 ;; This function calls:
  8027 ;;		Nothing
  8028 ;; This function is called by:
  8029 ;;		_high_isr
  8030 ;; This function uses a non-reentrant model
  8031 ;;
  8032                           
  8033     0D33                     _first:	
  8034                           ;psect for function _first
  8035                           
  8036     0D33                     i1l2409:	
  8037                           ;incstack = 0
  8038                           ; Regs used in _first: [wreg+fsr1l+fsr1h+status,2+status,0]
  8039                           
  8040                           
  8041                           ;main.c: 164:     return queue[head];
  8042     0D33  30F0               	movlw	240
  8043     0D34  00F0               	movwf	??_first
  8044     0D35  3023               	movlw	35
  8045     0D36  00F1               	movwf	??_first+1
  8046     0D37  0021               	movlb	1	; select bank1
  8047     0D38  0863               	movf	_head^(0+128),w
  8048     0D39  0770               	addwf	??_first,w
  8049     0D3A  0086               	movwf	6
  8050     0D3B  0864               	movf	(_head+1)^(0+128),w
  8051     0D3C  3D71               	addwfc	??_first+1,w
  8052     0D3D  0087               	movwf	7
  8053     0D3E  0801               	movf	1,w
  8054     0D3F                     i1l94:
  8055     0D3F  0008               	return
  8056     0D40                     __end_of_first:
  8057     007E                     btemp	set	126	;btemp
  8058     007E                     int$flags	set	126
  8059     007E                     wtemp0	set	126
  8060     23F0                     
  8061                           	psect	config
  8062                           
  8063                           ;Config register CONFIG1 @ 0x8007
  8064                           ;	Oscillator Selection
  8065                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  8066                           ;	Watchdog Timer Enable
  8067                           ;	WDTE = OFF, WDT disabled
  8068                           ;	Power-up Timer Enable
  8069                           ;	PWRTE = OFF, PWRT disabled
  8070                           ;	MCLR Pin Function Select
  8071                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  8072                           ;	Flash Program Memory Code Protection
  8073                           ;	CP = OFF, Program memory code protection is disabled
  8074                           ;	Data Memory Code Protection
  8075                           ;	CPD = OFF, Data memory code protection is disabled
  8076                           ;	Brown-out Reset Enable
  8077                           ;	BOREN = OFF, Brown-out Reset disabled
  8078                           ;	Clock Out Enable
  8079                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  8080                           ;	Internal/External Switchover
  8081                           ;	IESO = ON, Internal/External Switchover mode is enabled
  8082                           ;	Fail-Safe Clock Monitor Enable
  8083                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  8084     8007                     	org	32775
  8085     8007  39E2               	dw	14818
  8086                           
  8087                           ;Config register CONFIG2 @ 0x8008
  8088                           ;	Flash Memory Self-Write Protection
  8089                           ;	WRT = OFF, Write protection off
  8090                           ;	Voltage Regulator Capacitor Enable bit
  8091                           ;	VCAPEN = OFF, Vcap functionality is disabled on RA6.
  8092                           ;	PLL Enable
  8093                           ;	PLLEN = OFF, 4x PLL disabled
  8094                           ;	Stack Overflow/Underflow Reset Enable
  8095                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  8096                           ;	Brown-out Reset Voltage Selection
  8097                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  8098                           ;	Low Power Brown-Out Reset Enable Bit
  8099                           ;	LPBOR = OFF, Low power brown-out is disabled
  8100                           ;	In-Circuit Debugger Mode
  8101                           ;	DEBUG = OFF, In-Circuit Debugger disabled, ICSPCLK and ICSPDAT are general purpose I/O
      +                           pins
  8102                           ;	Low-Voltage Programming Enable
  8103                           ;	LVP = ON, Low-voltage programming enabled
  8104     8008                     	org	32776
  8105     8008  3EFF               	dw	16127

Data Sizes:
    Strings     197
    Constant    0
    Data        2
    BSS         45
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     59      74
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    do_blank@s	PTR unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[15]), STR_6(CODE[20]), 

    do_read@s	PTR unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[14]), 

    do_write@s	PTR unsigned char  size(2) Largest target is 15
		 -> STR_10(CODE[15]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    memset@dest	PTR void  size(2) Largest target is 1024
		 -> queue(BIGRAM[1024]), 

    memset@p	PTR unsigned char  size(2) Largest target is 1024
		 -> queue(BIGRAM[1024]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1134$buffer	PTR unsigned char  size(2) Largest target is 0

    S1134$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 1024
		 -> queue(BIGRAM[1024]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_1(CODE[4]), STR_11(CODE[42]), STR_12(CODE[28]), STR_4(CODE[10]), 
		 -> STR_5(CODE[8]), STR_8(CODE[7]), STR_9(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 48
		 -> do_blank@ads(BANK1[32]), do_init@s(BANK1[8]), do_read@ads(BANK1[16]), do_write@ads(BANK1[48]), 

    uart_getc@c	PTR unsigned char  size(1) Largest target is 1
		 -> high_isr@c(COMMON[1]), 

    uart_puts@p	PTR unsigned char  size(2) Largest target is 48
		 -> do_blank@ads(BANK1[32]), do_init@s(BANK1[8]), do_read@ads(BANK1[16]), do_write@ads(BANK1[48]), 
		 -> STR_10(CODE[15]), STR_2(CODE[15]), STR_3(CODE[29]), STR_6(CODE[20]), 
		 -> STR_7(CODE[14]), 

    uart_puts@s	PTR unsigned char  size(2) Largest target is 48
		 -> do_blank@ads(BANK1[32]), do_init@s(BANK1[8]), do_read@ads(BANK1[16]), do_write@ads(BANK1[48]), 
		 -> STR_10(CODE[15]), STR_2(CODE[15]), STR_3(CODE[29]), STR_6(CODE[20]), 
		 -> STR_7(CODE[14]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 42
		 -> STR_1(CODE[4]), STR_11(CODE[42]), STR_12(CODE[28]), STR_4(CODE[10]), 
		 -> STR_5(CODE[8]), STR_8(CODE[7]), STR_9(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 42
		 -> STR_1(CODE[4]), STR_11(CODE[42]), STR_12(CODE[28]), STR_4(CODE[10]), 
		 -> STR_5(CODE[8]), STR_8(CODE[7]), STR_9(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_1(CODE[4]), STR_11(CODE[42]), STR_12(CODE[28]), STR_4(CODE[10]), 
		 -> STR_5(CODE[8]), STR_8(CODE[7]), STR_9(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _high_isr in COMMON

    _high_isr->_push
    _size->i1_addone
    _push->i1_addone

Critical Paths under _main in BANK0

    _main->_do_write
    _uart_init->___lldiv
    ___lldiv->___lmul
    _do_write->_sprintf
    _pop->_addone
    _empty->_addone
    _do_read->_sprintf
    _do_init->_sprintf
    _do_blank->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _xtoa->_pad
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _clear->_memset

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_do_write

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _high_isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _high_isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _high_isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _high_isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _high_isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _high_isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _high_isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _high_isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _high_isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _high_isr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   47724
                                             79 BANK0      1     1      0
                                             57 BANK1      2     2      0
                              _clear
                           _do_blank
                            _do_init
                            _do_read
                           _do_write
                                _pop
                         _ports_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                           13     9      4     750
                                             26 BANK0     13     9      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ports_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _do_write                                            61    61      0   12361
                                             75 BANK0      4     4      0
                                              0 BANK1     57    57      0
                     _charToHexDigit
                                _pop
                          _read_port
                      _setup_address
                            _sprintf
                          _uart_puts
                         _write_port
 ---------------------------------------------------------------------------------
 (2) _write_port                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _pop                                                  3     3      0     816
                                              2 BANK0      3     3      0
                             _addone
                              _empty
 ---------------------------------------------------------------------------------
 (2) _empty                                                0     0      0     396
                             _addone
 ---------------------------------------------------------------------------------
 (3) _addone                                               2     0      2     396
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _charToHexDigit                                       1     1      0     110
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _do_read                                             24    24      0   11323
                                             75 BANK0      2     2      0
                                              0 BANK1     22    22      0
                          _read_port
                      _setup_address
                            _sprintf
                          _uart_putc
                          _uart_puts
 ---------------------------------------------------------------------------------
 (2) _uart_putc                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _do_init                                             10    10      0   10760
                                              0 BANK1     10    10      0
                            _sprintf
                      _uart_init_brg
                          _uart_puts
 ---------------------------------------------------------------------------------
 (2) _uart_init_brg                                       10     8      2      25
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _do_blank                                            40    40      0   11323
                                             75 BANK0      2     2      0
                                              0 BANK1     38    38      0
                          _read_port
                      _setup_address
                            _sprintf
                          _uart_puts
 ---------------------------------------------------------------------------------
 (2) _uart_puts                                            5     3      2     980
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    16      6    9682
                                             55 BANK0     20    14      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     4      3    8716
                                             48 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           15    13      2    8398
                                             34 BANK0     14    12      2
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                10     8      2    2633
                                             22 BANK0     10     8      2
                                _pad
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   9     7      2     533
                                              6 BANK0      9     7      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                12    10      2    3788
                                             22 BANK0     12    10      2
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  7     4      3    2228
                                             15 BANK0      7     4      3
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     6      1     997
                                              8 BANK0      7     6      1
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     682
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              7 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     448
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     452
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _setup_address                                        5     3      2     339
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _read_port                                            1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _clear                                                0     0      0     324
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     324
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _high_isr                                            5     5      0     581
                                              9 COMMON     5     5      0
                              _first
                               _push
                               _size
                          _uart_getc
 ---------------------------------------------------------------------------------
 (11) _uart_getc                                           3     3      0      80
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _size                                                5     3      2     215
                                              2 COMMON     5     3      2
                             _setCTS
                           i1_addone
 ---------------------------------------------------------------------------------
 (12) _setCTS                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _push                                                7     7      0     193
                                              2 COMMON     7     7      0
                           i1_addone
 ---------------------------------------------------------------------------------
 (12) i1_addone                                            2     0      2     148
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _first                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clear
     _memset
   _do_blank
     _read_port
     _setup_address
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
           _xtoa
             _pad
     _uart_puts
   _do_init
     _sprintf
     _uart_init_brg
     _uart_puts
   _do_read
     _read_port
     _setup_address
     _sprintf
     _uart_putc
     _uart_puts
   _do_write
     _charToHexDigit
     _pop
       _addone
       _empty
         _addone
     _read_port
     _setup_address
     _sprintf
     _uart_puts
     _write_port
   _pop
   _ports_init
   _uart_init
     ___lldiv
       ___lmul (ARG)
     ___lmul

 _high_isr (ROOT)
   _first
   _push
     i1_addone
   _size
     _setCTS
     i1_addone
   _uart_getc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     3B      4A       7       92.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      C8      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      C8      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Feb 11 10:28:35 2025

                        l62 07FD                          l66 0D76                          l75 0E30  
                        l91 0FFF                          l87 0FD0                          l98 0DA1  
              ___awdiv@sign 0026         ___wmul@multiplicand 0022                         l120 0ED9  
                       l104 0DD9                         l114 0FC4                         l211 0761  
                       l203 02C7                         l124 0468                         l132 03E8  
                       l140 0F59                         l117 0E4F                         l126 0475  
                       l222 0D7B                         l134 03EA                         l231 0F06  
                       l207 0720                         l223 0D7A                         l240 0F2D  
                       l232 0F05                         l144 0353                         l225 0D85  
                       l226 0D84                         l146 035E                         l236 0F1E  
                       l228 0D8A                         l404 0F8D                         l237 0F1D  
                       l426 066D                         l195 023F                         l197 024B  
                       l390 0E7B                         l198 0260                         l543 0612  
                       l199 0254                         l392 0E8F                         l556 06C1  
                       l900 021A                         l920 05B2                         l912 04ED  
                       l852 0DF6                         l935 0168                         l927 0096  
                       l929 00A2                         l954 0D63                         l882 0797  
                       l891 0193                         l947 0DBD                         l859 0E13  
                       l884 07A3                         l966 0713                         l974 0EB4  
                       l879 0777                         l887 0195                         l977 0003  
           ??_uart_init_brg 0022                         _abs 0D52                         _pad 0762  
                       _pop 0FC5                ___awmod@sign 0026                         wreg 0009  
               do_write@ads 00A0                        l2001 019C                        l2003 01A1  
                      l2011 01D2                        ?_abs 0027                        l2013 01E0  
                      l2021 01FE                        l2005 01BD                        l2101 0087  
                      l2023 0204                        l2015 01E7                        l2007 01BE  
                      l2031 0478                        l2111 00A5                        l2103 008F  
                      l2025 0208                        l2017 01EC                        l2009 01C2  
                      l2041 0491                        l2033 047A                        l2121 00CD  
                      l2113 00B5                        l2105 0093                        l2201 0FF7  
                      l2027 020F                        l2019 01F9                        l2051 04A8  
                      l2043 0497                        l2035 0486                        l2131 00FA  
                      l2123 00D2                        l2115 00BA                        l2107 0098  
                      l2211 0D8D                        l2203 0FFB                        l2061 04CF  
                      l2053 04AC                        l2045 049C                        l2037 0489  
                      l2141 0126                        l2133 0107                        l2125 00DA  
                      l2117 00C8                        l2221 0D9C                        l2213 0D93  
                      l2205 0FFC                        l2231 0F8E                        l2071 0557  
                      l2063 04DC                        l2047 04A0                        l2039 048E  
                      l2055 04B5                        l2143 0134                        l2151 0146  
                      l2127 00E4                        l2119 00CC                        l2311 0F23  
                      l2303 0F04                        l2207 0FFD                        l2241 0FA7  
                      l2233 0F90                        l2073 0568                        l2081 059A  
                      l2057 04C3                        l2065 04E1                        l2049 04A7  
                      l2137 0110                        l2129 00EE                        l2305 0F0B  
                      l2313 0D79                        l2161 0E14                        l2321 0F3D  
                      l2251 0FC1                        l2243 0FB7                        l2235 0F92  
                      l2083 05AE                        l2075 0570                        l2059 04CA  
                      l2139 011A                        l2155 0150                        l2171 0DA4  
                      l2307 0F10                        l2315 0D80                        l2227 0D9F  
                      l2219 0D96                        l2163 0E2D                        l2331 0F56  
                      l2323 0F40                        l2261 0E4D                        l2253 0E31  
                      l2245 0FBA                        l2237 0F96                        l2077 057D  
                      l2069 0555                        l2149 013D                        l2173 0DA9  
                      l2309 0F17                        l2501 0458                        l2093 0D70  
                      l2325 0F4F                        l2317 0F30                        l2421 0DC4  
                      l2413 0DBE                        l2341 0F76                        l2333 0F5A  
                      l2183 0DDA                        l2255 0E38                        l2247 0FBC  
                      l2239 0F9E                        l2079 0592                        l2175 0DB1  
                      l2503 045B                        l2271 0718                        l2511 035F  
                      l2087 0D64                        l2167 0E2F                        l2191 0FC5  
                      l2327 0F51                        l2319 0F3B                        l2431 0DCB  
                      l2423 0DC5                        l2415 0DC0                        l2351 0627  
                      l2343 0F85                        l2335 0F63                        l2185 0DE0  
                      l2257 0E45                        l2249 0FBF                        l2097 006E  
                      l2177 0DBB                        l2505 046A                        l2281 0742  
                      l2273 071D                        l2265 0714                        l2513 0361  
                      l2089 0D6D                        l2193 0FC8                        l2329 0F54  
                      l2601 0346                        l2441 0DD5                        l2433 0DCC  
                      l2425 0DC7                        l2417 0DC2                        l2361 0657  
                      l2353 0632                        l2337 0F67                        l2187 0DE6  
                      l2259 0E4B                        l2099 007F                        l2291 0DF9  
                      l2507 0470                        l2275 0721                        l2283 0744  
                      l2267 0714                        l2531 037C                        l2523 0368  
                      l2515 0363                        l2195 0FC8                        l2603 0355  
                      l2443 0DD6                        l2435 0DCE                        l2427 0DC8  
                      l2419 0DC3                        l2363 0658                        l2355 0636  
                      l2347 0613                        l2339 0F6F                        l2611 0232  
                      l2189 0DEA                        l2381 07E6                        l1901 05DD  
                      l2293 0DFD                        l2285 0759                        l2277 072E  
                      l2269 0716                        l2541 03A9                        l2533 0386  
                      l2525 036D                        l2517 0364                        l2197 0FD3  
                      l2445 0DD7                        l2437 0DD0                        l2429 0DC9  
                      l2365 065F                        l2357 063D                        l2349 0624  
                      l2621 024F                        l2613 0237                        l2701 054D  
                      l2383 07F5                        l1911 05F9                        l1903 05E1  
                      l2295 0DFF                        l2471 03EB                        l2287 075A  
                      l2279 073D                        l2551 03D4                        l2543 03C3  
                      l2535 038B                        l2527 0371                        l2199 0FE4  
                      l2447 0DD8                        l2439 0DD3                        l2359 064F  
                      l2367 0665                        l2631 0265                        l2615 023B  
                      l2607 021B                        l2385 07F8                        l1913 05FE  
                      l1905 05E5                        l1841 06C2                        l2297 0E01  
                      l2481 03FA                        l2473 03F2                        l2465 0EB5  
                      l2553 03DA                        l2545 03CA                        l2537 0390  
                      l2561 02CC                        l2641 02C3                        l2633 0268  
                      l2625 0258                        l2617 0243                        l2609 0229  
                      l2387 07FC                        l1907 05F4                        l1915 0604  
                      l1931 067B                        l1923 066E                        l1851 06FA  
                      l1843 06C8                        l2299 0E0B                        l2491 0418  
                      l2483 03FE                        l2467 0EC0                        l2555 03DF  
                      l2547 03CB                        l2539 03A1                        l2571 02D6  
                      l2563 02CD                        l2643 02C5                        l2635 02A2  
                      l2627 025C                        l2619 0247                        l1917 0609  
                      l1909 05F8                        l1941 0692                        l1933 067F  
                      l1925 0670                        l1853 070A                        l1845 06CD  
                      l1861 0EA1                        l2493 041D                        l2469 0ED1  
                      l2549 03D0                        l2581 02F0                        l2573 02DA  
                      l2557 02C8                        l2645 02C6                        l2637 02B4  
                      l2629 0260                        l1919 060E                        l1951 06AD  
                      l1943 0696                        l1935 0684                        l1927 0674  
                      l1847 06D2                        l1863 0EA6                        l1871 0E80  
                      l2495 0425                        l2487 0409                        l2479 03F5  
                      l2591 031B                        l2583 02FB                        l2559 02CA  
                      l2639 02C2                        l2671 0500                        l1881 05B5  
                      l1945 069A                        l1937 068A                        l1953 06B3  
                      l1929 0679                        l1849 06DC                        l1857 0E92  
                      l1961 0764                        l1873 0E85                        l1865 0E70  
                      l2497 0436                        l2489 0413                        l2593 0321  
                      l2585 0307                        l2577 02E5                        l2569 02D1  
                      l2681 0513                        l2673 0502                        l1891 05C9  
                      l1883 05B9                        l1955 06B8                        l1947 06A4  
                      l1939 068D                        l1859 0E95                        l1971 0784  
                      l1963 0769                        l1875 0E8B                        l1867 0E73  
                      l2499 0450                        l2595 0323                        l2587 0311  
                      l2579 02EA                        l2691 0536                        l2683 0520  
                      l2675 050F                        l2667 04EE                        l1893 05CD  
                      l1885 05BE                        l1957 06BD                        l1949 06A8  
                      l1981 0D58                        l1973 0789                        l1965 0770  
                      l1869 0E77                        l2597 033D                        l2589 0316  
                      l2693 053A                        l2685 0526                        l2677 0511  
                      l2669 04FD                        ?_pad 002F                        l1895 05CF  
                      l1887 05C0                        l1879 05B3                        l1975 079C  
                      l1967 0775                        l1991 0181                        l2695 0540  
                      l2687 0528                        l2679 0512                        l1897 05D5  
                      l1889 05C4                        l1977 0D52                        l1969 077A  
                      l1993 0185                        l1985 016B                        l2697 0544  
                      l2689 0530                        l1899 05D8                        l1979 0D57  
                      l1995 018A                        l1987 016D                        l2699 054A  
                      l1997 018F                        l1989 017C                        l1999 0199  
                      ?_pop 0070                        STR_1 10C1                        STR_2 1086  
                      STR_3 102A                        STR_4 10A3                        STR_5 10AD  
                      STR_6 1063                        STR_7 1095                        STR_8 10B5  
                      STR_9 10BC                        u1200 06C8                        u2000 064F  
                      u1201 06C7                        u2001 064E                        u1210 06CD  
                      u1211 06CC                        u1300 05C4                        u1220 06DC  
                      u2100 041D                        u2020 0665                        u1301 05C3  
                      u1221 06DB                        u2101 041C                        u2021 0664  
                      u2005 064B                        u1310 05D5                        u1230 06FA  
                      u2110 0468                        u1311 05D4                        u1231 06F9  
                      u2111 0467                        u2015 0659                        u1400 067F  
                      u1240 0EB4                        u2120 0470                        u2200 0353  
                      u1401 067E                        u1241 0EB3                        u2121 046F  
                      u2201 0352                        u1330 05E5                        u1410 068A  
                      u1250 0E77                        u2130 036D                        u2210 0232  
                      u1331 05E4                        u1411 0689                        u1235 06F6  
                      u1251 0E76                        u2131 036C                        u2211 0231  
                      u1500 0797                        u2140 0390                        u2300 0265  
                      u2220 0237                        u1325 05D9                        u1501 0796  
                      u2141 038F                        u2301 0264                        u2221 0236  
                      u1350 05F4                        u1430 069A                        u1510 079C  
                      u2150 03CA                        u2310 02AF                        u2230 023B  
                      u1351 05F3                        u1431 0699                        u1511 079B  
                      u2151 03C9                        u2231 023A                        u1440 06A4  
                      u1520 0D57                        u1600 01F9                        u1280 0E8B  
                      u2160 03E8                        u2240 0243                        u1345 05E6  
                      u1441 06A3                        u1425 068E                        u1521 0D56  
                      u1505 0793                        u1601 01F8                        u1281 0E8A  
                      u1265 0E7C                        u2161 03E7                        u2241 0242  
                      u1370 0604                        u1290 05B9                        u1610 01FE  
                      u1530 0172                        u2090 03FA                        u2170 02D6  
                      u2250 0247                        u1371 0603                        u1355 05F0  
                      u1291 05B8                        u1611 01FD                        u1531 0170  
                      u1275 0E81                        u2091 03F9                        u2171 02D5  
                      u2315 02AB                        u2251 0246                        u1380 0609  
                      u1460 06B3                        u1620 0204                        u1540 0173  
                      u1700 05AE                        u2260 024F                        u1381 0608  
                      u1365 05FA                        u1461 06B2                        u1445 06A0  
                      u1621 0203                        u1605 01F5                        u1701 05AD  
                      u2261 024E                        u1470 06B8                        u1390 0674  
                      u1550 0181                        u1630 0497                        u1710 0D6D  
                      u2190 0321                        u2270 0253                        u2350 0526  
                      u1471 06B7                        u1455 06A9                        u1391 0673  
                      u1551 0180                        u1631 0496                        u1711 0D6C  
                      u2191 0320                        u2271 0252                        u2351 0525  
                      u2407 0519                        u1800 0DF6                        u1480 0769  
                      u1560 018A                        u1640 04C3                        u1720 007F  
                      u2280 0258                        u2360 0536                        u1801 0DF5  
                      u1481 0768                        u1561 0189                        u1641 04C2  
                      u1721 007E                        u2417 0F31                        u2185 02FF  
                      u2281 0257                        u2361 0535                        u1490 0775  
                      u1570 01E0                        u1650 04CA                        u1730 00BA  
                      u1810 0FD0                        u2290 025C                        u2370 0540  
                      u1491 0774                        u1571 01DF                        u1651 04C9  
                      u1731 00B9                        u1811 0FCF                        u2427 0F38  
                      u2291 025B                        u2371 053F                        u1580 01E7  
                      u1660 04CF                        u1740 00CC                        u1900 0D80  
                      u1820 0D93                        u2380 054A                        u1581 01E6  
                      u1661 04CE                        u1645 04BF                        u1741 00CB  
                      u1901 0D7F                        u1821 0D92                        u2437 0F48  
                      u2381 0549                        u1590 01EC                        u1670 04DC  
                      u1750 00E4                        u1910 0D8A                        u1830 0D9C  
                      u1591 01EB                        u1575 01DC                        u1671 04DB  
                      u1751 00E3                        u2447 0727                        u1911 0D89  
                      u1831 0D9B                        u1680 04E1                        u1760 00EE  
                      u1920 0F67                        u1681 04E0                        u1761 00ED  
                      u2457 0736                        u1921 0F66                        u1690 0568  
                      u1770 011A                        u1850 071D                        u2467 0E35  
                      u1691 0567                        u1675 04D8                        u1771 0119  
                      u1851 071C                        u1860 0742                        u1780 0E2D  
                      u2477 0E3B                        u1845 0FAA                        u1861 0741  
                      u1781 0E2C                        u2397 0508                        u1790 0DBB  
                      u1870 0F0B                        u1950 0F85                        u2487 0E42  
                      u1791 0DBA                        u1871 0F0A                        u1951 0F84  
                      u1935 0F70                        u1880 0F23                        u1960 0624  
                      u2497 0E48                        u1881 0F22                        u1785 0E29  
                      u1961 0623                        u1945 0F77                        u1890 0F2D  
                      u1891 0F2C                        u1980 0636                        u1981 0635  
                      u1975 0628                        u1995 0637                        i1l71 0F03  
                      i1l66 0D51                        i1l83 07E5                        i1l59 0D26  
                      i1l94 0D3F                        i1l79 07C3           uart_init_brg@rate 0027  
                      abs@a 0027                        _dbuf 0120                        _head 00E3  
                      _main 04EE                        _dtoa 0169                        _tail 00E8  
                      _prec 00DD                        pad@i 0033                        _size 0EDA  
                      pad@p 0030                        fsr0h 0005                        fsr1h 0007  
                      indf0 0000                        fsr0l 0004                        indf1 0001  
                      fsr1l 0006                        _push 07A4                        btemp 007E  
                      _xtoa 0476                        pop@c 0024                        start 003C  
           ?_charToHexDigit 0070                do_write@addr 00D6                do_write@data 00D8  
              do_write@read 00D4                       ??_abs 0029                       ??_pad 0032  
                     ??_pop 0022                       ?_main 0070                       ?_dtoa 0036  
           __end_of___awdiv 0613                       STR_10 1077                       STR_11 1000  
                     STR_12 1047             __end_of___awmod 06C2                       ?_size 0072  
                     ?_push 0070             __end_of___lldiv 066E             ___awdiv@divisor 0020  
                     ?_xtoa 0036                       i1l111 003A                       i1l109 0037  
                     i1l214 0E59                       i1l216 0E60                       i1l219 0E6F  
           ___awdiv@counter 0025                       _RCREG 0199                vfpfcnvrt@fmt 0042  
                     _SPBRG 019B                       _PORTD 000F                       _TRISB 008D  
                     _TRISC 008E                       _TRISD 008F                       _TXREG 019A  
       ___lmul@multiplicand 0024             __end_of_do_init 0EDA             __end_of_do_read 03EB  
           ??_setup_address 0022                       _clear 07E6                       _flags 00E5  
                     _first 0D33                       _empty 0E14         read_prec_or_width@c 002B  
       read_prec_or_width@n 002C                       _fputc 06C2                       _fputs 0E90  
                     pad@fp 0035                       _width 00DB                       _queue 23F0  
                     _putch 0003                       dtoa@d 0036                       dtoa@i 0040  
                     dtoa@p 003C                       dtoa@s 003F                       dtoa@w 003D  
          __end_ofi1_addone 0D52                       size@s 0075                       push@c 0078  
                     status 0003                       wtemp0 007E             __end_of_sprintf 0E14  
                     xtoa@c 003D                       xtoa@d 0036                       xtoa@i 003E  
                     xtoa@p 003A                       xtoa@w 003B             __initialization 003E  
              __end_of_main 0553                __end_of_dtoa 021B                __end_of_size 0F04  
              __end_of_push 07E6                __end_of_xtoa 04EE                      ??_main 00D9  
                    ??_dtoa 0038              write_port@data 0022                      ??_size 0074  
                    ??_push 0072                      ??_xtoa 0038  __end_of_read_prec_or_width 05B3  
                    ?_clear 0070                      _ADCON1 009E                      ?_first 0070  
                    ?_empty 0070                      ?_fputc 0020                      ?_fputs 0028  
          ___awdiv@dividend 0022                      ?_putch 0070                      i1l2401 07A5  
                    i1l2403 07C5                      i1l2405 07D1                      i1l2181 0D20  
                    i1l2407 07E1                      i1l2409 0D33                      i1l2371 0D40  
                    i1l2451 0E52                      i1l2373 0D48                      i1l2461 0E6E  
                    i1l2453 0E57                      i1l2391 0EE9                      i1l2455 0E5D  
                    i1l2377 0D4B                      i1l2393 0EF6                      i1l2457 0E65  
                    i1l2449 0E51                      i1l2395 0EFB                      i1l2459 0E6C  
                    i1l2651 0008                      i1l2397 0EFF                      i1l2389 0EDA  
                    i1l2661 001F                      i1l2653 000A                      i1l2663 0027  
                    i1l2655 000F                      i1l2647 0006                      u203_20 0D48  
                    u203_21 0D47                      i1l2665 0034                      i1l2657 0014  
                    i1l2649 0007                      i1l2659 0018                      u204_20 0EF6  
                    u204_21 0EF5                      u204_25 0EF2                      u205_20 07C3  
                    u205_21 07C2                      u205_25 07BF                      u206_20 0E57  
                    u206_21 0E56                      u207_20 0E5D                      u207_21 0E5C  
                    u208_20 0E65                      u232_20 0014                      u208_21 0E64  
                    u232_21 0013                      u233_20 0027                      u233_21 0026  
                    u234_20 0034                      u234_21 0033                      u234_25 0030  
             vfpfcnvrt@done 0048                      _SPBRGH 019C            __end_of_do_blank 0476  
              vfprintf@cfmt 0055            __end_of_do_write 035F            __end_of_high_isr 003C  
                    ___lmul 0F5A                      _addone 0D64                      ___wmul 0E70  
                 ??___awdiv 0024                   ??___awmod 0024                   ??___lldiv 0034  
      read_prec_or_width@ap 0026                      _setCTS 0D1F                      _memset 0DDA  
          ___awdiv@quotient 0027             ___awmod@divisor 0020             ___awmod@counter 0025  
                    pad@buf 002F                   ??_do_init 006B                   ??_do_read 006B  
                    dtoa@fp 003B                      fputc@c 0020                      fputs@c 002B  
                    fputs@i 002C                      fputs@s 002E                      putch@c 0070  
          __end_of_vfprintf 0DBE                   ??_sprintf 005D                      xtoa@fp 0039  
   __end_of__initialization 0068              __pcstackCOMMON 0070                __pidataBANK1 07FE  
             __end_of_clear 07FE               __end_of_first 0D40               __end_of_empty 0E31  
             __end_of_fputc 0714               __end_of_fputs 0EB5               __end_of_putch 0004  
                 ?i1_addone 0070                     ??_clear 0028                     ??_first 0070  
                   ??_empty 0022                     ??_fputc 0023                     ??_fputs 0029  
                   ??_putch 0020                  __pbssBANK1 00DB                  __pbssBANK2 0120  
          ??_charToHexDigit 0020                  _cmd_active 00E7                  __pmaintext 04EE  
                   ?___lmul 0020                     ?_addone 0020                     ?___wmul 0020  
                __pintentry 0004                     ?_setCTS 0070                     ?_memset 0020  
            ___lmul@product 0028                  ??i1_addone 0072       __end_of_uart_init_brg 0762  
           setup_address@hi 0024                   ?_do_blank 0070                   ?_do_write 0070  
                 ?_high_isr 0070                     ___awdiv 05B3                     ___awmod 066E  
                   ___lldiv 0613                   ?_vfprintf 0050                     _do_init 0EB5  
                   _do_read 035F                     __ptext1 021B                     __ptext2 0F5A  
                   __ptext3 0613                     __ptext4 0DBE                     __ptext5 02C8  
                   __ptext6 0F2E                     __ptext7 0FC5                     __ptext8 0E14  
                   __ptext9 0D64                     addone@i 0020       read_prec_or_width@fmt 002E  
          ___awmod@dividend 0022           __end_of_read_port 0E50                  ??_do_blank 006B  
                   main@cmd 006F       __end_of_setup_address 0FC5                     _sprintf 0DF7  
                   clrloop0 0D28                  ??_do_write 006B                  ??_high_isr 0079  
      end_of_initialization 0068                     fputc@fp 0022                     setCTS@b 0070  
                   memset@c 0022                     memset@n 0024                     memset@p 0026  
                   fputs@fp 0028          _read_prec_or_width 0553           __end_of_uart_getc 0E70  
         __end_of_uart_init 02C8             ___lldiv@divisor 002C                  do_blank@ok 00C0  
         __end_of_uart_putc 0D8B           setup_address@addr 0020           __end_of_uart_puts 0F2E  
           ___lldiv@counter 0039           __end_of_vfpfcnvrt 0169                   _RCSTAbits 019D  
       ?_read_prec_or_width 0026            vfpfcnvrt@convarg 0049                  ??_vfprintf 0053  
               uart_getc@ok 0071                  _uart_ready 00E6                  do_read@ads 00A0  
                do_read@col 00B3                   _PORTAbits 000C                   _PORTBbits 000D  
                 _PORTCbits 000E                   _PORTEbits 0010                   _TRISAbits 008C  
                 _TRISCbits 008E                   _TRISEbits 0090        ??_read_prec_or_width 0028  
                _ports_init 0DBE                   i1addone@i 0070                  do_write@hi 00D3  
                do_write@lo 00D2                  high_isr@ok 007C                   _TXSTAbits 019E  
            __end_of___lmul 0F8E                 vfpfcnvrt@ap 0043              __end_of_addone 0D77  
               vfpfcnvrt@cp 004E                 vfpfcnvrt@fp 004D              __end_of___wmul 0E90  
               _BAUDCONbits 019F                  _write_port 0F2E              __end_of_setCTS 0D27  
            __end_of_memset 0DF7         start_initialization 003E                 __end_of_abs 0D64  
               __end_of_pad 07A4                 __end_of_pop 1000                 vfprintf@fmt 0050  
                  ??___lmul 0028                    ??_addone 0022                    ??___wmul 0024  
               __pdataBANK1 00E8                    ??_setCTS 0070                    ??_memset 0026  
                memset@dest 0020                 __pbssBIGRAM 23F0                   ___latbits 0003  
             __pcstackBANK0 0020               __pcstackBANK1 00A0                 ?_ports_init 0070  
                 _dtoa$1213 0039                _bytes_popped 00DF                _bytes_pushed 00E1  
                  ?___awdiv 0020                    ?___awmod 0020                    ?___lldiv 002C  
               ?_write_port 0070                    ?_do_init 0070                    ?_do_read 0070  
                  ?_sprintf 0057                   _read_port 0E31              ___wmul@product 0024  
                 clear_ram0 0D27                    _PIE1bits 0091                   _push$1505 0076  
           uart_init@factor 0046                   do_blank@s 00C1                    _PIR1bits 0011  
                uart_getc@c 0070                   _uart_getc 0E50                   _uart_init 021B  
                 _uart_putc 0D77                   _uart_puts 0F04                  uart_init@n 0042  
                uart_putc@c 0020                   _vfpfcnvrt 006C                  uart_puts@p 0023  
                uart_puts@s 0020                  _ADCON0bits 009D                    i1_addone 0D40  
         ___wmul@multiplier 0020                   do_write@c 00D5                   high_isr@c 007D  
                 do_write@s 00D0                   high_isr@n 007A           ___lmul@multiplier 0020  
                ?_read_port 0070                  vfprintf@ap 0052                  vfprintf@fp 0054  
                ?_uart_getc 0070                  ?_uart_init 003A                  ?_uart_putc 0070  
                ?_uart_puts 0020                  ?_vfpfcnvrt 0042                  sprintf@fmt 0057  
        uart_init@baud_rate 003A                    _do_blank 03EB               _uart_init_brg 0714  
                  __ptext10 0D8B                    __ptext11 035F                    __ptext20 0476  
                  __ptext12 0D77                    __ptext21 0553                    __ptext13 0EB5  
                  __ptext30 05B3                    __ptext22 0E70                    __ptext14 0714  
                  __ptext31 0F8E                    __ptext23 0169                    __ptext15 03EB  
                  __ptext40 0D40                    __ptext32 0E31                    __ptext24 0762  
                  __ptext16 0F04                    __ptext41 0D33                    __ptext33 07E6  
                  __ptext25 0E90                    __ptext17 0DF7                    __ptext34 0DDA  
                  __ptext26 06C2                    __ptext18 0DA2                    __ptext27 0003  
                  __ptext19 006C                    __ptext36 0E50                    __ptext28 0D52  
                  __ptext37 0EDA                    __ptext29 066E                    __ptext38 0D1F  
                  __ptext39 07A4                    _do_write 02C8                    _high_isr 0004  
           charToHexDigit@c 0020                do_blank@addr 00C4                do_blank@data 00C3  
                  do_init@s 00A0                    do_read@s 00B0                    int$flags 007E  
                  _vfprintf 0DA2                  _INTCONbits 000B              ?_uart_init_brg 0020  
            __pstringtext10 10B5              __pstringtext11 10BC              __pstringtext12 10C1  
            __pstringtext13 0000                ??_ports_init 0020                 ??_read_port 0020  
             _setup_address 0F8E                    intlevel1 0000                   sprintf@ap 005E  
          ___lldiv@dividend 0030                 do_blank@ads 00A0                 ??_uart_getc 0070  
               ??_uart_init 003E                 ??_uart_putc 0020                 ??_uart_puts 0022  
            _charToHexDigit 0D8B          __end_of_ports_init 0DDA                 ??_vfpfcnvrt 0044  
              ??_write_port 0020               __pstringtext1 1000               __pstringtext2 102A  
             __pstringtext3 1047               __pstringtext4 1063               __pstringtext5 1077  
             __pstringtext6 1086               __pstringtext7 1095               __pstringtext8 10A3  
             __pstringtext9 10AD                    sprintf@f 0060                    sprintf@s 005F  
          ___lldiv@quotient 0035                 do_read@addr 00B4                 do_init@rate 00A8  
               do_read@data 00B2              ?_setup_address 0020          __end_of_write_port 0F5A  
             read_port@data 0020      __end_of_charToHexDigit 0DA2  
